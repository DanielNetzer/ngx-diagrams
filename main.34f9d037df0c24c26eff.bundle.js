(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{107:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return BaseModel}));var _base_entity__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(371),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(23),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(63),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(29),_interfaces_event_interface__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(161);class BaseModel extends _base_entity__WEBPACK_IMPORTED_MODULE_0__.a{constructor(type,id,logPrefix="[Base]"){super(id,logPrefix),this._parent=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(null),this._parent$=this._parent.asObservable(),this._selected=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(!1),this._selected$=this._selected.asObservable(),this._painted=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(!1),this._painted$=this._painted.asObservable(),this._hovered=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(!1),this._hovered$=this._hovered.asObservable(),this._type=type}serialize(){return Object.assign(Object.assign({},super.serialize()),{type:this.getType()})}getParent(){return this._parent.getValue()}setParent(parent){this._parent.next(parent)}parentChanges(){return this._parent$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(p=>new _interfaces_event_interface__WEBPACK_IMPORTED_MODULE_4__.d(this,p)))}getPainted(){return this._painted.getValue()}setPainted(painted=!0){this._painted.next(painted)}getHovered(){return this._hovered.getValue()}setHovered(painted=!0){this._hovered.next(painted)}selectHovered(){return this._hovered$}paintChanges(){return this._painted$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(p=>new _interfaces_event_interface__WEBPACK_IMPORTED_MODULE_4__.c(this,p)))}getType(){return this._type}getSelected(){return this._selected.getValue()}selectSelected(){return this._selected.asObservable()}setSelected(selected=!0){this._selected.next(selected)}selectionChanges(){return this._selected$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(s=>new _interfaces_event_interface__WEBPACK_IMPORTED_MODULE_4__.e(this,s)),this.withLog("selectionChanges"))}getSelectedEntities(){return this._selected.value?[this]:[]}}},118:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return LinkModel}));var _base_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(107),_point_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(77),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(23);class LinkModel extends _base_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor(linkType="default",id){super(linkType,id),this.label=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(null),this.points=[new _point_model__WEBPACK_IMPORTED_MODULE_1__.a(this,{x:0,y:0}),new _point_model__WEBPACK_IMPORTED_MODULE_1__.a(this,{x:0,y:0})],this.extras={},this.sourcePort=null,this.targetPort=null}serialize(){var _a;const serializedPoints=this.points.map(point=>point.serialize()),label=null===(_a=this.getLabel())||void 0===_a?void 0:_a.serialize();return Object.assign(Object.assign({},super.serialize()),{name:this.getName(),sourcePort:this.getSourcePort().id,targetPort:this.getTargetPort().id,extras:this.getExtras(),points:serializedPoints,label:label})}setName(name){this.name=name}getName(){return this.name}getExtras(){return this.extras}setExtras(extras){this.extras=extras}destroy(){this.sourcePort&&this.sourcePort.removeLink(this),this.targetPort&&this.targetPort.removeLink(this),super.destroy()}doClone(lookupTable={},clone){clone.setPoints(this.getPoints().map(point=>point.clone(lookupTable))),this.sourcePort&&clone.setSourcePort(this.sourcePort.clone(lookupTable)),this.targetPort&&clone.setTargetPort(this.targetPort.clone(lookupTable))}isLastPoint(point){return this.getPointIndex(point)===this.points.length-1}getPointIndex(point){return this.points.indexOf(point)}getPointModel(id){for(const point of this.points)if(point.id===id)return point;return null}getPortForPoint(point){return null!==this.sourcePort&&this.getFirstPoint().id===point.id?this.sourcePort:null!==this.targetPort&&this.getLastPoint().id===point.id?this.targetPort:null}getPointForPort(port){return null!==this.sourcePort&&this.sourcePort.id===port.id?this.getFirstPoint():null!==this.targetPort&&this.targetPort.id===port.id?this.getLastPoint():null}getFirstPoint(){return this.points[0]}getLastPoint(){return this.points[this.points.length-1]}setSourcePort(port){null!==port&&port.addLink(this),null!==this.sourcePort&&this.sourcePort.removeLink(this),this.sourcePort=port}getSourcePort(){return this.sourcePort}getTargetPort(){return this.targetPort}setTargetPort(port){null!==port&&port.addLink(this),null!==this.targetPort&&this.targetPort.removeLink(this),this.targetPort=port}point({x:x,y:y}){return this.addPoint(this.generatePoint({x:x,y:y}))}getPoints(){return this.points}setPoints(points){points.forEach(point=>{point.setParent(this)}),this.points=points}setLabel(label){label.setParent(this),this.label.next(label)}selectLabel(){return this.label.asObservable()}getLabel(){return this.label.getValue()}resetLabel(){const currentLabel=this.label.getValue();currentLabel&&(currentLabel.setParent(null),currentLabel.setPainted(!1)),this.label.next(null)}removePoint(pointModel){this.points.splice(this.getPointIndex(pointModel),1)}removePointsBefore(pointModel){this.points.splice(0,this.getPointIndex(pointModel))}removePointsAfter(pointModel){this.points.splice(this.getPointIndex(pointModel)+1)}removeMiddlePoints(){this.points.length>2&&this.points.splice(0,this.points.length-2)}addPoint(pointModel,index=1){return pointModel.setParent(this),pointModel.setLocked(this.getLocked()),this.points.splice(index,0,pointModel),pointModel}generatePoint({x:x=0,y:y=0}){return new _point_model__WEBPACK_IMPORTED_MODULE_1__.a(this,{x:x,y:y})}setLocked(locked=!0){super.setLocked(locked),this.points.forEach(point=>point.setLocked(locked))}}},133:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AbstractFactory}));class AbstractFactory{constructor(type){this._type=type}get type(){return this._type}}},137:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return NodeModel}));var rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(23),_base_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(107),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(63),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(71),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29),_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(79);class NodeModel extends _base_model__WEBPACK_IMPORTED_MODULE_1__.a{constructor(nodeType="default",id,extras={},x=0,y=0,width=0,height=0,logPrefix="[Node]"){super(nodeType,id,logPrefix),this._extras=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(extras),this._ports=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a({}),this._dimensions=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a({width:width,height:height}),this._diagramEngine=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(null),this._coords=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a({x:x,y:y}),this.extras$=this._extras.asObservable(),this.ports$=this._ports.asObservable(),this.coords$=this._coords.asObservable(),this.dimensions$=this._dimensions.asObservable()}getDiagramEngine(){return this._diagramEngine.getValue()}selectDiagramEngine(){return this._diagramEngine.asObservable()}setDiagramEngine(diagramEngine){this._diagramEngine.next(diagramEngine)}getCoords(){return this._coords.getValue()}setCoords({x:x,y:y}){const{x:oldX,y:oldY}=this.getCoords();Object.values(this._ports.getValue()).forEach(port=>{Object.values(port.getLinks()).forEach(link=>{const point=link.getPointForPort(port),{x:pointX,y:pointY}=point.getCoords();point.setCoords({x:pointX+x-oldX,y:pointY+y-oldY})})}),this._coords.next({x:x,y:y})}serialize(){const serializedPorts=Object.values(this.getPorts()).map(port=>port.serialize());return Object.assign(Object.assign(Object.assign(Object.assign({},super.serialize()),{nodeType:this.getType(),extras:this.getExtras(),width:this.getWidth(),height:this.getHeight()}),this.getCoords()),{ports:serializedPorts})}transitionToCoords({x:x,y:y}){}getSelectedEntities(){let entities=super.getSelectedEntities();return this.getSelected()&&Object.values(this._ports.getValue()).forEach(port=>{const links=Object.values(port.getLinks());entities=entities.concat(links.map(link=>link.getPointForPort(port)))}),this.log("selectedEntities",entities),entities}coordsChanges(){return this.coords$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()))}selectCoords(){return this.coords$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}selectX(){return this.selectCoords().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(c=>c.x),this.withLog("selectX"),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}selectY(){return this.selectCoords().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(c=>c.y),this.withLog("selectY"),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}addPort(port){return port.setParent(this),this._ports.next(Object.assign(Object.assign({},this._ports.getValue()),{[port.id]:port})),port}removePort(port){const updatedPorts=this._ports.getValue();return delete updatedPorts[port.id],this._ports.next(Object.assign({},updatedPorts)),port.destroy(),port.id}getPort(id){return this._ports.value[id]}selectPorts(selector){return this.ports$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(ports=>Object(_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_5__.e)(ports)),this.withLog("selectPorts"))}getPorts(ids){return this._ports.getValue()}setDimensions({width:width,height:height}){this._dimensions.next({width:width,height:height})}getDimensions(){return this._dimensions.getValue()}dimensionChanges(){return this.dimensions$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(),this.withLog("DimensionChanges"))}getHeight(){return this._dimensions.getValue().height}setHeight(height){return this._dimensions.next({width:this.getWidth(),height:height})}getWidth(){return this._dimensions.getValue().width}setWidth(width){return this._dimensions.next({width:width,height:this.getHeight()})}selectWidth(){return this.dimensions$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(d=>d.width),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(),this.withLog("selectWidth"))}selectHeight(){return this.dimensions$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(d=>d.height),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(),this.withLog("selectHeight"))}setExtras(extras){this._extras.next(extras)}getExtras(){return this._extras.getValue()}selectExtras(selector){return this.extras$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}}},141:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return move_canvas_action_MoveCanvasAction})),__webpack_require__.d(__webpack_exports__,"d",(function(){return selecting_action_SelectingAction})),__webpack_require__.d(__webpack_exports__,"b",(function(){return links_created_action_LinkCreatedAction})),__webpack_require__.d(__webpack_exports__,"a",(function(){return invalid_link_destroyed_action_InvalidLinkDestroyed}));var base_action=__webpack_require__(87);class move_canvas_action_MoveCanvasAction extends base_action.a{constructor(mouseX,mouseY,diagramModel){super(mouseX,mouseY),this.initialOffsetX=diagramModel.getOffsetX(),this.initialOffsetY=diagramModel.getOffsetY()}}class selecting_action_SelectingAction extends base_action.a{constructor(mouseX,mouseY){super(mouseX,mouseY),this.mouseX2=mouseX,this.mouseY2=mouseY}getBoxDimensions(){return this.dimensions={left:this.mouseX2>this.mouseX?this.mouseX:this.mouseX2,top:this.mouseY2>this.mouseY?this.mouseY:this.mouseY2,width:Math.abs(this.mouseX2-this.mouseX),height:Math.abs(this.mouseY2-this.mouseY),right:this.mouseX2<this.mouseX?this.mouseX:this.mouseX2,bottom:this.mouseY2<this.mouseY?this.mouseY:this.mouseY2},this.dimensions}containsElement({x:x,y:y},diagramModel){const z=diagramModel.getZoomLevel()/100,dimensions=this.getBoxDimensions();return x*z+diagramModel.getOffsetX()>dimensions.left&&x*z+diagramModel.getOffsetX()<dimensions.right&&y*z+diagramModel.getOffsetY()>dimensions.top&&y*z+diagramModel.getOffsetY()<dimensions.bottom}}__webpack_require__(211);class links_created_action_LinkCreatedAction extends base_action.a{constructor(mouseX,mouseY,link){super(mouseX,mouseY),this.sourcePort=link.getSourcePort(),this.targetPort=link.getTargetPort(),this.link=link}getOutPortNode(){return this.sourcePort.getParent()}getInPortNode(){return this.targetPort.getParent()}}__webpack_require__(345);class invalid_link_destroyed_action_InvalidLinkDestroyed extends base_action.a{constructor(mouseX,mouseY,link){super(mouseX,mouseY),this.sourcePort=link.getSourcePort(),this.link=link}getOutPortNode(){return this.sourcePort.getParent()}}},157:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PortModel}));var _base_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(107),_link_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(118),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(23);class PortModel extends _base_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor(name,type,id,maximumLinks,linkType,magnetic=!0){super(type,id),this.name=name,this.magnetic$=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(magnetic),this.links$=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a({}),this.maximumLinks=maximumLinks,this.x$=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(0),this.y$=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(0),this.height$=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(0),this.width$=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(0),this.canCreateLinks$=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(!0),this.linkType=linkType}serialize(){return Object.assign(Object.assign(Object.assign({},super.serialize()),{name:this.getName(),linkType:this.getLinkType(),maximumLinks:this.getMaximumLinks(),type:this.getType(),magnetic:this.getMagnetic(),height:this.getHeight(),width:this.getWidth(),canCreateLinks:this.getCanCreateLinks()}),this.getCoords())}getNode(){return this.getParent()}getName(){return this.name}getCanCreateLinks(){const numberOfLinks=Object.keys(this.links$.getValue()).length;return!(this.maximumLinks&&numberOfLinks>=this.maximumLinks)&&this.canCreateLinks$.getValue()}getCoords(){return{x:this.getX(),y:this.getY()}}selectCanCreateLinks(){return this.canCreateLinks$.asObservable()}setCanCreateLinks(value){this.canCreateLinks$.next(value)}getMagnetic(){return this.magnetic$.getValue()}selectMagnetic(){return this.magnetic$.asObservable()}setMagnetic(magnetic){this.magnetic$.next(magnetic)}selectX(){return this.x$.asObservable()}selectY(){return this.y$.asObservable()}getY(){return this.y$.getValue()}getX(){return this.x$.getValue()}getHeight(){return this.height$.getValue()}getWidth(){return this.width$.getValue()}getMaximumLinks(){return this.maximumLinks}setMaximumLinks(maximumLinks){this.maximumLinks=maximumLinks}getLinkType(){return this.linkType}setLinkType(type){this.linkType=type}removeLink(link){const links=this.links$.getValue();delete links[link.id],this.links$.next(Object.assign({},links))}addLink(link){this.links$.next(Object.assign(Object.assign({},this.links$.value),{[link.id]:link}))}getLinks(){return this.links$.getValue()}selectLinks(){return this.links$.asObservable()}updateCoords({x:x,y:y,width:width,height:height}){this.x$.next(x),this.y$.next(y),this.width$.next(width),this.height$.next(height)}canLinkToPort(port){return!0}isLocked(){return super.getLocked()}createLinkModel(){if(this.getCanCreateLinks())return new _link_model__WEBPACK_IMPORTED_MODULE_1__.a}destroy(){super.destroy(),Object.values(this.getLinks()).forEach(link=>{link.destroy()})}}},158:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultPortModel}));var _models_port_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(157),_default_link_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(159);class DefaultPortModel extends _models_port_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor({isInput:isInput=!0,name:name="port",type:type="default",id:id=null,label:label=null,linkType:linkType="default",maximumLinks:maximumLinks=null}={}){super(name,type,id,null,linkType),this.in=isInput,this.label=label||name,this.in?this.setCanCreateLinks(!1):(this.setMaximumLinks(maximumLinks),this.setMagnetic(!1))}link(port){if(super.getCanCreateLinks()){const link=new _default_link_model__WEBPACK_IMPORTED_MODULE_1__.a({type:this.getLinkType()});return link.setSourcePort(this),link.setTargetPort(port),link}return null}createLinkModel(){if(super.getCanCreateLinks())return new _default_link_model__WEBPACK_IMPORTED_MODULE_1__.a({type:this.getLinkType()})}canLinkToPort(port){return!(port instanceof DefaultPortModel)||this.in!==port.in}}},159:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultLinkModel}));var _models_link_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(118),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(23);class DefaultLinkModel extends _models_link_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor({type:type="default"}={}){super(type),this.color$=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a("rgba(255,255,255,0.5)"),this.width$=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(3),this.curvyness$=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(50)}setWidth(width){this.width$.next(width)}setColor(color){this.color$.next(color)}selectWidth(){return this.width$.asObservable()}selectColor(){return this.color$.asObservable()}setCurvyness(curvyness){this.curvyness$.next(curvyness)}get color(){return this.color$.getValue()}get width(){return this.width$.getValue()}get curvyness(){return this.curvyness$.getValue()}}},161:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return BaseEvent})),__webpack_require__.d(__webpack_exports__,"b",(function(){return LockEvent})),__webpack_require__.d(__webpack_exports__,"d",(function(){return ParentChangeEvent})),__webpack_require__.d(__webpack_exports__,"e",(function(){return SelectionEvent})),__webpack_require__.d(__webpack_exports__,"c",(function(){return PaintedEvent}));var _utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(79);class BaseEvent{constructor(entity,options){this.id=Object(_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__.b)(),this.entity=entity,this.entityId=entity.id,this.firing=!0,this.stopPropagation=()=>this.firing=!1,this.propogate=options?options.propagate:null}}class LockEvent extends BaseEvent{constructor(entity,locked=!1){super(entity),this.locked=locked}}class ParentChangeEvent extends BaseEvent{constructor(entity,parent){super(entity),this.parent=parent}}class SelectionEvent extends BaseEvent{constructor(entity,selected){super(entity),this.isSelected=selected}}class PaintedEvent extends BaseEvent{constructor(entity,painted=!1){super(entity),this.isPainted=painted}}},1648:function(module,exports,__webpack_require__){"use strict";__webpack_require__(8),__webpack_require__(81),__webpack_require__(72),__webpack_require__(65),__webpack_require__(66),__webpack_require__(1649),__webpack_require__(1650),__webpack_require__(17),__webpack_require__(73);var _clientApi=__webpack_require__(94),_clientLogger=__webpack_require__(59),_configFilename=__webpack_require__(1651);function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}))),keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach((function(key){_defineProperty(target,key,source[key])})):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}return target}function _defineProperty(obj,key,value){return key in obj?Object.defineProperty(obj,key,{value:value,enumerable:!0,configurable:!0,writable:!0}):obj[key]=value,obj}(_configFilename.args||_configFilename.argTypes)&&_clientLogger.logger.warn("Invalid args/argTypes in config, ignoring.",JSON.stringify({args:_configFilename.args,argTypes:_configFilename.argTypes})),_configFilename.decorators&&_configFilename.decorators.forEach((function(decorator){return(0,_clientApi.addDecorator)(decorator,!1)})),(_configFilename.parameters||_configFilename.globals||_configFilename.globalTypes)&&(0,_clientApi.addParameters)(_objectSpread(_objectSpread({},_configFilename.parameters),{},{globals:_configFilename.globals,globalTypes:_configFilename.globalTypes}),!1),_configFilename.argTypesEnhancers&&_configFilename.argTypesEnhancers.forEach((function(enhancer){return(0,_clientApi.addArgTypesEnhancer)(enhancer)}))},1651:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"parameters",(function(){return parameters}));var _storybook_addon_docs_angular__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(703),_storybook_theming__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(15),_documentation_json__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(704);Object(_storybook_addon_docs_angular__WEBPACK_IMPORTED_MODULE_0__.setCompodocJson)(_documentation_json__WEBPACK_IMPORTED_MODULE_2__);var parameters={actions:{argTypesRegex:"^on[A-Z].*"},docs:{theme:_storybook_theming__WEBPACK_IMPORTED_MODULE_1__.themes.dark},options:{storySort:{order:["Getting Started","Node","Link","Port","Label","Actions","Plugins","Examples"]}}}},1653:function(module,exports,__webpack_require__){"use strict";(function(module){(0,__webpack_require__(105).configure)([__webpack_require__(1654),__webpack_require__(1658)],module,!1)}).call(this,__webpack_require__(190)(module))},1654:function(module,exports,__webpack_require__){var map={"./changelog.stories.mdx":1739,"./getting-started.stories.mdx":1655};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1654},1655:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(8),__webpack_require__(19),__webpack_require__(11),__webpack_require__(17),__webpack_require__(1);var _mdx_js_react__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(13),_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(160),_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(705),_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_7__),_assets_colors_svg__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(706),_assets_colors_svg__WEBPACK_IMPORTED_MODULE_8___default=__webpack_require__.n(_assets_colors_svg__WEBPACK_IMPORTED_MODULE_8__),_assets_comments_svg__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(707),_assets_comments_svg__WEBPACK_IMPORTED_MODULE_9___default=__webpack_require__.n(_assets_comments_svg__WEBPACK_IMPORTED_MODULE_9__),_assets_flow_svg__WEBPACK_IMPORTED_MODULE_11__=(__webpack_require__(1656),__webpack_require__(708)),_assets_flow_svg__WEBPACK_IMPORTED_MODULE_11___default=__webpack_require__.n(_assets_flow_svg__WEBPACK_IMPORTED_MODULE_11__),_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(709),_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_12___default=__webpack_require__.n(_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_12__),_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_14__=(__webpack_require__(1657),__webpack_require__(710)),_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_14___default=__webpack_require__.n(_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_14__);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.Meta,{title:"Getting Started",mdxType:"Meta"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("style",null,"\n  .subheading {\n    --mediumdark: '#999999';\n    font-weight: 900;\n    font-size: 13px;\n    color: #999;\n    letter-spacing: 6px;\n    line-height: 24px;\n    text-transform: uppercase;\n    margin-bottom: 12px;\n    margin-top: 40px;\n  }\n\n  .link-list {\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-template-rows: 1fr 1fr;\n    row-gap: 10px;\n  }\n\n  @media (min-width: 620px) {\n    .link-list {\n      row-gap: 20px;\n      column-gap: 20px;\n      grid-template-columns: 1fr 1fr;\n    }\n  }\n\n  @media all and (-ms-high-contrast:none) {\n  .link-list {\n      display: -ms-grid;\n      -ms-grid-columns: 1fr 1fr;\n      -ms-grid-rows: 1fr 1fr;\n    }\n  }\n\n  .link-item {\n    display: block;\n    padding: 20px 30px 20px 15px;\n    border: 1px solid white;\n    border-radius: 5px;\n    transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .link-item:hover {\n    border-color: #1EA7FD50;\n    transform: translate3d(0, -3px, 0);\n    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n  }\n\n  .link-item:active {\n    border-color: #1EA7FD;\n    transform: translate3d(0, 0, 0);\n  }\n\n  .link-item strong {\n    font-weight: 700;\n    display: block;\n    margin-bottom: 2px;\n  }\n\n  .link-item img {\n    height: 40px;\n    width: 40px;\n    margin-right: 15px;\n    flex: none;\n  }\n\n  .link-item span {\n    font-size: 14px;\n    line-height: 20px;\n  }\n\n  .tip {\n    display: inline-block;\n    border-radius: 1em;\n    font-size: 11px;\n    line-height: 12px;\n    font-weight: 700;\n    background: #E7FDD8;\n    color: #66BF3C;\n    padding: 4px 12px;\n    margin-right: 10px;\n    vertical-align: top;\n  }\n\n  .tip-wrapper {\n    font-size: 13px;\n    line-height: 20px;\n    margin-top: 40px;\n    margin-bottom: 40px;\n  }\n\n  .tip-wrapper code {\n    font-size: 12px;\n    display: inline-block;\n  }\n\n\n"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("h1",{id:"welcome-to-ngx-diagrams"},"Welcome to NGX-Diagrams"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"NGX-Diagrams is a diagrams engine system, built on top of Angular and RxJS, which takes the idea of graphic visualization to the next level in terms of performance, rendering optimization, and customizability."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"NGX-Digrams encourages creativity. It allows you to create any node, link, label, or even a custom entity and provide powerful tools with a moderate learning curve, suitable for both experienced and inexperienced developers alike."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"Browse example stories now by navigating to them in the sidebar.\nView their code in the ",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"./stories")," directory to learn how they work."),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("div",{class:"subheading"},"Installation"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"Install from the NPM repository using yarn or npm:"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-shell"}),"yarn add ngx-diagrams\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-shell"}),"npm install ngx-diagrams\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,"On production environemnt add the following:"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("p",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("inlineCode",{parentName:"p"},"main.ts")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("pre",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("code",_extends({parentName:"pre"},{className:"language-typescript"}),"import { enableProdMode } from '@angular/core';\nimport { enableDiagramProdMode } from 'ngx-diagrams';\n\n...\nif(environemnt.production) {\n    enableDiagramProdMode();\n    enableProdMode();\n}\n...\n")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("div",{class:"subheading"},"Configure"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("div",{class:"link-list"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",{class:"link-item",href:"https://storybook.js.org/docs/react/api/presets",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("img",{src:_assets_plugin_svg__WEBPACK_IMPORTED_MODULE_12___default.a,alt:"plugin"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",null,"Presets for popular entities"),"Easy setup for default entities")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",{class:"link-item",href:"https://storybook.js.org/docs/react/configure/webpack",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("img",{src:_assets_stackalt_svg__WEBPACK_IMPORTED_MODULE_14___default.a,alt:"Build"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",null,"Build customized entities"),"How to customize and create your own entities")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",{class:"link-item",href:"https://storybook.js.org/docs/react/configure/styling-and-css",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("img",{src:_assets_colors_svg__WEBPACK_IMPORTED_MODULE_8___default.a,alt:"colors"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",null,"Styling"),"How to configure CSS for the diagram")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",{class:"link-item",href:"https://storybook.js.org/docs/react/get-started/setup#configure-storybook-for-your-stack",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("img",{src:_assets_flow_svg__WEBPACK_IMPORTED_MODULE_11___default.a,alt:"flow"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",null,"Plugins"),"Plugins and libraries for additional functionality"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("div",{class:"subheading"},"Learn"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("div",{class:"link-list"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",{class:"link-item",href:"https://github.com/DanielNetzer/ngx-diagrams",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("img",{src:_assets_code_brackets_svg__WEBPACK_IMPORTED_MODULE_7___default.a,alt:"code"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",null,"GitHub project"),"View the source and add issues")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("a",{class:"link-item",href:"https://gitter.im/ngx-diagrams/community",target:"_blank"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("img",{src:_assets_comments_svg__WEBPACK_IMPORTED_MODULE_9___default.a,alt:"comments"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("span",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)("strong",null,"Gitter chat"),"Chat with maintainers and the community"))))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Getting Started",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_6__.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_5__.mdx)(MDXContent,null))}}),__webpack_exports__.default=componentMeta},1656:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/direction.b770f9af.svg"},1657:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/repo.6d496322.svg"},1658:function(module,exports,__webpack_require__){var map={"./examples/examples.stories.ts":1737,"./label/label.stories.ts":1733,"./link/link.stories.ts":1736,"./node/node.stories.ts":1735,"./port/port.stories.ts":1734};function webpackContext(req){var id=webpackContextResolve(req);return __webpack_require__(id)}function webpackContextResolve(req){if(!__webpack_require__.o(map,req)){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}return map[req]}webpackContext.keys=function webpackContextKeys(){return Object.keys(map)},webpackContext.resolve=webpackContextResolve,module.exports=webpackContext,webpackContext.id=1658},1733:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Custom",(function(){return Custom}));var client=__webpack_require__(105),common=__webpack_require__(12),public_api=__webpack_require__(3),tslib_es6=__webpack_require__(4),core=__webpack_require__(0);let custom_label_component_CustomLabelComponent=class CustomLabelComponent extends public_api.DefaultLabelModel{constructor(){super("custom")}};custom_label_component_CustomLabelComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"custom-label",template:(__webpack_require__(330).default||__webpack_require__(330)).length?__webpack_require__(330).default||__webpack_require__(330):"",styles:[(__webpack_require__(331).default||__webpack_require__(331)).length?__webpack_require__(331).default||__webpack_require__(331):""]}),Object(tslib_es6.b)("design:paramtypes",[])],custom_label_component_CustomLabelComponent);class custom_factory_CustomLabelFactory extends public_api.AbstractLabelFactory{constructor(resolver,renderer){super("custom-label"),this.resolver=resolver,this.renderer=renderer}generateWidget(label,labelHost){const componentRef=labelHost.createComponent(this.getRecipe()),rootNode=componentRef.location.nativeElement;return this.renderer.setStyle(rootNode,"position","absolute"),this.renderer.setAttribute(rootNode,"data-labelid",label.id),label.onEntityDestroy().subscribe(()=>{componentRef.destroy()}),Object.entries(label).forEach(([key,value])=>{componentRef.instance[key]=value}),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(custom_label_component_CustomLabelComponent)}getNewInstance(){return new public_api.DefaultLabelModel}}var _a,_b,_c;let diagram_component_CustomLabelDiagramComponent=class CustomLabelDiagramComponent{constructor(diagramEngine,resolver,renderer){this.diagramEngine=diagramEngine,this.resolver=resolver,this.renderer=renderer}ngOnInit(){const nodesDefaultDimensions={height:200,width:200};this.diagramEngine.registerDefaultFactories(),this.diagramEngine.registerLabelFactory(new custom_factory_CustomLabelFactory(this.resolver,this.renderer)),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions(nodesDefaultDimensions);const outport1=node1.addOutPort({name:"outport1"}),node2=new public_api.DefaultNodeModel;node2.setCoords({x:1500,y:300}),node2.setDimensions(nodesDefaultDimensions);const inport=node2.addInPort({name:"inport2"}),link=outport1.link(inport),label=new public_api.DefaultLabelModel("I'm a custom label","custom-label");link.setLabel(label),link.setLocked(),this.diagramModel.addAll(node1,node2,link),this.diagramModel.getDiagramEngine().zoomToFit()}};var default_component_a;diagram_component_CustomLabelDiagramComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(175).default||__webpack_require__(175)).length?__webpack_require__(175).default||__webpack_require__(175):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?_a:Object,"function"==typeof(_b=void 0!==core.ComponentFactoryResolver&&core.ComponentFactoryResolver)?_b:Object,"function"==typeof(_c=void 0!==core.Renderer2&&core.Renderer2)?_c:Object])],diagram_component_CustomLabelDiagramComponent);let default_component_DefaultLabelStoryComponent=class DefaultLabelStoryComponent{constructor(diagramEngine){this.diagramEngine=diagramEngine}ngOnInit(){const nodesDefaultDimensions={height:200,width:200};this.diagramEngine.registerDefaultFactories(),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions(nodesDefaultDimensions);const outport1=node1.addOutPort({name:"outport1"}),node2=new public_api.DefaultNodeModel;node2.setCoords({x:1e3,y:300}),node2.setDimensions(nodesDefaultDimensions);const inport=node2.addInPort({name:"inport2"}),link=outport1.link(inport),label=new public_api.DefaultLabelModel("I'm a label");link.setLabel(label),link.setLocked(),this.diagramModel.addAll(node1,node2,link),this.diagramModel.getDiagramEngine().zoomToFit()}};default_component_DefaultLabelStoryComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(175).default||__webpack_require__(175)).length?__webpack_require__(175).default||__webpack_require__(175):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(default_component_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?default_component_a:Object])],default_component_DefaultLabelStoryComponent);__webpack_exports__.default={title:"Label",component:public_api.DefaultLinkComponent,parameters:{docs:{iframeHeight:"400px"}},decorators:[Object(client.moduleMetadata)({declarations:[public_api.DefaultNodeComponent,custom_label_component_CustomLabelComponent,default_component_DefaultLabelStoryComponent,public_api.DefaultLinkComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent],imports:[common.a,public_api.NgxDiagramsModule],entryComponents:[public_api.DefaultNodeComponent,public_api.DefaultLinkComponent,custom_label_component_CustomLabelComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent]})]};const Default=(args=>({component:default_component_DefaultLabelStoryComponent,props:args})).bind({}),Custom=(args=>({component:diagram_component_CustomLabelDiagramComponent,props:args})).bind({});Default.parameters=Object.assign({storySource:{source:"DefaultLinkTemplate.bind({})"}},Default.parameters),Custom.parameters=Object.assign({storySource:{source:"CustomLinkTemplate.bind({})"}},Custom.parameters)},1734:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Custom",(function(){return Custom}));var client=__webpack_require__(105),common=__webpack_require__(12),public_api=__webpack_require__(3),tslib_es6=__webpack_require__(4),core=__webpack_require__(0),takeUntil=__webpack_require__(63),map=__webpack_require__(29);let custom_component_CustomPortComponent=class CustomPortComponent extends public_api.DefaultPortModel{constructor(){super()}createLinkModel(){return new public_api.DefaultLinkModel}};custom_component_CustomPortComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"custom-port",template:(__webpack_require__(336).default||__webpack_require__(336)).length?__webpack_require__(336).default||__webpack_require__(336):"",styles:[(__webpack_require__(337).default||__webpack_require__(337)).length?__webpack_require__(337).default||__webpack_require__(337):""]}),Object(tslib_es6.b)("design:paramtypes",[])],custom_component_CustomPortComponent);class custom_factory_CustomPortFactory extends public_api.AbstractPortFactory{constructor(resolver,renderer){super("custom-port"),this.resolver=resolver,this.renderer=renderer}generateWidget(port,portsHost){const componentRef=portsHost.createComponent(this.getRecipe()),rootNode=componentRef.location.nativeElement;return this.renderer.setAttribute(rootNode,"data-portid",port.id),this.renderer.setAttribute(rootNode,"data-name",port.getName()),port.in?this.renderer.addClass(rootNode,"in"):this.renderer.addClass(rootNode,"out"),Object.entries(port).forEach(([key,value])=>{componentRef.instance[key]=value}),this.isConnected(port).subscribe(connected=>{connected?this.renderer.addClass(rootNode,"connected"):this.renderer.removeClass(rootNode,"connected")}),port.onEntityDestroy().subscribe(e=>{componentRef.destroy()}),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(custom_component_CustomPortComponent)}getNewInstance(initialConfig){return new public_api.DefaultPortModel(Object.assign({isInput:!0,name:"unknown"},initialConfig))}isConnected(port){return port.selectLinks().pipe(Object(takeUntil.a)(port.onEntityDestroy()),Object(map.a)(links=>Object.keys(links).length>0))}}var _a,_b,_c;let diagram_component_CustomPortDiagramComponent=class CustomPortDiagramComponent{constructor(diagramEngine,resolver,renderer){this.diagramEngine=diagramEngine,this.resolver=resolver,this.renderer=renderer}ngOnInit(){this.diagramEngine.registerDefaultFactories(),this.diagramEngine.registerPortFactory(new custom_factory_CustomPortFactory(this.resolver,this.renderer)),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions({height:200,width:200});const port1=new public_api.DefaultPortModel({type:"custom-port"});node1.addPort(port1),this.diagramModel.addAll(node1),this.diagramModel.getDiagramEngine().zoomToFit()}};var default_component_a;diagram_component_CustomPortDiagramComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(178).default||__webpack_require__(178)).length?__webpack_require__(178).default||__webpack_require__(178):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?_a:Object,"function"==typeof(_b=void 0!==core.ComponentFactoryResolver&&core.ComponentFactoryResolver)?_b:Object,"function"==typeof(_c=void 0!==core.Renderer2&&core.Renderer2)?_c:Object])],diagram_component_CustomPortDiagramComponent);let default_component_DefaultPortComponent=class DefaultPortComponent{constructor(diagramEngine){this.diagramEngine=diagramEngine}ngOnInit(){this.diagramEngine.registerDefaultFactories(),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions({height:200,width:200}),node1.addInPort({name:"inport1"}),node1.addOutPort({name:"outport1"}),this.diagramModel.addAll(node1),this.diagramModel.getDiagramEngine().zoomToFit()}};default_component_DefaultPortComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(178).default||__webpack_require__(178)).length?__webpack_require__(178).default||__webpack_require__(178):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(default_component_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?default_component_a:Object])],default_component_DefaultPortComponent);__webpack_exports__.default={title:"Port",component:public_api.DefaultNodeComponent,parameters:{docs:{iframeHeight:"400px"}},decorators:[Object(client.moduleMetadata)({declarations:[public_api.DefaultNodeComponent,custom_component_CustomPortComponent,public_api.DefaultLinkComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent],imports:[common.a,public_api.NgxDiagramsModule],entryComponents:[public_api.DefaultNodeComponent,public_api.DefaultLinkComponent,custom_component_CustomPortComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent]})]};const Default=(args=>({component:default_component_DefaultPortComponent,props:args})).bind({}),Custom=(args=>({component:diagram_component_CustomPortDiagramComponent,props:args})).bind({});Custom.args={nodeHeight:200,nodeWidth:200},Default.parameters=Object.assign({storySource:{source:"DefaultNodeTemplate.bind({})"}},Default.parameters),Custom.parameters=Object.assign({storySource:{source:"CustomNodeTemplate.bind({})"}},Custom.parameters)},1735:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Custom",(function(){return Custom}));var _a,client=__webpack_require__(105),common=__webpack_require__(12),public_api=__webpack_require__(3),tslib_es6=__webpack_require__(4),core=__webpack_require__(0),ReplaySubject=__webpack_require__(205);let custom_component_CustomNodeComponent=class CustomNodeComponent extends public_api.DefaultNodeModel{constructor(){super("custom-node"),this.destroyed$=new ReplaySubject.a(1),this.nodeContent="Pick me!"}ngOnInit(){this.selectPorts().subscribe(ports=>{ports.forEach(port=>{port.getPainted()||(port.setLocked(this.getLocked()),this.generatePort(port))})}),this.selectSelected().subscribe(selected=>{this.nodeContent=selected?"Thank you 🙏":"Pick me!"})}ngOnDestroy(){this.destroyed$.next(!0),this.destroyed$.complete()}generatePort(port){this.diagramEngine.generateWidgetForPort(port,this.portsLayer)}};Object(tslib_es6.a)([Object(core.ViewChild)("portsLayer",{read:core.ViewContainerRef,static:!0}),Object(tslib_es6.b)("design:type","function"==typeof(_a=void 0!==core.ViewContainerRef&&core.ViewContainerRef)?_a:Object)],custom_component_CustomNodeComponent.prototype,"portsLayer",void 0),custom_component_CustomNodeComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"custom-node",template:(__webpack_require__(334).default||__webpack_require__(334)).length?__webpack_require__(334).default||__webpack_require__(334):"",styles:[(__webpack_require__(335).default||__webpack_require__(335)).length?__webpack_require__(335).default||__webpack_require__(335):""],changeDetection:core.ChangeDetectionStrategy.Default}),Object(tslib_es6.b)("design:paramtypes",[])],custom_component_CustomNodeComponent);class custom_factory_CustomNodeFactory extends public_api.AbstractNodeFactory{constructor(resolver,renderer){super("custom-node"),this.resolver=resolver,this.renderer=renderer}generateWidget(diagramEngine,node,nodesHost){const componentRef=nodesHost.createComponent(this.getRecipe()),rootNode=componentRef.location.nativeElement;return this.renderer.setStyle(rootNode,"position","absolute"),this.renderer.setStyle(rootNode,"display","block"),this.renderer.setAttribute(rootNode,"data-nodeid",node.id),node.selectCoords().subscribe(({x:x,y:y})=>{this.renderer.setStyle(rootNode,"left",x+"px"),this.renderer.setStyle(rootNode,"top",y+"px")}),node.selectionChanges().subscribe(e=>{e.isSelected?this.renderer.addClass(rootNode,"selected"):this.renderer.removeClass(rootNode,"selected")}),node.onEntityDestroy().subscribe(e=>{componentRef.destroy()}),Object.entries(node).forEach(([key,value])=>{componentRef.instance[key]=value}),componentRef.instance.setDiagramEngine(diagramEngine),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(custom_component_CustomNodeComponent)}getNewInstance(initialConfig){return new public_api.DefaultNodeModel(...initialConfig)}}var diagram_component_a,_b,_c;let diagram_component_CustomNodeDiagramComponent=class CustomNodeDiagramComponent{constructor(diagramEngine,resolver,renderer){this.diagramEngine=diagramEngine,this.resolver=resolver,this.renderer=renderer,this.nodeHeight=200,this.nodeWidth=200}ngOnInit(){const nodesDefaultDimensions={height:this.nodeHeight,width:this.nodeWidth};this.diagramEngine.registerDefaultFactories(),this.diagramEngine.registerNodeFactory(new custom_factory_CustomNodeFactory(this.resolver,this.renderer)),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel({type:"custom-node"});node1.setCoords({x:500,y:300}),node1.setDimensions(nodesDefaultDimensions),this.diagramModel.addAll(node1),this.diagramModel.getDiagramEngine().zoomToFit()}ngOnChanges(e){this.diagramModel&&(e.nodeHeight&&Object.values(this.diagramModel.getNodes()).forEach(node=>{node.setHeight(e.nodeHeight.currentValue)}),e.nodeWidth)}};var default_component_a;Object(tslib_es6.a)([Object(core.Input)(),Object(tslib_es6.b)("design:type",Object)],diagram_component_CustomNodeDiagramComponent.prototype,"nodeHeight",void 0),Object(tslib_es6.a)([Object(core.Input)(),Object(tslib_es6.b)("design:type",Object)],diagram_component_CustomNodeDiagramComponent.prototype,"nodeWidth",void 0),diagram_component_CustomNodeDiagramComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(177).default||__webpack_require__(177)).length?__webpack_require__(177).default||__webpack_require__(177):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(diagram_component_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?diagram_component_a:Object,"function"==typeof(_b=void 0!==core.ComponentFactoryResolver&&core.ComponentFactoryResolver)?_b:Object,"function"==typeof(_c=void 0!==core.Renderer2&&core.Renderer2)?_c:Object])],diagram_component_CustomNodeDiagramComponent);let default_component_DefaultNodeComponent=class DefaultNodeComponent{constructor(diagramEngine){this.diagramEngine=diagramEngine}ngOnInit(){this.diagramEngine.registerDefaultFactories(),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions({height:200,width:200}),this.diagramModel.addAll(node1),this.diagramModel.getDiagramEngine().zoomToFit()}ngOnChanges(e){this.diagramModel&&(e.nodeHeight&&Object.values(this.diagramModel.getNodes()).forEach(node=>{node.setHeight(e.nodeHeight.currentValue)}),e.nodeWidth)}};default_component_DefaultNodeComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(177).default||__webpack_require__(177)).length?__webpack_require__(177).default||__webpack_require__(177):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(default_component_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?default_component_a:Object])],default_component_DefaultNodeComponent);__webpack_exports__.default={title:"Node",component:public_api.DefaultNodeComponent,parameters:{docs:{iframeHeight:"400px"}},decorators:[Object(client.moduleMetadata)({declarations:[public_api.DefaultNodeComponent,custom_component_CustomNodeComponent,public_api.DefaultLinkComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent],imports:[common.a,public_api.NgxDiagramsModule],entryComponents:[public_api.DefaultNodeComponent,public_api.DefaultLinkComponent,custom_component_CustomNodeComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent]})]};const Default=(args=>({component:default_component_DefaultNodeComponent,props:args})).bind({}),Custom=(args=>({component:diagram_component_CustomNodeDiagramComponent,props:args})).bind({});Custom.args={nodeHeight:200,nodeWidth:200},Default.parameters=Object.assign({storySource:{source:"DefaultNodeTemplate.bind({})"}},Default.parameters),Custom.parameters=Object.assign({storySource:{source:"CustomNodeTemplate.bind({})"}},Custom.parameters)},1736:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Default",(function(){return Default})),__webpack_require__.d(__webpack_exports__,"Custom",(function(){return Custom}));var _a,client=__webpack_require__(105),common=__webpack_require__(12),public_api=__webpack_require__(3),tslib_es6=__webpack_require__(4),core=__webpack_require__(0),BehaviorSubject=__webpack_require__(23),combineLatest=__webpack_require__(180);let custom_link_component_CustomLinkComponent=class CustomLinkComponent extends public_api.DefaultLinkModel{constructor(){super("custom-link"),this._path$=new BehaviorSubject.a(null),this.path$=this._path$.asObservable(),this.hover=!1}ngAfterViewInit(){const firstPCoords$=this.getFirstPoint().selectCoords(),lastPCoords$=this.getLastPoint().selectCoords();Object(combineLatest.b)([firstPCoords$,lastPCoords$]).subscribe(([firstPCoords,lastPCoords])=>{const points=[firstPCoords,lastPCoords],xOrY=Math.abs(firstPCoords.x-lastPCoords.x)>Math.abs(firstPCoords.y-lastPCoords.y)?"x":"y";let isStraight=!1;Math.abs(points[0][xOrY]-points[1][xOrY])<150&&(isStraight=!0);const path=Object(public_api.generateCurvePath)(firstPCoords,lastPCoords,isStraight?0:200);this._path$.next(path)})}calcCenterOfPath(){const firstPointCoords=this.getFirstPoint().getCoords(),lastPointCoords=this.getLastPoint().getCoords();return{x:(firstPointCoords.x+lastPointCoords.x)/2,y:(firstPointCoords.y+lastPointCoords.y)/2}}deleteLink(){this.destroy()}};Object(tslib_es6.a)([Object(core.ViewChild)("labelLayer",{read:core.ViewContainerRef,static:!0}),Object(tslib_es6.b)("design:type","function"==typeof(_a=void 0!==core.ViewContainerRef&&core.ViewContainerRef)?_a:Object)],custom_link_component_CustomLinkComponent.prototype,"labelLayer",void 0),custom_link_component_CustomLinkComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"custom-link",template:(__webpack_require__(332).default||__webpack_require__(332)).length?__webpack_require__(332).default||__webpack_require__(332):"",styles:[(__webpack_require__(333).default||__webpack_require__(333)).length?__webpack_require__(333).default||__webpack_require__(333):""]}),Object(tslib_es6.b)("design:paramtypes",[])],custom_link_component_CustomLinkComponent);class custom_factory_CustomLinkFactory extends public_api.AbstractLinkFactory{constructor(resolver,renderer){super("custom-link"),this.resolver=resolver,this.renderer=renderer}generateWidget(diagramEngine,link,linksHost){const componentRef=linksHost.createComponent(this.getRecipe());link.setWidth(1),link.setColor("pink");const rootNode=componentRef.location.nativeElement;return this.renderer.setStyle(rootNode,"position","absolute"),this.renderer.setAttribute(rootNode,"data-linkid",link.id),link.onEntityDestroy().subscribe(()=>{componentRef.destroy()}),Object.entries(link).forEach(([key,value])=>{componentRef.instance[key]=value}),componentRef.instance.diagramEngine=diagramEngine,componentRef.instance.setPainted(!0),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(custom_link_component_CustomLinkComponent)}getNewInstance(){return new public_api.DefaultLinkModel({type:"custom-link"})}}var diagram_component_a,_b,_c;let diagram_component_CustomLinkDiagramComponent=class CustomLinkDiagramComponent{constructor(diagramEngine,resolver,renderer){this.diagramEngine=diagramEngine,this.resolver=resolver,this.renderer=renderer,this.nodeHeight=200,this.nodeWidth=200}ngOnInit(){const nodesDefaultDimensions={height:this.nodeHeight,width:this.nodeWidth};this.diagramEngine.registerDefaultFactories(),this.diagramEngine.registerLinkFactory(new custom_factory_CustomLinkFactory(this.resolver,this.renderer)),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions(nodesDefaultDimensions);const outport1=node1.addOutPort({name:"outport1",linkType:"custom-link",maximumLinks:3}),node2=new public_api.DefaultNodeModel;node2.setCoords({x:1e3,y:300}),node2.setDimensions(nodesDefaultDimensions);const inport=node2.addInPort({name:"inport2"}),link=new public_api.DefaultLinkModel({type:"custom-link"});link.setSourcePort(outport1),link.setTargetPort(inport),this.diagramModel.addAll(node1,node2,link),this.diagramModel.getDiagramEngine().zoomToFit()}};var default_component_a;Object(tslib_es6.a)([Object(core.Input)(),Object(tslib_es6.b)("design:type",Object)],diagram_component_CustomLinkDiagramComponent.prototype,"nodeHeight",void 0),Object(tslib_es6.a)([Object(core.Input)(),Object(tslib_es6.b)("design:type",Object)],diagram_component_CustomLinkDiagramComponent.prototype,"nodeWidth",void 0),diagram_component_CustomLinkDiagramComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(176).default||__webpack_require__(176)).length?__webpack_require__(176).default||__webpack_require__(176):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(diagram_component_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?diagram_component_a:Object,"function"==typeof(_b=void 0!==core.ComponentFactoryResolver&&core.ComponentFactoryResolver)?_b:Object,"function"==typeof(_c=void 0!==core.Renderer2&&core.Renderer2)?_c:Object])],diagram_component_CustomLinkDiagramComponent);let default_component_DefaultLinkStoryComponent=class DefaultLinkStoryComponent{constructor(diagramEngine){this.diagramEngine=diagramEngine}ngOnInit(){const nodesDefaultDimensions={height:200,width:200};this.diagramEngine.registerDefaultFactories(),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions(nodesDefaultDimensions);const outport1=node1.addOutPort({name:"outport1"}),node2=new public_api.DefaultNodeModel;node2.setCoords({x:1e3,y:0}),node2.setDimensions(nodesDefaultDimensions);const inport=node2.addInPort({name:"inport2"});for(let index=0;index<2;index++){const nodeLoop=new public_api.DefaultNodeModel;nodeLoop.setCoords({x:1e3,y:300+300*index}),nodeLoop.setDimensions(nodesDefaultDimensions),nodeLoop.addInPort({name:"inport"+(index+3)}),this.diagramModel.addNode(nodeLoop)}const link=outport1.link(inport);link.setLocked(),this.diagramModel.addAll(node1,node2,link),this.diagramModel.getDiagramEngine().zoomToFit()}};default_component_DefaultLinkStoryComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(176).default||__webpack_require__(176)).length?__webpack_require__(176).default||__webpack_require__(176):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(default_component_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?default_component_a:Object])],default_component_DefaultLinkStoryComponent);__webpack_exports__.default={title:"Link",component:public_api.DefaultLinkComponent,parameters:{docs:{iframeHeight:"400px"}},decorators:[Object(client.moduleMetadata)({declarations:[public_api.DefaultNodeComponent,custom_link_component_CustomLinkComponent,default_component_DefaultLinkStoryComponent,public_api.DefaultLinkComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent],imports:[common.a,public_api.NgxDiagramsModule],entryComponents:[public_api.DefaultNodeComponent,public_api.DefaultLinkComponent,custom_link_component_CustomLinkComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent]})]};const Default=(args=>({component:default_component_DefaultLinkStoryComponent,props:args})).bind({}),Custom=(args=>({component:diagram_component_CustomLinkDiagramComponent,props:args})).bind({});Default.parameters=Object.assign({storySource:{source:"DefaultLinkTemplate.bind({})"}},Default.parameters),Custom.parameters=Object.assign({storySource:{source:"CustomLinkTemplate.bind({})"}},Custom.parameters)},1737:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"Basic",(function(){return Basic})),__webpack_require__.d(__webpack_exports__,"Serialization",(function(){return Serialization}));var _a,client=__webpack_require__(105),common=__webpack_require__(12),public_api=__webpack_require__(3),dist=__webpack_require__(344),tslib_es6=__webpack_require__(4),core=__webpack_require__(0);let basic_component_BasicExampleStoryComponent=class BasicExampleStoryComponent{constructor(diagramEngine){this.diagramEngine=diagramEngine}ngOnInit(){const nodesDefaultDimensions={height:200,width:200};this.diagramEngine.registerDefaultFactories(),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions(nodesDefaultDimensions);const outport1=node1.addOutPort({name:"outport1"}),node2=new public_api.DefaultNodeModel;node2.setCoords({x:1e3,y:0}),node2.setDimensions(nodesDefaultDimensions);const inport=node2.addInPort({name:"inport2"});for(let index=0;index<2;index++){const nodeLoop=new public_api.DefaultNodeModel;nodeLoop.setCoords({x:1e3,y:300+300*index}),nodeLoop.setDimensions(nodesDefaultDimensions),nodeLoop.addInPort({name:"inport"+(index+3)}),this.diagramModel.addNode(nodeLoop)}const link=outport1.link(inport);link.setLocked(),this.diagramModel.addAll(node1,node2,link),this.diagramModel.getDiagramEngine().zoomToFit()}};var serialization_component_a,_b;basic_component_BasicExampleStoryComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>',styles:[(__webpack_require__(174).default||__webpack_require__(174)).length?__webpack_require__(174).default||__webpack_require__(174):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_a=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?_a:Object])],basic_component_BasicExampleStoryComponent);let serialization_component_SerializationExampleStoryComponent=class SerializationExampleStoryComponent{constructor(diagramEngine){this.diagramEngine=diagramEngine,this.serialized=new core.EventEmitter}ngOnInit(){const nodesDefaultDimensions={height:200,width:200};this.diagramEngine.registerDefaultFactories(),this.diagramModel=this.diagramEngine.createDiagram();const node1=new public_api.DefaultNodeModel;node1.setCoords({x:500,y:300}),node1.setDimensions(nodesDefaultDimensions);const outport1=node1.addOutPort({name:"outport1"}),node2=new public_api.DefaultNodeModel;node2.setCoords({x:1e3,y:0}),node2.setDimensions(nodesDefaultDimensions);const inport=node2.addInPort({name:"inport2"});for(let index=0;index<2;index++){const nodeLoop=new public_api.DefaultNodeModel;nodeLoop.setCoords({x:1e3,y:300+300*index}),nodeLoop.setDimensions(nodesDefaultDimensions),nodeLoop.addInPort({name:"inport"+(index+3)}),this.diagramModel.addNode(nodeLoop)}const link=outport1.link(inport);link.setLocked(),this.diagramModel.addAll(node1,node2,link),this.diagramModel.getDiagramEngine().zoomToFit()}serialize(){const serializedModel=this.diagramModel.serialize();this.serialized.emit(serializedModel)}clearGraph(){this.diagramModel.reset()}};Object(tslib_es6.a)([Object(core.Output)(),Object(tslib_es6.b)("design:type","function"==typeof(serialization_component_a=void 0!==core.EventEmitter&&core.EventEmitter)?serialization_component_a:Object)],serialization_component_SerializationExampleStoryComponent.prototype,"serialized",void 0),serialization_component_SerializationExampleStoryComponent=Object(tslib_es6.a)([Object(core.Component)({selector:"app-root",template:'\n\t\t<div class="action-bar">\n\t\t\t<button (click)="serialize()">Serialize Diagram Model</button>\n\t\t\t<button (click)="clearGraph()">Clear Graph</button>\n\t\t</div>\n\t\t<ngdx-diagram class="demo-diagram" [model]="diagramModel"></ngdx-diagram>\n\t',styles:[(__webpack_require__(174).default||__webpack_require__(174)).length?__webpack_require__(174).default||__webpack_require__(174):""]}),Object(tslib_es6.b)("design:paramtypes",["function"==typeof(_b=void 0!==public_api.DiagramEngine&&public_api.DiagramEngine)?_b:Object])],serialization_component_SerializationExampleStoryComponent);__webpack_exports__.default={title:"Examples",component:public_api.DefaultLinkComponent,parameters:{docs:{iframeHeight:"400px"}},decorators:[Object(client.moduleMetadata)({declarations:[public_api.DefaultNodeComponent,basic_component_BasicExampleStoryComponent,serialization_component_SerializationExampleStoryComponent,public_api.DefaultLinkComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent],imports:[common.a,public_api.NgxDiagramsModule],entryComponents:[public_api.DefaultNodeComponent,public_api.DefaultLinkComponent,public_api.DefaultLabelComponent,public_api.DefaultPortComponent]})]};const Basic=(args=>({component:basic_component_BasicExampleStoryComponent,props:args})).bind({}),Serialization=(args=>({component:serialization_component_SerializationExampleStoryComponent,props:Object.assign(Object.assign({},args),{serialized:Object(dist.action)("serialized")})})).bind({});Basic.parameters=Object.assign({storySource:{source:"BasicDiagramTemplate.bind({})"}},Basic.parameters),Serialization.parameters=Object.assign({storySource:{source:"SerializationDiagramTemplate.bind({})"}},Serialization.parameters)},1739:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,"__page",(function(){return __page}));__webpack_require__(8),__webpack_require__(19),__webpack_require__(11),__webpack_require__(17),__webpack_require__(1);var esm=__webpack_require__(13),blocks=__webpack_require__(160);function _extends(){return(_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target}).apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(null==source)return{};var key,i,target=function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}(source,excluded);if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++)key=sourceSymbolKeys[i],excluded.indexOf(key)>=0||Object.prototype.propertyIsEnumerable.call(source,key)&&(target[key]=source[key])}return target}var layoutProps={};function MDXContent(_ref){var components=_ref.components,props=_objectWithoutProperties(_ref,["components"]);return Object(esm.mdx)("wrapper",_extends({},layoutProps,props,{components:components,mdxType:"MDXLayout"}),Object(esm.mdx)(blocks.Meta,{title:"Changelog",mdxType:"Meta"}),Object(esm.mdx)(blocks.Description,{mdxType:"Description"},"# [3.1.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v3.0.1...v3.1.0) (2020-11-12)\n\n\n### Features\n\n* **serialization:** from and to json ([6fbd0be](https://github.com/DanielNetzer/ngx-diagrams/commit/6fbd0bea4009b3add591df80ff2e1143f1066e90))\n* **serialization:** interface for all serialized models ([4a3539a](https://github.com/DanielNetzer/ngx-diagrams/commit/4a3539a0a9b9c51d1dd0ce6da02b6aabffece70a))\n* **serialization:** serialize graph to json ([df6aa19](https://github.com/DanielNetzer/ngx-diagrams/commit/df6aa193f4a9ea1f8d886272e05756a622a56137)), closes [#17](https://github.com/DanielNetzer/ngx-diagrams/issues/17)\n\n## [3.0.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v3.0.0...v3.0.1) (2020-11-12)\n\n\n### Bug Fixes\n\n* upgrade multiple dependencies with Snyk ([fec3a5b](https://github.com/DanielNetzer/ngx-diagrams/commit/fec3a5bbe919348f4aaad8ae6c214232b5cd856d))\n* upgrade snyk from 1.414.1 to 1.415.0 ([3ed91ef](https://github.com/DanielNetzer/ngx-diagrams/commit/3ed91ef88f1cca8fb2b0035a96fec6cc2d81248b))\n\n# [3.0.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.7...v3.0.0) (2020-11-07)\n\n\n### Bug Fixes\n\n* **links model:** auto resolve the correct model for ports links ([cf6d074](https://github.com/DanielNetzer/ngx-diagrams/commit/cf6d0740e8c0177af38c50b85ce9c991daddd8e0))\n* **magnets:** resseting all previously defined magnets on selection models ([63d17f8](https://github.com/DanielNetzer/ngx-diagrams/commit/63d17f80a52b826444a253cf7c08dcedc91fb6d9))\n* **points:** reselecting points and moving links ([f123e05](https://github.com/DanielNetzer/ngx-diagrams/commit/f123e05ba2ca97bb9b17d1bce0e5b9443cf4c03e))\n* **ports:** multiple bugs and rendering races ([636aa39](https://github.com/DanielNetzer/ngx-diagrams/commit/636aa394af6dea42e7ba46b10bbb62d3150e9bc7))\n* **ports coords:** on initialization ports coords will align based on their true position ([22dd4bd](https://github.com/DanielNetzer/ngx-diagrams/commit/22dd4bd8ed710386d4be70ad26cf675868d3fc1b))\n\n\n### Documentation\n\n* **changelog:** added to stories ([c43b109](https://github.com/DanielNetzer/ngx-diagrams/commit/c43b109d8c943308f804dbf1e88874ba271cd4ec))\n* **custom link:** updated models and template according to changes ([1d09e0f](https://github.com/DanielNetzer/ngx-diagrams/commit/1d09e0f8a1347a9c4b7d2f6295cd1802eb57a0b0))\n\n\n### Features\n\n* **magnetic ports:** on link drag when getting to 30px proximity, magnetize ([a696474](https://github.com/DanielNetzer/ngx-diagrams/commit/a696474c69538ec04d84f5aa7ca0672da48ef264))\n\n\n### BREAKING CHANGES\n\n* **changelog:** models changes\n* **custom link:** models changes\n* **magnets:** models changes\n* **points:** models changes\n\n## [2.18.7](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.6...v2.18.7) (2020-10-25)\n\n\n### Bug Fixes\n\n* **default link:** using public members selectColor ([99f5ab9](https://github.com/DanielNetzer/ngx-diagrams/commit/99f5ab987d33d9caff341603b6a9075b14582db4))\n\n## [2.18.6](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.5...v2.18.6) (2020-06-10)\n\n\n### Bug Fixes\n\n* upgrade multiple dependencies with Snyk ([6b502d8](https://github.com/DanielNetzer/ngx-diagrams/commit/6b502d85fec81eb886d75a66d02928e5db2b6779))\n* upgrade snyk from 1.317.0 to 1.319.0 ([5e12d4a](https://github.com/DanielNetzer/ngx-diagrams/commit/5e12d4a31f897bed7080fc8c313e8a8ec2fc4bbb))\n* upgrade snyk from 1.317.0 to 1.319.0 ([a81d4aa](https://github.com/DanielNetzer/ngx-diagrams/commit/a81d4aacc0a3a30e92411909db030c99b28d4a87))\n* upgrade tslib from 1.11.1 to 1.11.2 ([48dbaf7](https://github.com/DanielNetzer/ngx-diagrams/commit/48dbaf7956c4e5173f0f97e0e6a627bf8de23034))\n* upgrade tslib from 1.11.1 to 1.11.2 ([98c84ca](https://github.com/DanielNetzer/ngx-diagrams/commit/98c84caadfd54a74ab224f720bf3a188848191bf))\n\n## [2.18.5](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.4...v2.18.5) (2020-06-10)\n\n\n### Bug Fixes\n\n* upgrade ngx-markdown from 9.0.0 to 9.1.0 ([bc89e53](https://github.com/DanielNetzer/ngx-diagrams/commit/bc89e53ed6a238f817812e3b03d8549217d8bc2f))\n\n## [2.18.4](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.3...v2.18.4) (2020-06-02)\n\n\n### Bug Fixes\n\n* **link model:** lock child points when locking link ([c07cf37](https://github.com/DanielNetzer/ngx-diagrams/commit/c07cf374b906240a3d1368cf1639c2c78c09c2d5))\n\n## [2.18.3](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.2...v2.18.3) (2020-06-02)\n\n\n### Bug Fixes\n\n* upgrade multiple dependencies with Snyk ([55fd568](https://github.com/DanielNetzer/ngx-diagrams/commit/55fd568e9d20a719b9308ea15eb9288b69346ded))\n* upgrade multiple dependencies with Snyk ([b62f06b](https://github.com/DanielNetzer/ngx-diagrams/commit/b62f06bd15724d2fc118d250d429d0e320cbfd6a))\n\n## [2.18.2](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.1...v2.18.2) (2020-05-07)\n\n\n### Bug Fixes\n\n* **links:** new links wont be created if canLinkToPort fail ([2a1ea0f](https://github.com/DanielNetzer/ngx-diagrams/commit/2a1ea0fba7b6ded4197b6de5f18187b6c0dee16e))\n\n## [2.18.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.18.0...v2.18.1) (2020-05-04)\n\n\n### Bug Fixes\n\n* **zoom:** fixed issue with zoom to fit ([62777c7](https://github.com/DanielNetzer/ngx-diagrams/commit/62777c7a98a84152e77f5e9fc10d9bf47be82839))\n\n# [2.18.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.17.0...v2.18.0) (2020-05-04)\n\n\n### Features\n\n* **zoom to fit:** taking under consideration min/max zoom ([2adc18d](https://github.com/DanielNetzer/ngx-diagrams/commit/2adc18db3747323823acf3b28cfd98abcf24e8eb))\n\n# [2.17.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.16.0...v2.17.0) (2020-05-04)\n\n\n### Bug Fixes\n\n* package.json, package-lock.json & .snyk to reduce vulnerabilities ([71edd1e](https://github.com/DanielNetzer/ngx-diagrams/commit/71edd1e051ad2270536a6bb8edaf06abf8be0177))\n* package.json, package-lock.json & .snyk to reduce vulnerabilities ([8f4613d](https://github.com/DanielNetzer/ngx-diagrams/commit/8f4613d2ca2ec7ac2ff967e601be2939bfe0f726))\n* package.json, package-lock.json & .snyk to reduce vulnerabilities ([4da388b](https://github.com/DanielNetzer/ngx-diagrams/commit/4da388b98f39e5d44212dc9684a386ed1c64159c))\n* upgrade multiple dependencies with Snyk ([35e5380](https://github.com/DanielNetzer/ngx-diagrams/commit/35e5380bc92b86a20e36dd3c7c4f26c9c43a28f3))\n* upgrade rxjs from 6.5.4 to 6.5.5 ([59483a1](https://github.com/DanielNetzer/ngx-diagrams/commit/59483a16d26af5f633f7dc804a6d39cee711f898))\n* upgrade rxjs from 6.5.4 to 6.5.5 ([275b457](https://github.com/DanielNetzer/ngx-diagrams/commit/275b4575cf383322c315dc3b1c24d298d48f0313))\n* **deps:** updated all deps to address vuln ([e2323d1](https://github.com/DanielNetzer/ngx-diagrams/commit/e2323d1d25dfb8f15f6f9a88b1eff8b8f8159b6a))\n\n\n### Features\n\n* **zoom:** min and max zoom levels properties ([f8470cb](https://github.com/DanielNetzer/ngx-diagrams/commit/f8470cbe8ba55a8421ed9af4cfb2fa52aa9fc721))\n\n# [2.16.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.15.0...v2.16.0) (2020-04-12)\n\n\n### Features\n\n* **links:** canCreateLinks property on ports ([73eba4b](https://github.com/DanielNetzer/ngx-diagrams/commit/73eba4b334c5cab50ad00f49754f94124b4d090e))\n\n# [2.15.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.14.0...v2.15.0) (2020-04-12)\n\n\n### Features\n\n* **actions:** invalid link destroyed action dispatched ([d942119](https://github.com/DanielNetzer/ngx-diagrams/commit/d942119f5fe59045ed01191559ad79c994c90ca4))\n\n# [2.14.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.13.2...v2.14.0) (2020-03-29)\n\n\n### Features\n\n* **actions:** loose link destroyed action ([4b47147](https://github.com/DanielNetzer/ngx-diagrams/commit/4b47147e07f9a152e36b3848f425f0d633513a44))\n* **colors:** links colors are now subscribable ([face093](https://github.com/DanielNetzer/ngx-diagrams/commit/face093b405cfa1d575b5da4abe1e4ce96b81e0c))\n\n## [2.13.2](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.13.1...v2.13.2) (2020-02-09)\n\n\n### Bug Fixes\n\n* **imports:** coords interface import ([7b649a7](https://github.com/DanielNetzer/ngx-diagrams/commit/7b649a7e69ad7b570d05cfe9f12842fe43098f00))\n\n## [2.13.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.13.0...v2.13.1) (2020-02-09)\n\n\n### Bug Fixes\n\n* **imports:** bad imports naming ([014f17a](https://github.com/DanielNetzer/ngx-diagrams/commit/014f17a4f3dbd8e4b166e072a67918a46c9760c3))\n\n# [2.13.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.12.1...v2.13.0) (2019-12-25)\n\n\n### Features\n\n* **node model:** remove, update, add ports ([e334267](https://github.com/DanielNetzer/ngx-diagrams/commit/e3342674a5aad82d2e5e4c0839a989c2d371abb0))\n\n## [2.12.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.12.0...v2.12.1) (2019-12-25)\n\n\n### Bug Fixes\n\n* **base event:** null reference in options for event ([8a69a51](https://github.com/DanielNetzer/ngx-diagrams/commit/8a69a51f16a172514030c20f2c628fd5aec31206))\n\n# [2.12.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.11.2...v2.12.0) (2019-12-25)\n\n\n### Features\n\n* **base entity:** passing options to constructor ([5cd07d9](https://github.com/DanielNetzer/ngx-diagrams/commit/5cd07d956528d4a26c708ab45ae8b933ad76ebda))\n\n## [2.11.2](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.11.1...v2.11.2) (2019-12-19)\n\n\n### Bug Fixes\n\n* **on entity destroyed:** reverted the filtering ([2b92467](https://github.com/DanielNetzer/ngx-diagrams/commit/2b92467c29907c489b958abef84e47c1470a5265))\n\n## [2.11.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.11.0...v2.11.1) (2019-12-19)\n\n\n### Performance Improvements\n\n* **destroy options:** moved interface to a their right place ([c032bd5](https://github.com/DanielNetzer/ngx-diagrams/commit/c032bd5e0829d734ed125dd4c4d093a391a54132))\n\n# [2.11.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.10.0...v2.11.0) (2019-12-19)\n\n\n### Features\n\n* **destroy options:** allowing to pass options to destroy method ([06373bf](https://github.com/DanielNetzer/ngx-diagrams/commit/06373bf193f8fcf42b4156bdb651dae42698ec85))\n* **destroy-options:** emit property ([16a4a2e](https://github.com/DanielNetzer/ngx-diagrams/commit/16a4a2e7585b680aff81fb70bfae29cba55a8bad))\n\n# [2.10.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.9.0...v2.10.0) (2019-11-21)\n\n### Features\n\n- **port:** added getters and setters for width and height ([ba2c6c5](https://github.com/DanielNetzer/ngx-diagrams/commit/ba2c6c581bd3f5a586dd44bb286f6a5c7351f1a4))\n\n# [2.9.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.8.3...v2.9.0) (2019-11-21)\n\n### Features\n\n- **port:** get x,y coords ([5162334](https://github.com/DanielNetzer/ngx-diagrams/commit/5162334b1005b3a557e3363d414148c5e2bb3a13))\n\n## [2.8.3](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.8.2...v2.8.3) (2019-09-16)\n\n### Bug Fixes\n\n- **actions:** links created action ([f031475](https://github.com/DanielNetzer/ngx-diagrams/commit/f031475))\n\n## [2.8.2](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.8.1...v2.8.2) (2019-09-15)\n\n### Bug Fixes\n\n- **defaults:** default link coords binding ([1f54ccd](https://github.com/DanielNetzer/ngx-diagrams/commit/1f54ccd))\n- **links:** maximum links ([554e76e](https://github.com/DanielNetzer/ngx-diagrams/commit/554e76e))\n- **points:** bad coords observable for points ([1936d62](https://github.com/DanielNetzer/ngx-diagrams/commit/1936d62)), closes [#13](https://github.com/DanielNetzer/ngx-diagrams/issues/13)\n\n## [2.8.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.8.0...v2.8.1) (2019-09-11)\n\n### Bug Fixes\n\n- **actions:** link connection action now trigger when link is valid ([60d413e](https://github.com/DanielNetzer/ngx-diagrams/commit/60d413e))\n\n# [2.8.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.7.1...v2.8.0) (2019-09-09)\n\n### Features\n\n- **actions:** on link connected between two ports ([55f492e](https://github.com/DanielNetzer/ngx-diagrams/commit/55f492e))\n\n## [2.7.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.7.0...v2.7.1) (2019-09-09)\n\n### Bug Fixes\n\n- **selection:** multiple selection ([49ab712](https://github.com/DanielNetzer/ngx-diagrams/commit/49ab712)), closes [#12](https://github.com/DanielNetzer/ngx-diagrams/issues/12)\n\n# [2.7.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.6.4...v2.7.0) (2019-09-04)\n\n### Features\n\n- **auto arrange:** dagre based auto arrange engine ([4e6263a](https://github.com/DanielNetzer/ngx-diagrams/commit/4e6263a))\n\n## [2.6.4](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.6.3...v2.6.4) (2019-09-03)\n\n### Bug Fixes\n\n- **custom links:** outport can now define their links type per port ([68d0b95](https://github.com/DanielNetzer/ngx-diagrams/commit/68d0b95)), closes [#10](https://github.com/DanielNetzer/ngx-diagrams/issues/10) [#11](https://github.com/DanielNetzer/ngx-diagrams/issues/11)\n\n## [2.6.3](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.6.2...v2.6.3) (2019-07-11)\n\n### Bug Fixes\n\n- **defauls:** changed exports to point to index file ([c3032e0](https://github.com/DanielNetzer/ngx-diagrams/commit/c3032e0))\n\n## [2.6.2](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.6.1...v2.6.2) (2019-07-11)\n\n### Bug Fixes\n\n- **defaults:** exporting all default components ([3bb0ec8](https://github.com/DanielNetzer/ngx-diagrams/commit/3bb0ec8))\n\n## [2.6.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.6.0...v2.6.1) (2019-07-08)\n\n### Bug Fixes\n\n- **security:** updated packages to remove security issues ([6643aa5](https://github.com/DanielNetzer/ngx-diagrams/commit/6643aa5))\n\n### Performance Improvements\n\n- **default components:** exported as individual modules ([2a4bff6](https://github.com/DanielNetzer/ngx-diagrams/commit/2a4bff6))\n\n# [2.6.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.5.1...v2.6.0) (2019-07-04)\n\n### Features\n\n- **labels:** links can now have a label ([4359cb5](https://github.com/DanielNetzer/ngx-diagrams/commit/4359cb5))\n\n## [2.5.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.5.0...v2.5.1) (2019-06-26)\n\n### Bug Fixes\n\n- **change detection:** on widget created run change detection ref check ([05f1eec](https://github.com/DanielNetzer/ngx-diagrams/commit/05f1eec))\n\n# [2.5.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.4.0...v2.5.0) (2019-06-25)\n\n### Features\n\n- **default port:** custom ids ([6e7772a](https://github.com/DanielNetzer/ngx-diagrams/commit/6e7772a))\n\n# [2.4.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.3.0...v2.4.0) (2019-06-25)\n\n### Features\n\n- **default node:** support for custom ids ([0e3ff7f](https://github.com/DanielNetzer/ngx-diagrams/commit/0e3ff7f))\n\n# [2.3.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.2.0...v2.3.0) (2019-06-25)\n\n### Features\n\n- **default node:** support for custom ID ([ddd8b92](https://github.com/DanielNetzer/ngx-diagrams/commit/ddd8b92))\n\n# [2.2.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.1.1...v2.2.0) (2019-06-24)\n\n### Features\n\n- **ports:** support for different types of ports ([9c9af1e](https://github.com/DanielNetzer/ngx-diagrams/commit/9c9af1e))\n\n## [2.1.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.1.0...v2.1.1) (2019-06-24)\n\n### Bug Fixes\n\n- **util:** exporting utils ([eed447d](https://github.com/DanielNetzer/ngx-diagrams/commit/eed447d))\n\n# [2.1.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.0.4...v2.1.0) (2019-06-24)\n\n### Bug Fixes\n\n- **storybook:** imports are now from the library and not the dist ([9a487cf](https://github.com/DanielNetzer/ngx-diagrams/commit/9a487cf))\n\n### Features\n\n- **exports:** exporting all relevant apis ([0d24b42](https://github.com/DanielNetzer/ngx-diagrams/commit/0d24b42))\n\n## [2.0.4](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.0.3...v2.0.4) (2019-06-24)\n\n### Bug Fixes\n\n- **main module:** declared all components inside self ([80a55b3](https://github.com/DanielNetzer/ngx-diagrams/commit/80a55b3))\n\n## [2.0.3](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.0.2...v2.0.3) (2019-06-23)\n\n### Bug Fixes\n\n- **public api:** fixed exposed public apis ([9861bda](https://github.com/DanielNetzer/ngx-diagrams/commit/9861bda))\n\n## [2.0.2](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.0.1...v2.0.2) (2019-06-23)\n\n### Bug Fixes\n\n- **ci:** fixed issue with ci ([ff380d6](https://github.com/DanielNetzer/ngx-diagrams/commit/ff380d6))\n- **package lock:** updated package lock ([fb0d604](https://github.com/DanielNetzer/ngx-diagrams/commit/fb0d604))\n\n## [2.0.1](https://github.com/DanielNetzer/ngx-diagrams/compare/v2.0.0...v2.0.1) (2019-06-23)\n\n### Bug Fixes\n\n- **public api:** exporting all required modules ([69a80de](https://github.com/DanielNetzer/ngx-diagrams/commit/69a80de))\n\n# [2.0.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v1.5.0...v2.0.0) (2019-06-23)\n\n### Bug Fixes\n\n- **base entity:** removed unused import ([24a366b](https://github.com/DanielNetzer/ngx-diagrams/commit/24a366b))\n- **default-factories:** use renderer2 instead direct DOM ([c10970d](https://github.com/DanielNetzer/ngx-diagrams/commit/c10970d))\n- **layers overlapping:** layers wont overlap each ([045cffb](https://github.com/DanielNetzer/ngx-diagrams/commit/045cffb))\n\n### Features\n\n- **rxstate:** move all library and engine to rx style [WIP](<[24d2b03](https://github.com/DanielNetzer/ngx-diagrams/commit/24d2b03)>)\n\n### BREAKING CHANGES\n\n- **rxstate:** CHANGES\n\n# [1.5.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v1.4.0...v1.5.0) (2019-05-18)\n\n### Features\n\n- **selection:** links, points selection ([ad6e1dd](https://github.com/DanielNetzer/ngx-diagrams/commit/ad6e1dd))\n\n# [1.4.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v1.3.0...v1.4.0) (2019-05-12)\n\n### Features\n\n- **multiple selection:** selection box, multiple entities selection ([ef6677a](https://github.com/DanielNetzer/ngx-diagrams/commit/ef6677a))\n\n# [1.3.0](https://github.com/DanielNetzer/ngx-diagrams/compare/v1.2.0...v1.3.0) (2019-05-11)\n\n### Bug Fixes\n\n- **actions:** once action stop firing, clear the action from the state ([c77571e](https://github.com/DanielNetzer/ngx-diagrams/commit/c77571e))\n- **build:** clean build errors ([adf7bf8](https://github.com/DanielNetzer/ngx-diagrams/commit/adf7bf8))\n- **build:** expose props to be used in html ([4a11834](https://github.com/DanielNetzer/ngx-diagrams/commit/4a11834))\n- **configs:** configurations and node models ([a545c2c](https://github.com/DanielNetzer/ngx-diagrams/commit/a545c2c))\n- **engine:** missed refactoring parent prop ([4de3a63](https://github.com/DanielNetzer/ngx-diagrams/commit/4de3a63))\n- **merge:** correct merge conflict glitch ([115eb19](https://github.com/DanielNetzer/ngx-diagrams/commit/115eb19))\n- **merge:** merged all branches to master ([64fdb92](https://github.com/DanielNetzer/ngx-diagrams/commit/64fdb92))\n- **release:** change semantic release prepare stage ([89131f8](https://github.com/DanielNetzer/ngx-diagrams/commit/89131f8))\n\n### Features\n\n- **abstract factories:** node, links, ports abstract factories added ([ad58aa9](https://github.com/DanielNetzer/ngx-diagrams/commit/ad58aa9))\n- **component:** default link component impl ([f870137](https://github.com/DanielNetzer/ngx-diagrams/commit/f870137))\n- **data attribs:** entities id, name data attribs, get mouse element ([a847af9](https://github.com/DanielNetzer/ngx-diagrams/commit/a847af9))\n- **data attributes:** nodes, ports id and name data attributes ([56ddcca](https://github.com/DanielNetzer/ngx-diagrams/commit/56ddcca))\n- **default models:** node, port, link default models added ([3378b34](https://github.com/DanielNetzer/ngx-diagrams/commit/3378b34))\n- **default models:** node, port, link default models created ([ecbadf3](https://github.com/DanielNetzer/ngx-diagrams/commit/ecbadf3))\n- **engine service:** all core functionality implemented ([123010e](https://github.com/DanielNetzer/ngx-diagrams/commit/123010e))\n- **links:** links are rendered, port coords inaccurate ([54b99a0](https://github.com/DanielNetzer/ngx-diagrams/commit/54b99a0))\n- **links:** mid work on links, change detection issue ([84b292f](https://github.com/DanielNetzer/ngx-diagrams/commit/84b292f))\n- **links:** mid work on ports position ([1c285cc](https://github.com/DanielNetzer/ngx-diagrams/commit/1c285cc))\n- **merge:** branch feature/links merged ([52a9fa4](https://github.com/DanielNetzer/ngx-diagrams/commit/52a9fa4))\n- **models:** added models for all entities ([04a5f65](https://github.com/DanielNetzer/ngx-diagrams/commit/04a5f65))\n- **models:** change props to private and expose with get/set ([cdf10d4](https://github.com/DanielNetzer/ngx-diagrams/commit/cdf10d4))\n- **ports:** factory ports implemented ([c148aaf](https://github.com/DanielNetzer/ngx-diagrams/commit/c148aaf))\n- **ports:** mid work on ports factory ([b748bc9](https://github.com/DanielNetzer/ngx-diagrams/commit/b748bc9))\n- **rendering:** programmatic rendering of links ([58eabe4](https://github.com/DanielNetzer/ngx-diagrams/commit/58eabe4))\n- **zoom to fit:** canvas zoom level fit to elements in it ([5fbd783](https://github.com/DanielNetzer/ngx-diagrams/commit/5fbd783))\n"))}MDXContent.isMDXComponent=!0;var __page=function __page(){throw new Error("Docs-only story")};__page.parameters={docsOnly:!0};var componentMeta={title:"Changelog",includeStories:["__page"]},mdxStoryNameToKey={};componentMeta.parameters=componentMeta.parameters||{},componentMeta.parameters.docs=Object.assign({},componentMeta.parameters.docs||{},{page:function page(){return Object(esm.mdx)(blocks.AddContext,{mdxStoryNameToKey:mdxStoryNameToKey,mdxComponentMeta:componentMeta},Object(esm.mdx)(MDXContent,null))}});__webpack_exports__.default=componentMeta},174:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".demo-diagram {\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #3c3c3c;\n  background-image: linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent);\n  background-size: 50px 50px;\n}\n\n.action-bar {\n  position: relative;\n  width: 100%;\n  height: 40px;\n  z-index: 2000;\n  background-color: white;\n  display: flex;\n  align-items: center;\n}\n\n.action-bar * {\n  margin: 0 10px;\n}"},175:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".demo-diagram {\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #3c3c3c;\n  background-image: linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent);\n  background-size: 50px 50px;\n}"},176:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".demo-diagram {\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #3c3c3c;\n  background-image: linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent);\n  background-size: 50px 50px;\n}"},177:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".demo-diagram {\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #3c3c3c;\n  background-image: linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent);\n  background-size: 50px 50px;\n}"},178:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".demo-diagram {\n  display: flex;\n  height: 100%;\n  min-height: 100vh;\n  background-color: #3c3c3c;\n  background-image: linear-gradient(0deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent), linear-gradient(90deg, transparent 24%, rgba(255, 255, 255, 0.05) 25%, rgba(255, 255, 255, 0.05) 26%, transparent 27%, transparent 74%, rgba(255, 255, 255, 0.05) 75%, rgba(255, 255, 255, 0.05) 76%, transparent 77%, transparent);\n  background-size: 50px 50px;\n}"},183:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultNodeComponent}));var _a,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_models_default_node_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(230),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(67),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(181);let DefaultNodeComponent=class DefaultNodeComponent extends _models_default_node_model__WEBPACK_IMPORTED_MODULE_2__.a{constructor(){super({type:"ngdx-default-node"})}ngOnInit(){this.paintChanges().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(paintedE=>paintedE.isPainted),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(()=>this.selectPorts())).subscribe(ports=>{ports.forEach(port=>{port.getPainted()||this.generatePort(port)})})}generatePort(port){const diagramEngine=this.getDiagramEngine();diagramEngine.generateWidgetForPort(port,this.portsLayer),port.paintChanges().subscribe(paintedEvent=>{paintedEvent.isPainted&&port.updateCoords(diagramEngine.getPortCoords(port))})}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild)("portsLayer",{read:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef,static:!0}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_a=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef)?_a:Object)],DefaultNodeComponent.prototype,"portsLayer",void 0),DefaultNodeComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ngdx-default-node",template:(__webpack_require__(321).default||__webpack_require__(321)).length?__webpack_require__(321).default||__webpack_require__(321):"",styles:[(__webpack_require__(322).default||__webpack_require__(322)).length?__webpack_require__(322).default||__webpack_require__(322):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",[])],DefaultNodeComponent)},184:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultPortComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_models_default_port_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(158);let DefaultPortComponent=class DefaultPortComponent extends _models_default_port_model__WEBPACK_IMPORTED_MODULE_2__.a{constructor(){super()}};DefaultPortComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ngdx-default-port",template:(__webpack_require__(323).default||__webpack_require__(323)).length?__webpack_require__(323).default||__webpack_require__(323):"",styles:[(__webpack_require__(324).default||__webpack_require__(324)).length?__webpack_require__(324).default||__webpack_require__(324):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",[])],DefaultPortComponent)},185:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultLinkComponent}));var _a,_b,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_models_default_link_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(159),_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(79),rxjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(23),rxjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(180),rxjs_operators__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(63),rxjs_operators__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(67);let DefaultLinkComponent=class DefaultLinkComponent extends _models_default_link_model__WEBPACK_IMPORTED_MODULE_2__.a{constructor(cdRef){super({type:"ngdx-default-link"}),this.cdRef=cdRef,this._path$=new rxjs__WEBPACK_IMPORTED_MODULE_4__.a(null),this.path$=this._path$.asObservable(),this.points$=new rxjs__WEBPACK_IMPORTED_MODULE_4__.a([])}ngAfterViewInit(){const firstPCoords$=this.getFirstPoint().selectCoords(),lastPCoords$=this.getLastPoint().selectCoords();Object(rxjs__WEBPACK_IMPORTED_MODULE_5__.b)([firstPCoords$,lastPCoords$]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.a)(this.onEntityDestroy())).subscribe(([firstPCoords,lastPCoords])=>{const points=[firstPCoords,lastPCoords],xOrY=Math.abs(firstPCoords.x-lastPCoords.x)>Math.abs(firstPCoords.y-lastPCoords.y)?"x":"y";let isStraight=!1;Math.abs(points[0][xOrY]-points[1][xOrY])<50&&(isStraight=!0);const path=Object(_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_3__.c)(firstPCoords,lastPCoords,isStraight?0:this.curvyness);this._path$.next(path);const label=this.getLabel();label&&label.setCoords(this.calcCenterOfPath(firstPCoords,lastPCoords)),this.cdRef.detectChanges()}),this.selectLabel().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.a)(Boolean)).subscribe(label=>{this.diagramEngine.generateWidgetForLabel(label,this.labelLayer),this.cdRef.detectChanges()})}calcLabelIncline(firstPoint,secondPoint){const dy=secondPoint.y-firstPoint.y,dx=secondPoint.x-firstPoint.x;if(0===dx)return 0;let inclineAngel=180*Math.atan(dy/dx)/Math.PI;return inclineAngel<0&&(inclineAngel+=180),inclineAngel}calcCenterOfPath(firstPoint,secondPoint){return{x:(firstPoint.x+secondPoint.x)/2+20,y:(firstPoint.y+secondPoint.y)/2+20}}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild)("labelLayer",{read:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef,static:!0}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_a=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef)?_a:Object)],DefaultLinkComponent.prototype,"labelLayer",void 0),DefaultLinkComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ngdx-default-link",template:(__webpack_require__(325).default||__webpack_require__(325)).length?__webpack_require__(325).default||__webpack_require__(325):"",styles:[(__webpack_require__(326).default||__webpack_require__(326)).length?__webpack_require__(326).default||__webpack_require__(326):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",["function"==typeof(_b=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef)?_b:Object])],DefaultLinkComponent)},186:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultLabelComponent}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_models_default_label_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(231);let DefaultLabelComponent=class DefaultLabelComponent extends _models_default_label_model__WEBPACK_IMPORTED_MODULE_2__.a{constructor(){super("ngdx-default-label")}};DefaultLabelComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ngdx-default-label",template:(__webpack_require__(327).default||__webpack_require__(327)).length?__webpack_require__(327).default||__webpack_require__(327):"",styles:[(__webpack_require__(328).default||__webpack_require__(328)).length?__webpack_require__(328).default||__webpack_require__(328):""]}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",[])],DefaultLabelComponent)},207:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DiagramModel}));var rxjs__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(23),_node_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(137),_link_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(118),_base_entity__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(371),_port_model__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(157),_point_model__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(77);class DiagramModel extends _base_entity__WEBPACK_IMPORTED_MODULE_3__.a{constructor(diagramEngine,id){super(id),this.diagramEngine=diagramEngine,this.nodes$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a({}),this.links$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a({}),this.zoom$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(100),this.offsetX$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(0),this.offsetY$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(0),this.gridSize$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(0),this.maxZoomIn$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(null),this.maxZoomOut$=new rxjs__WEBPACK_IMPORTED_MODULE_0__.a(null)}getNodes(){return this.nodes$.getValue()}getNode(id){return this.nodes$.getValue()[id]}getLink(id){return this.links$.getValue()[id]}getLinks(){return this.links$.getValue()}getAllPorts(options){const portsMap=new Map;return Object.values(this.getNodes()).forEach(node=>{for(const[key,port]of Object.entries(node.getPorts()))options.filter?options.filter(port)&&portsMap.set(key,port):portsMap.set(key,port)}),portsMap}addNode(node){return this.nodes$.next(Object.assign(Object.assign({},this.nodes$.value),{[node.id]:node})),node}deleteNode(nodeOrId){const nodeID="string"==typeof nodeOrId?nodeOrId:nodeOrId.id,node=this.getNode(nodeID);Object.values(node.getPorts()).forEach(port=>{Object.values(port.getLinks()).forEach(link=>{this.deleteLink(link)})});const updNodes=Object.assign({},this.nodes$.value);delete updNodes[nodeID],this.nodes$.next(updNodes),node.destroy()}selectNodes(){return this.nodes$.asObservable()}addLink(link){return this.links$.next(Object.assign(Object.assign({},this.links$.value),{[link.id]:link})),link}deleteLink(linkOrId){const linkID="string"==typeof linkOrId?linkOrId:linkOrId.id,link=this.getLink(linkID),updLinks=Object.assign({},this.links$.value);delete updLinks[linkID],this.links$.next(updLinks),link.destroy()}reset(){Object.values(this.getNodes()).forEach(node=>{this.deleteNode(node)})}selectLinks(){return this.links$.asObservable()}serialize(){const serializedNodes=Object.values(this.nodes$.getValue()).map(node=>node.serialize()),serializedLinks=Object.values(this.links$.getValue()).map(link=>link.serialize());return Object.assign(Object.assign({},super.serialize()),{nodes:serializedNodes,links:serializedLinks})}setMaxZoomOut(maxZoomOut){this.maxZoomOut$.next(maxZoomOut)}setMaxZoomIn(maxZoomIn){this.maxZoomIn$.next(maxZoomIn)}getMaxZoomOut(){return this.maxZoomOut$.getValue()}getMaxZoomIn(){return this.maxZoomIn$.getValue()}setOffset(x,y){this.offsetX$.next(x),this.offsetY$.next(y)}setOffsetX(x){this.offsetX$.next(x)}getOffsetX(){return this.offsetX$.getValue()}selectOffsetX(){return this.offsetX$.asObservable()}setOffsetY(y){this.offsetY$.next(y)}getOffsetY(){return this.offsetY$.getValue()}selectOffsetY(){return this.offsetY$.asObservable()}setZoomLevel(z){const maxZoomIn=this.maxZoomIn$.getValue(),maxZoomOut=this.maxZoomOut$.getValue();maxZoomIn&&z>maxZoomIn||maxZoomOut&&z<maxZoomOut||this.zoom$.next(z)}getZoomLevel(){return this.zoom$.getValue()}selectZoomLevel(){return this.zoom$.asObservable()}getDiagramEngine(){return this.diagramEngine}clearSelection(ignore=null){this.getSelectedItems().forEach(element=>{ignore&&ignore.id===element.id||element.setSelected(!1)})}getGridPosition({x:x,y:y}){const gridSize=this.gridSize$.getValue();return 0===gridSize?{x:x,y:y}:{x:gridSize*Math.floor((x+gridSize/2)/gridSize),y:gridSize*Math.floor((y+gridSize/2)/gridSize)}}getSelectedItems(...filters){Array.isArray(filters)||(filters=[filters]);let items=[];return items=items.concat(Object.values(this.nodes$.getValue()).flatMap(node=>node.getSelectedEntities())),items=items.concat(Object.values(this.links$.getValue()).flatMap(link=>link.getSelectedEntities())),items=items.concat(Object.values(this.links$.getValue()).flatMap(link=>link.getPoints().flatMap(point=>point.getSelectedEntities()))),items=[...new Set(items)],filters.length>0&&(items=items.filter(item=>!!(filters.includes("node")&&item instanceof _node_model__WEBPACK_IMPORTED_MODULE_1__.a)||(!!(filters.includes("link")&&item instanceof _link_model__WEBPACK_IMPORTED_MODULE_2__.a)||(!!(filters.includes("port")&&item instanceof _port_model__WEBPACK_IMPORTED_MODULE_4__.a)||!!(filters.includes("point")&&item instanceof _point_model__WEBPACK_IMPORTED_MODULE_5__.a))))),items}addAll(...models){return models.forEach(model=>{model instanceof _link_model__WEBPACK_IMPORTED_MODULE_2__.a?this.addLink(model):model instanceof _node_model__WEBPACK_IMPORTED_MODULE_1__.a&&this.addNode(model)}),models}}},211:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return MoveItemsAction}));var _base_action__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(87),_models_link_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(118);class MoveItemsAction extends _base_action__WEBPACK_IMPORTED_MODULE_0__.a{constructor(mouseX,mouseY,diagramEngine){super(mouseX,mouseY),this.moved=!1;let selectedItems=diagramEngine.getDiagramModel().getSelectedItems();selectedItems=selectedItems.filter(item=>!(diagramEngine.isModelLocked(item)||item instanceof _models_link_model__WEBPACK_IMPORTED_MODULE_1__.a)),this.selectionModels=selectedItems.map(item=>{const{x:initialX,y:initialY}=item.getCoords();return{model:item,initialX:initialX,initialY:initialY}})}}},230:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultNodeModel}));var _models_node_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(137),_default_port_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(158);class DefaultNodeModel extends _models_node_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor({name:name="Untitled",type:type="default",color:color="rgb(0, 192, 255)",id:id}={}){super(type,id),this.name=name,this.color=color,this.height$=this.selectHeight(),this.width$=this.selectWidth()}addInPort({name:name,type:type="default",id:id,linkType:linkType="default"}){const port=new _default_port_model__WEBPACK_IMPORTED_MODULE_1__.a({isInput:!0,name:name,type:type,id:id,label:null,linkType:linkType});return this.addPort(port),port}addOutPort({name:name,type:type="default",id:id,linkType:linkType="default",maximumLinks:maximumLinks=null}){const port=new _default_port_model__WEBPACK_IMPORTED_MODULE_1__.a({isInput:!1,name:name,type:type,id:id,label:null,linkType:linkType,maximumLinks:maximumLinks});return this.addPort(port),port}}},231:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultLabelModel}));var _models_label_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(355),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(23);class DefaultLabelModel extends _models_label_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor(label="NO LABEL",type="default"){super(type),this._label=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(""),this.label$=this._label.asObservable(),this.setLabel(label)}setLabel(label){this._label.next(label)}getLabel(){return this._label.getValue()}selectLabel(){return this.label$}}},268:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return NgxDiagramComponent}));var _a,_b,_c,_d,_e,_f,_g,_h,_j,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_models_diagram_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(207),_models_node_model__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(137),rxjs__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(23),rxjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(205),rxjs__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(180),rxjs_operators__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(63),rxjs_operators__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(67),_actions__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(141),_actions_move_items_action__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(211),_models_point_model__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(77),_models_port_model__WEBPACK_IMPORTED_MODULE_12__=__webpack_require__(157),_actions_loose_link_destroyed_action__WEBPACK_IMPORTED_MODULE_13__=__webpack_require__(345);let NgxDiagramComponent=class NgxDiagramComponent{constructor(renderer,cdRef){this.renderer=renderer,this.cdRef=cdRef,this.allowCanvasZoom=!0,this.allowCanvasTranslation=!0,this.inverseZoom=!0,this.allowLooseLinks=!0,this.maxZoomOut=null,this.maxZoomIn=null,this.portMagneticRadius=30,this.actionStartedFiring=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.actionStillFiring=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.actionStoppedFiring=new _angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter,this.action$=new rxjs__WEBPACK_IMPORTED_MODULE_4__.a(null),this.destroyed$=new rxjs__WEBPACK_IMPORTED_MODULE_5__.a(1),this.mouseUpListener=()=>{},this.mouseMoveListener=()=>{},this.onMouseUp=event=>{const diagramEngine=this.diagramModel.getDiagramEngine(),action=this.action$.getValue();if(action instanceof _actions_move_items_action__WEBPACK_IMPORTED_MODULE_10__.a){const element=this.getMouseElement(event);action.selectionModels.forEach(model=>{if(!(model.model instanceof _models_point_model__WEBPACK_IMPORTED_MODULE_11__.a))return;let el;if(el=model.magnet?model.magnet:element.model,el instanceof _models_port_model__WEBPACK_IMPORTED_MODULE_12__.a&&!diagramEngine.isModelLocked(el)){const link=model.model.getLink();if(null!==link.getTargetPort())if(link.getTargetPort()!==el&&link.getSourcePort()!==el){const targetPort=link.getTargetPort(),newLink=link.clone({});newLink.setSourcePort(el),newLink.setTargetPort(targetPort),link.setTargetPort(el),targetPort.removeLink(link),newLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]),link.removePointsAfter(model.model),diagramEngine.getDiagramModel().addLink(newLink)}else link.getTargetPort()===el?link.removePointsAfter(model.model):link.getSourcePort()===el&&link.removePointsBefore(model.model);else{link.setTargetPort(el);const targetPort=link.getTargetPort(),srcPort=link.getSourcePort();targetPort.id!==srcPort.id&&srcPort.canLinkToPort(targetPort)&&this.startFiringAction(new _actions__WEBPACK_IMPORTED_MODULE_9__.b(event.clientX,event.clientY,link))}}model.magnet=void 0}),this.allowLooseLinks||action.selectionModels.forEach(model=>{if(!(model.model instanceof _models_point_model__WEBPACK_IMPORTED_MODULE_11__.a))return;const link=model.model.getLink();null!==link.getSourcePort()&&null!==link.getTargetPort()||(link.destroy(),this.startFiringAction(new _actions_loose_link_destroyed_action__WEBPACK_IMPORTED_MODULE_13__.a(event.clientX,event.clientY,link)))}),action.selectionModels.forEach(model=>{if(!(model.model instanceof _models_point_model__WEBPACK_IMPORTED_MODULE_11__.a))return;const link=model.model.getLink(),sourcePort=link.getSourcePort(),targetPort=link.getTargetPort();null!==sourcePort&&null!==targetPort&&(sourcePort.canLinkToPort(targetPort)?Object.values(targetPort.getLinks()).some(l=>l!==link&&(l.getSourcePort()===sourcePort||l.getTargetPort()===sourcePort))&&link.destroy():(link.destroy(),this.startFiringAction(new _actions__WEBPACK_IMPORTED_MODULE_9__.a(event.clientX,event.clientY,link))))}),this.stopFiringAction()}else this.stopFiringAction();this.mouseUpListener(),this.mouseMoveListener(),this.action$.next(null)},this.onMouseMove=event=>{const action=this.action$.getValue();if(null!=action){if(action instanceof _actions__WEBPACK_IMPORTED_MODULE_9__.d){const relative=this.diagramModel.getDiagramEngine().getRelativePoint(event.clientX,event.clientY);return Object.values(this.diagramModel.getNodes()).forEach(node=>{action.containsElement(node.getCoords(),this.diagramModel)?node.setSelected():node.setSelected(!1)}),Object.values(this.diagramModel.getLinks()).forEach(link=>{let allSelected=!0;link.getPoints().forEach(point=>{action.containsElement(point.getCoords(),this.diagramModel)?point.setSelected():(point.setSelected(!1),allSelected=!1)}),allSelected&&link.setSelected()}),action.mouseX2=relative.x,action.mouseY2=relative.y,this.fireAction(),void this.action$.next(action)}if(action instanceof _actions_move_items_action__WEBPACK_IMPORTED_MODULE_10__.a){const coords={x:event.clientX-action.mouseX,y:event.clientY-action.mouseY},amountZoom=this.diagramModel.getZoomLevel()/100;action.selectionModels.forEach(selectionModel=>{if(selectionModel.magnet=void 0,selectionModel.model instanceof _models_node_model__WEBPACK_IMPORTED_MODULE_3__.a||selectionModel.model instanceof _models_point_model__WEBPACK_IMPORTED_MODULE_11__.a&&!selectionModel.model.isConnectedToPort()){const newCoords={x:selectionModel.initialX+coords.x/amountZoom,y:selectionModel.initialY+coords.y/amountZoom},gridRelativeCoords=this.diagramModel.getGridPosition(newCoords);if(selectionModel.model instanceof _models_point_model__WEBPACK_IMPORTED_MODULE_11__.a&&this.portMagneticRadius){const portsMap=this.diagramModel.getAllPorts({filter:p=>p.getMagnetic()});for(const port of portsMap.values()){const portCoords=port.getCoords();if(Math.hypot(portCoords.x-newCoords.x,portCoords.y-newCoords.y)<=this.portMagneticRadius){const portCenter=this.diagramModel.getDiagramEngine().getPortCenter(port);return selectionModel.model.setCoords(portCenter),void(selectionModel.magnet=port)}}}selectionModel.model.setCoords(gridRelativeCoords),selectionModel.model instanceof _models_node_model__WEBPACK_IMPORTED_MODULE_3__.a&&Object.values(selectionModel.model.getPorts()).forEach(port=>{const portCoords=this.diagramModel.getDiagramEngine().getPortCoords(port);port.updateCoords(portCoords)})}else if(selectionModel.model instanceof _models_point_model__WEBPACK_IMPORTED_MODULE_11__.a){const newCoords=this.diagramModel.getGridPosition({x:coords.x/amountZoom,y:coords.y/amountZoom});selectionModel.model.setCoords({x:selectionModel.initialX+newCoords.x,y:selectionModel.initialY+newCoords.y})}}),this.fireAction()}else action instanceof _actions__WEBPACK_IMPORTED_MODULE_9__.c&&this.allowCanvasTranslation&&(this.diagramModel.setOffset(action.initialOffsetX+(event.clientX-action.mouseX),action.initialOffsetY+(event.clientY-action.mouseY)),this.fireAction())}}}ngOnInit(){this.diagramModel&&(this.diagramModel.getDiagramEngine().setCanvas(this.canvas.nativeElement),this.nodes$=this.diagramModel.selectNodes(),this.links$=this.diagramModel.selectLinks(),this.nodesRendered$=new rxjs__WEBPACK_IMPORTED_MODULE_4__.a(!1),this.diagramModel.setMaxZoomIn(this.maxZoomIn),this.diagramModel.setMaxZoomOut(this.maxZoomOut),this.nodes$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.a)(this.destroyed$)).subscribe(nodes=>{this.nodesRendered$.next(!1),Object.values(nodes).forEach(node=>{node.getPainted()||(this.diagramModel.getDiagramEngine().generateWidgetForNode(node,this.nodesLayer),this.cdRef.detectChanges())}),this.nodesRendered$.next(!0)}))}ngOnDestroy(){this.destroyed$.next(!0),this.destroyed$.complete()}ngAfterViewInit(){Object(rxjs__WEBPACK_IMPORTED_MODULE_6__.b)([this.nodesRendered$,this.links$]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.a)(this.destroyed$),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.a)(([nodesRendered,_])=>!!nodesRendered)).subscribe(([_,links])=>{Object.values(links).forEach(link=>{if(!link.getPainted()&&link.getSourcePort().getPainted()){if(null!==link.getSourcePort()){const portCenter=this.diagramModel.getDiagramEngine().getPortCenter(link.getSourcePort());link.getPoints()[0].setCoords(portCenter);const portCoords=this.diagramModel.getDiagramEngine().getPortCoords(link.getSourcePort());link.getSourcePort().updateCoords(portCoords)}if(null!==link.getTargetPort()){const portCenter=this.diagramModel.getDiagramEngine().getPortCenter(link.getTargetPort());link.getPoints()[link.getPoints().length-1].setCoords(portCenter);const portCoords=this.diagramModel.getDiagramEngine().getPortCoords(link.getTargetPort());link.getTargetPort().updateCoords(portCoords)}this.diagramModel.getDiagramEngine().generateWidgetForLink(link,this.linksLayer),this.cdRef.detectChanges()}})})}fireAction(){this.action$.value&&this.actionStillFiring.emit(this.action$.value)}stopFiringAction(shouldSkipEvent){shouldSkipEvent||this.actionStoppedFiring.emit(this.action$.value),this.action$.next(null)}startFiringAction(action){this.action$.next(action),this.actionStartedFiring.emit(action)}selectAction(){return this.action$}shouldDrawSelectionBox(){const action=this.action$.getValue();return action instanceof _actions__WEBPACK_IMPORTED_MODULE_9__.d&&(action.getBoxDimensions(),!0)}getMouseElement(event){const target=event.target;let element=target.closest("[data-portid]");if(element){const nodeEl=target.closest("[data-nodeid]");return{model:this.diagramModel.getNode(nodeEl.getAttribute("data-nodeid")).getPort(element.getAttribute("data-portid")),element:element}}return element=target.closest("[data-pointid]"),element?{model:this.diagramModel.getLink(element.getAttribute("data-linkid")).getPointModel(element.getAttribute("data-pointid")),element:element}:(element=target.closest("[data-linkid]"),element?{model:this.diagramModel.getLink(element.getAttribute("data-linkid")),element:element}:(element=target.closest("[data-nodeid]"),element?{model:this.diagramModel.getNode(element.getAttribute("data-nodeid")),element:element}:null))}onMouseDown(event){if(3===event.button)return;const selectedModel=this.getMouseElement(event);if(null===selectedModel)if(event.shiftKey){const relative=this.diagramModel.getDiagramEngine().getRelativePoint(event.clientX,event.clientY);this.startFiringAction(new _actions__WEBPACK_IMPORTED_MODULE_9__.d(relative.x,relative.y))}else this.diagramModel.clearSelection(),this.startFiringAction(new _actions__WEBPACK_IMPORTED_MODULE_9__.c(event.clientX,event.clientY,this.diagramModel));else if(selectedModel.model instanceof _models_port_model__WEBPACK_IMPORTED_MODULE_12__.a)if(!selectedModel.model.isLocked()&&selectedModel.model.getCanCreateLinks()){const relative=this.diagramModel.getDiagramEngine().getRelativeMousePoint(event),sourcePort=selectedModel.model,link=sourcePort.createLinkModel();link&&(link.setSourcePort(sourcePort),link.removeMiddlePoints(),link.getSourcePort()!==sourcePort&&link.setSourcePort(sourcePort),link.setTargetPort(null),link.getFirstPoint().setCoords(relative),link.getLastPoint().setCoords(relative),this.diagramModel.clearSelection(),link.getLastPoint().setSelected(),this.diagramModel.addLink(link),this.startFiringAction(new _actions_move_items_action__WEBPACK_IMPORTED_MODULE_10__.a(event.clientX,event.clientY,this.diagramModel.getDiagramEngine())))}else this.diagramModel.clearSelection();else selectedModel.model instanceof _models_point_model__WEBPACK_IMPORTED_MODULE_11__.a&&selectedModel.model.isConnectedToPort()?this.diagramModel.clearSelection():(event.shiftKey||selectedModel.model.getSelected()||this.diagramModel.clearSelection(),selectedModel.model.setSelected(),this.startFiringAction(new _actions_move_items_action__WEBPACK_IMPORTED_MODULE_10__.a(event.clientX,event.clientY,this.diagramModel.getDiagramEngine())));this.mouseMoveListener=this.renderer.listen(document,"mousemove",this.onMouseMove),this.mouseUpListener=this.renderer.listen(document,"mouseup",this.onMouseUp)}onMouseWheel(event){if(this.allowCanvasZoom){event.preventDefault(),event.stopPropagation();const currentZoomLevel=this.diagramModel.getZoomLevel(),oldZoomFactor=currentZoomLevel/100;let scrollDelta=this.inverseZoom?-event.deltaY:event.deltaY;if(event.ctrlKey&&scrollDelta%1!=0?scrollDelta/=3:scrollDelta/=60,currentZoomLevel+scrollDelta>10){const newZoomLvl=currentZoomLevel+scrollDelta;this.diagramModel.setZoomLevel(newZoomLvl)}const zoomFactor=this.diagramModel.getZoomLevel()/100,boundingRect=event.currentTarget.getBoundingClientRect(),clientWidth=boundingRect.width,clientHeight=boundingRect.height,widthDiff=clientWidth*zoomFactor-clientWidth*oldZoomFactor,heightDiff=clientHeight*zoomFactor-clientHeight*oldZoomFactor,clientX=event.clientX-boundingRect.left,clientY=event.clientY-boundingRect.top,xFactor=(clientX-this.diagramModel.getOffsetX())/oldZoomFactor/clientWidth,yFactor=(clientY-this.diagramModel.getOffsetY())/oldZoomFactor/clientHeight,updatedXOffset=this.diagramModel.getOffsetX()-widthDiff*xFactor,updatedYOffset=this.diagramModel.getOffsetY()-heightDiff*yFactor;this.diagramModel.setOffset(updatedXOffset,updatedYOffset)}}};Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)("model"),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_a=void 0!==_models_diagram_model__WEBPACK_IMPORTED_MODULE_2__.a&&_models_diagram_model__WEBPACK_IMPORTED_MODULE_2__.a)?_a:Object)],NgxDiagramComponent.prototype,"diagramModel",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Object)],NgxDiagramComponent.prototype,"allowCanvasZoom",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Object)],NgxDiagramComponent.prototype,"allowCanvasTranslation",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Object)],NgxDiagramComponent.prototype,"inverseZoom",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Object)],NgxDiagramComponent.prototype,"allowLooseLinks",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Number)],NgxDiagramComponent.prototype,"maxZoomOut",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Number)],NgxDiagramComponent.prototype,"maxZoomIn",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Input)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type",Object)],NgxDiagramComponent.prototype,"portMagneticRadius",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_b=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter)?_b:Object)],NgxDiagramComponent.prototype,"actionStartedFiring",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_c=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter)?_c:Object)],NgxDiagramComponent.prototype,"actionStillFiring",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Output)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_d=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.EventEmitter)?_d:Object)],NgxDiagramComponent.prototype,"actionStoppedFiring",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild)("nodesLayer",{read:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef,static:!0}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_e=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef)?_e:Object)],NgxDiagramComponent.prototype,"nodesLayer",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild)("linksLayer",{read:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef,static:!0}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_f=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewContainerRef)?_f:Object)],NgxDiagramComponent.prototype,"linksLayer",void 0),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.ViewChild)("canvas",{read:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef,static:!0}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:type","function"==typeof(_g=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ElementRef)?_g:Object)],NgxDiagramComponent.prototype,"canvas",void 0),NgxDiagramComponent=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Component)({selector:"ngdx-diagram",template:(__webpack_require__(319).default||__webpack_require__(319)).length?__webpack_require__(319).default||__webpack_require__(319):"",styles:[(__webpack_require__(320).default||__webpack_require__(320)).length?__webpack_require__(320).default||__webpack_require__(320):""],changeDetection:_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectionStrategy.OnPush}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",["function"==typeof(_h=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.Renderer2)?_h:Object,"function"==typeof(_j=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ChangeDetectorRef)?_j:Object])],NgxDiagramComponent)},3:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(268);var _lib_services_engine_service__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(670);__webpack_require__.d(__webpack_exports__,"DiagramEngine",(function(){return _lib_services_engine_service__WEBPACK_IMPORTED_MODULE_1__.a}));var _lib_ngx_diagrams_module__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(352);__webpack_require__.d(__webpack_exports__,"NgxDiagramsModule",(function(){return _lib_ngx_diagrams_module__WEBPACK_IMPORTED_MODULE_2__.a}));var _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(690);__webpack_require__.d(__webpack_exports__,"DefaultLabelComponent",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.a})),__webpack_require__.d(__webpack_exports__,"DefaultLabelModel",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.b})),__webpack_require__.d(__webpack_exports__,"DefaultLinkComponent",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.c})),__webpack_require__.d(__webpack_exports__,"DefaultLinkModel",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.d})),__webpack_require__.d(__webpack_exports__,"DefaultNodeComponent",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.e})),__webpack_require__.d(__webpack_exports__,"DefaultNodeModel",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.f})),__webpack_require__.d(__webpack_exports__,"DefaultPortComponent",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.g})),__webpack_require__.d(__webpack_exports__,"DefaultPortModel",(function(){return _lib_defaults_index__WEBPACK_IMPORTED_MODULE_3__.h}));var _lib_models__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(356);__webpack_require__.o(_lib_models__WEBPACK_IMPORTED_MODULE_4__,"AbstractLabelFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLabelFactory",(function(){return _lib_models__WEBPACK_IMPORTED_MODULE_4__.AbstractLabelFactory})),__webpack_require__.o(_lib_models__WEBPACK_IMPORTED_MODULE_4__,"AbstractLinkFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLinkFactory",(function(){return _lib_models__WEBPACK_IMPORTED_MODULE_4__.AbstractLinkFactory})),__webpack_require__.o(_lib_models__WEBPACK_IMPORTED_MODULE_4__,"AbstractNodeFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractNodeFactory",(function(){return _lib_models__WEBPACK_IMPORTED_MODULE_4__.AbstractNodeFactory})),__webpack_require__.o(_lib_models__WEBPACK_IMPORTED_MODULE_4__,"AbstractPortFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractPortFactory",(function(){return _lib_models__WEBPACK_IMPORTED_MODULE_4__.AbstractPortFactory})),__webpack_require__.o(_lib_models__WEBPACK_IMPORTED_MODULE_4__,"generateCurvePath")&&__webpack_require__.d(__webpack_exports__,"generateCurvePath",(function(){return _lib_models__WEBPACK_IMPORTED_MODULE_4__.generateCurvePath}));var _lib_interfaces__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(672);__webpack_require__.o(_lib_interfaces__WEBPACK_IMPORTED_MODULE_5__,"AbstractLabelFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLabelFactory",(function(){return _lib_interfaces__WEBPACK_IMPORTED_MODULE_5__.AbstractLabelFactory})),__webpack_require__.o(_lib_interfaces__WEBPACK_IMPORTED_MODULE_5__,"AbstractLinkFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLinkFactory",(function(){return _lib_interfaces__WEBPACK_IMPORTED_MODULE_5__.AbstractLinkFactory})),__webpack_require__.o(_lib_interfaces__WEBPACK_IMPORTED_MODULE_5__,"AbstractNodeFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractNodeFactory",(function(){return _lib_interfaces__WEBPACK_IMPORTED_MODULE_5__.AbstractNodeFactory})),__webpack_require__.o(_lib_interfaces__WEBPACK_IMPORTED_MODULE_5__,"AbstractPortFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractPortFactory",(function(){return _lib_interfaces__WEBPACK_IMPORTED_MODULE_5__.AbstractPortFactory})),__webpack_require__.o(_lib_interfaces__WEBPACK_IMPORTED_MODULE_5__,"generateCurvePath")&&__webpack_require__.d(__webpack_exports__,"generateCurvePath",(function(){return _lib_interfaces__WEBPACK_IMPORTED_MODULE_5__.generateCurvePath}));var _lib_factories__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(676);__webpack_require__.d(__webpack_exports__,"AbstractLabelFactory",(function(){return _lib_factories__WEBPACK_IMPORTED_MODULE_6__.a})),__webpack_require__.d(__webpack_exports__,"AbstractLinkFactory",(function(){return _lib_factories__WEBPACK_IMPORTED_MODULE_6__.b})),__webpack_require__.d(__webpack_exports__,"AbstractNodeFactory",(function(){return _lib_factories__WEBPACK_IMPORTED_MODULE_6__.c})),__webpack_require__.d(__webpack_exports__,"AbstractPortFactory",(function(){return _lib_factories__WEBPACK_IMPORTED_MODULE_6__.d}));__webpack_require__(141);var _lib_utils__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(691);__webpack_require__.d(__webpack_exports__,"generateCurvePath",(function(){return _lib_utils__WEBPACK_IMPORTED_MODULE_8__.a}));__webpack_require__(677)},319:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<div class=\"ngdx-diagram\" #canvas (mousedown)=\"onMouseDown($event)\" (wheel)=\"onMouseWheel($event)\">\n\t\x3c!-- Nodes Layer --\x3e\n\t<div\n\t\tclass=\"ngdx-nodes-layer\"\n\t\t[ngStyle]=\"{\n\t\t\ttransform:\n\t\t\t\t'translate(' +\n\t\t\t\t(diagramModel.selectOffsetX() | async) +\n\t\t\t\t'px, ' +\n\t\t\t\t(diagramModel.selectOffsetY() | async) +\n\t\t\t\t'px) scale(' +\n\t\t\t\t(diagramModel.selectZoomLevel() | async) / 100.0 +\n\t\t\t\t')'\n\t\t}\"\n\t>\n\t\t<ng-template #nodesLayer></ng-template>\n\t</div>\n\n\t\x3c!-- Links Layer --\x3e\n\t<div\n\t\tclass=\"ngdx-links-layer\"\n\t\t[ngStyle]=\"{\n\t\t\ttransform:\n\t\t\t\t'translate(' +\n\t\t\t\t(diagramModel.selectOffsetX() | async) +\n\t\t\t\t'px, ' +\n\t\t\t\t(diagramModel.selectOffsetY() | async) +\n\t\t\t\t'px) scale(' +\n\t\t\t\t(diagramModel.selectZoomLevel() | async) / 100.0 +\n\t\t\t\t')'\n\t\t}\"\n\t>\n\t\t<ng-template #linksLayer></ng-template>\n\t</div>\n\n\t\x3c!-- Selection Box --\x3e\n\t<div\n\t\t*ngIf=\"shouldDrawSelectionBox() && selectAction() | async as action\"\n\t\tclass=\"selector\"\n\t\t[ngStyle]=\"{\n\t\t\ttop: action.dimensions.top + 'px',\n\t\t\tleft: action.dimensions.left + 'px',\n\t\t\twidth: action.dimensions.width + 'px',\n\t\t\theight: action.dimensions.height + 'px'\n\t\t}\"\n\t></div>\n</div>\n"},320:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".ngdx-diagram {\n  position: relative;\n  flex-grow: 1;\n  display: flex;\n  cursor: move;\n  overflow: hidden;\n}\n.ngdx-diagram .selector {\n  position: absolute;\n  background-color: rgba(0, 192, 255, 0.2);\n  border: solid 2px #00c0ff;\n}\n.ngdx-diagram .ngdx-nodes-layer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0 0;\n  overflow: visible !important;\n  pointer-events: none;\n  z-index: 150;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}\n.ngdx-diagram .ngdx-links-layer {\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0 0;\n  overflow: visible !important;\n  pointer-events: none;\n  z-index: 100;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n}"},321:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<div\n\tclass=\"default-node\"\n\t[ngStyle]=\"{\n\t\t'height.px': height$ | async,\n\t\t'width.px': width$ | async,\n\t\t'background-color': color\n\t}\"\n>\n\t<div class=\"ports\">\n\t\t<ng-template #portsLayer></ng-template>\n\t</div>\n</div>\n"},322:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=":host.selected .default-node {\n  background-color: white !important;\n  border-color: blue;\n}\n:host .default-node {\n  pointer-events: all;\n  width: 100%;\n  border-radius: 10px;\n  transition: all 0.3s ease-in-out;\n  cursor: auto;\n}\n:host .default-node .title {\n  padding: 10px;\n  text-align: center;\n  border-bottom: 1px solid blue;\n}\n:host .ports {\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n}"},323:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<div [ngClass]=\"in ? 'in' : 'out'\" draggable=\"false\"></div>\n"},324:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=":host {\n  position: relative;\n  width: 10px;\n  height: 10px;\n  border-radius: 60px;\n  border: 1px solid gray;\n  background-color: lightgray;\n  margin: 10px 0;\n}\n:host:hover {\n  background-color: green;\n}\n:host.out {\n  right: -195px;\n}\n:host.in {\n  left: -5px;\n}"},325:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='\x3c!-- Label Host --\x3e\n<ng-template #labelLayer></ng-template>\n\n<svg class="link-container">\n\t\x3c!-- Link --\x3e\n\t<g [id]="id">\n\t\t<path\n\t\t\t[attr.stroke-width]="width"\n\t\t\t[attr.stroke]="selectColor() | async"\n\t\t\t[attr.d]="path$ | async"\n\t\t\tclass="default-link"\n\t\t\t(mouseleave)="setHovered(false)"\n\t\t\t(mouseenter)="setHovered()"\n\t\t\t[ngClass]="{ hovered: selectHovered() | async }"\n\t\t></path>\n\t\t<path\n\t\t\tclass="default-link"\n\t\t\t(mouseleave)="setHovered(false)"\n\t\t\t(mouseenter)="setHovered()"\n\t\t\t[attr.stroke-width]="20"\n\t\t\t[attr.stroke]="selectColor() | async"\n\t\t\t[attr.stroke-linecap]="\'round\'"\n\t\t\t[attr.data-linkid]="id"\n\t\t\t[attr.stroke-opacity]="(selectHovered() | async) ? \'0.1\' : \'0\'"\n\t\t\t[attr.d]="path$ | async"\n\t\t></path>\n\t</g>\n\n\t\x3c!-- Points --\x3e\n\t<g *ngFor="let point of getPoints()" [id]="point.id">\n\t\t<circle\n\t\t\tfill="currentColor"\n\t\t\t[attr.cx]="point.selectX() | async"\n\t\t\t[attr.cy]="point.selectY() | async"\n\t\t\tr="5"\n\t\t\tclass="default-point"\n\t\t\t[ngClass]="{ hovered: point.selectHovered() | async }"\n\t\t/>\n\t\t<circle\n\t\t\t[attr.data-pointid]="point.id"\n\t\t\t[attr.data-linkid]="id"\n\t\t\t(mouseleave)="point.setHovered(false); setHovered(false)"\n\t\t\t(mouseenter)="point.setHovered(); setHovered()"\n\t\t\t[attr.cx]="point.selectX() | async"\n\t\t\t[attr.cy]="point.selectY() | async"\n\t\t\tr="15"\n\t\t\t[attr.opacity]="0"\n\t\t\t[ngClass]="{ selected: point.selectSelected() | async }"\n\t\t/>\n\t</g>\n</svg>\n'},326:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".link-container {\n  fill: none;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.default-link {\n  fill: none;\n  overflow: visible;\n}\n\n@-webkit-keyframes dash {\n  from {\n    stroke-dashoffset: 24;\n  }\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n\n@keyframes dash {\n  from {\n    stroke-dashoffset: 24;\n  }\n  to {\n    stroke-dashoffset: 0;\n  }\n}\n\n.default-link.hovered {\n  stroke: #00c0ff;\n  stroke-dasharray: 10, 2;\n  -webkit-animation: dash 1s linear infinite;\n          animation: dash 1s linear infinite;\n}\n\n.default-point {\n  color: lightgray;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.default-point.hovered {\n  color: #00c0ff;\n}"},327:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<div\n\tclass=\"default-label\"\n\t[ngStyle]=\"{\n\t\ttransform:\n\t\t\t'translate(' +\n\t\t\t(selectCoords() | async).x +\n\t\t\t'px, ' +\n\t\t\t(selectCoords() | async).y +\n\t\t\t'px)' +\n\t\t\t'rotate(' +\n\t\t\t(selectRotation() | async) +\n\t\t\t'deg)'\n\t}\"\n>\n\t{{ label$ | async }}\n</div>\n"},328:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".default-label {\n  color: white;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}"},330:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default="<div\n\tclass=\"default-label\"\n\t[ngStyle]=\"{\n\t\ttransform:\n\t\t\t'translate(' +\n\t\t\t(selectCoords() | async).x +\n\t\t\t'px, ' +\n\t\t\t(selectCoords() | async).y +\n\t\t\t'px)' +\n\t\t\t'rotate(' +\n\t\t\t(selectRotation() | async) +\n\t\t\t'deg)'\n\t}\"\n>\n\t{{ label$ | async }}\n</div>\n"},331:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".default-label {\n  background-image: linear-gradient(to left, violet, indigo, blue, green, yellow, orange, red);\n  -webkit-background-clip: text;\n          background-clip: text;\n  color: transparent;\n  font-size: 24px;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n}"},332:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='\x3c!-- Label Host --\x3e\n<ng-template #labelLayer></ng-template>\n\n<svg class="custom-link-container" [ngStyle]="{ color: selectColor() | async }">\n\t<g>\n\t\t<defs>\n\t\t\t<marker id="triangle" viewBox="0 0 20 20" refX="15" refY="4" markerUnits="strokeWidth" markerWidth="1" markerHeight="1" orient="auto">\n\t\t\t\t<path d="M 0 0 L 10 5 L 0 10 z" fill="currentcolor" stroke="currentcolor" />\n\t\t\t</marker>\n\t\t</defs>\n\t\t<path\n\t\t\t[attr.stroke-width]="width"\n\t\t\t[attr.stroke]="selectColor() | async"\n\t\t\t[attr.d]="path$ | async"\n\t\t\tclass="custom-link"\n\t\t\t(mouseleave)="setHovered(false)"\n\t\t\t(mouseenter)="setHovered()"\n\t\t\t[ngClass]="{ hovered: selectHovered() | async }"\n\t\t\tmarker-end="url(#triangle)"\n\t\t></path>\n\t\t<path\n\t\t\tclass="custom-link"\n\t\t\t(mouseleave)="setHovered(false)"\n\t\t\t(mouseenter)="setHovered()"\n\t\t\t[attr.stroke-width]="20"\n\t\t\t[attr.stroke]="selectColor() | async"\n\t\t\t[attr.stroke-linecap]="\'round\'"\n\t\t\t[attr.data-linkid]="id"\n\t\t\t[attr.stroke-opacity]="(selectHovered() | async) ? \'0.1\' : \'0\'"\n\t\t\t[attr.d]="path$ | async"\n\t\t\tmarker-end="url(#triangle)"\n\t\t></path>\n\t</g>\n\n\t\x3c!-- Points --\x3e\n\t<g *ngFor="let point of getPoints()" [id]="point.id">\n\t\t<circle\n\t\t\tfill="currentColor"\n\t\t\t[attr.cx]="point.selectX() | async"\n\t\t\t[attr.cy]="point.selectY() | async"\n\t\t\tr="5"\n\t\t\tclass="default-point"\n\t\t\t[ngClass]="{ hovered: point.selectHovered() | async }"\n\t\t/>\n\t\t<circle\n\t\t\t[attr.data-pointid]="point.id"\n\t\t\t[attr.data-linkid]="id"\n\t\t\t(mouseleave)="point.setHovered(false); setHovered(false)"\n\t\t\t(mouseenter)="point.setHovered(); setHovered()"\n\t\t\t[attr.cx]="point.selectX() | async"\n\t\t\t[attr.cy]="point.selectY() | async"\n\t\t\tr="15"\n\t\t\t[attr.opacity]="0"\n\t\t\t[ngClass]="{ selected: point.selectSelected() | async }"\n\t\t/>\n\t</g>\n</svg>\n\n<div\n\t(click)="deleteLink()"\n\tclass="delete-icon"\n\t[ngStyle]="{\n\t\ttransform: \'translate(\' + calcCenterOfPath().x + \'px, \' + (calcCenterOfPath().y - 200) + \'px)\'\n\t}"\n>\n\t<svg fill="currentcolor" xmlns="http://www.w3.org/2000/svg" height="30px" viewBox="-47 0 512 512" width="30px">\n\t\t<path\n\t\t\tfill="currentcolor"\n\t\t\td="m416.875 114.441406-11.304688-33.886718c-4.304687-12.90625-16.339843-21.578126-29.941406-21.578126h-95.011718v-30.933593c0-15.460938-12.570313-28.042969-28.027344-28.042969h-87.007813c-15.453125 0-28.027343 12.582031-28.027343 28.042969v30.933593h-95.007813c-13.605469 0-25.640625 8.671876-29.945313 21.578126l-11.304687 33.886718c-2.574219 7.714844-1.2695312 16.257813 3.484375 22.855469 4.753906 6.597656 12.445312 10.539063 20.578125 10.539063h11.816406l26.007813 321.605468c1.933594 23.863282 22.183594 42.558594 46.109375 42.558594h204.863281c23.921875 0 44.175781-18.695312 46.105469-42.5625l26.007812-321.601562h6.542969c8.132812 0 15.824219-3.941407 20.578125-10.535157 4.753906-6.597656 6.058594-15.144531 3.484375-22.859375zm-249.320312-84.441406h83.0625v28.976562h-83.0625zm162.804687 437.019531c-.679687 8.402344-7.796875 14.980469-16.203125 14.980469h-204.863281c-8.40625 0-15.523438-6.578125-16.203125-14.980469l-25.816406-319.183593h288.898437zm-298.566406-349.183593 9.269531-27.789063c.210938-.640625.808594-1.070313 1.484375-1.070313h333.082031c.675782 0 1.269532.429688 1.484375 1.070313l9.269531 27.789063zm0 0"\n\t\t/>\n\t\t<path\n\t\t\tfill="currentcolor"\n\t\t\td="m282.515625 465.957031c.265625.015625.527344.019531.792969.019531 7.925781 0 14.550781-6.210937 14.964844-14.21875l14.085937-270.398437c.429687-8.273437-5.929687-15.332031-14.199219-15.761719-8.292968-.441406-15.328125 5.925782-15.761718 14.199219l-14.082032 270.398437c-.429687 8.273438 5.925782 15.332032 14.199219 15.761719zm0 0"\n\t\t/>\n\t\t<path\n\t\t\tfill="currentcolor"\n\t\t\td="m120.566406 451.792969c.4375 7.996093 7.054688 14.183593 14.964844 14.183593.273438 0 .554688-.007812.832031-.023437 8.269531-.449219 14.609375-7.519531 14.160157-15.792969l-14.753907-270.398437c-.449219-8.273438-7.519531-14.613281-15.792969-14.160157-8.269531.449219-14.609374 7.519532-14.160156 15.792969zm0 0"\n\t\t/>\n\t\t<path\n\t\t\tfill="currentcolor"\n\t\t\td="m209.253906 465.976562c8.285156 0 15-6.714843 15-15v-270.398437c0-8.285156-6.714844-15-15-15s-15 6.714844-15 15v270.398437c0 8.285157 6.714844 15 15 15zm0 0"\n\t\t/>\n\t</svg>\n</div>\n'},333:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=".custom-link #triangle path {\n  fill: currentColor;\n}\n\n.custom-link-container {\n  fill: none;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.default-point {\n  color: lightgray;\n  overflow: visible;\n  pointer-events: all;\n}\n\n.default-point.hovered {\n  color: #00c0ff;\n}\n\n.delete-icon {\n  color: white;\n  cursor: pointer;\n  display: flex;\n  pointer-events: all;\n}"},334:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<div class="custom-node">\n\t<div>{{ nodeContent }}</div>\n\n\t<div class="ports">\n\t\t<ng-template #portsLayer></ng-template>\n\t</div>\n</div>\n'},335:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=':host.selected .custom-node:after {\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-color: #86d8b9;\n}\n:host .custom-node {\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  pointer-events: all;\n  background-color: white !important;\n  border-radius: 16px;\n  transition: all 0.3s ease-in-out;\n  padding: 20px;\n  cursor: auto;\n  border: 1px solid #e1e2e6;\n}\n:host .custom-node:hover {\n  cursor: pointer;\n  border-color: #86d8b9;\n}\n:host .custom-node:after {\n  transition: all 0.3s ease-in-out;\n  content: "";\n  position: absolute;\n  top: 12px;\n  right: 4px;\n  bottom: 4px;\n  left: 12px;\n  z-index: -1;\n  margin: -9px;\n  border-radius: 16px;\n}\n:host .custom-node:after {\n  background: #86d8b9;\n}'},336:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default='<svg class="in" *ngIf="in" width="24" height="16" viewBox="0 0 24 16" fill="none" xmlns="http://www.w3.org/2000/svg">\n\t<path\n\t\td="M23.4092 0.839456L23.4096 0.839967C23.4709 0.93801 23.5 1.04467 23.5 1.14951C23.5 1.24656 23.4748 1.34624 23.421 1.44004L12.6823 15.1163L12.6657 15.1375L12.6514 15.1603C12.5272 15.3593 12.2828 15.5 11.9998 15.5C11.7164 15.5 11.4727 15.3596 11.3489 15.1608L11.3345 15.1377L11.3177 15.1163L0.578554 1.44007C0.470045 1.25053 0.474001 1.02677 0.590099 0.84006C0.714827 0.640412 0.959347 0.499999 1.2421 0.499999L22.7579 0.5C23.041 0.5 23.285 0.640261 23.4092 0.839456Z"\n\t\tfill="white"\n\t\tstroke="#B0B0B0"\n\t/>\n</svg>\n'},337:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_exports__.default=":host {\n  position: absolute;\n}\n:host.in {\n  left: 45%;\n  top: -10px;\n}"},345:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return LooseLinkDestroyed}));var _base_action__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(87);class LooseLinkDestroyed extends _base_action__WEBPACK_IMPORTED_MODULE_0__.a{constructor(mouseX,mouseY,link){super(mouseX,mouseY),this.sourcePort=link.getSourcePort(),this.link=link}getOutPortNode(){return this.sourcePort.getParent()}}},346:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultNodeFactory}));var _components_default_node_default_node_component__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(183),_factories_node_factory__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(347),_models_default_node_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(230);class DefaultNodeFactory extends _factories_node_factory__WEBPACK_IMPORTED_MODULE_1__.a{constructor(resolver,renderer){super("default"),this.resolver=resolver,this.renderer=renderer}generateWidget(diagramEngine,node,nodesHost){const componentRef=nodesHost.createComponent(this.getRecipe()),rootNode=componentRef.location.nativeElement;return this.renderer.setStyle(rootNode,"position","absolute"),this.renderer.setStyle(rootNode,"display","block"),this.renderer.setAttribute(rootNode,"data-nodeid",node.id),node.selectCoords().subscribe(({x:x,y:y})=>{this.renderer.setStyle(rootNode,"left",x+"px"),this.renderer.setStyle(rootNode,"top",y+"px")}),node.selectionChanges().subscribe(e=>{e.isSelected?this.renderer.addClass(rootNode,"selected"):this.renderer.removeClass(rootNode,"selected")}),node.onEntityDestroy().subscribe(()=>{componentRef.destroy()}),Object.entries(node).forEach(([key,value])=>{componentRef.instance[key]=value}),componentRef.instance.setDiagramEngine(diagramEngine),componentRef.instance.setPainted(!0),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(_components_default_node_default_node_component__WEBPACK_IMPORTED_MODULE_0__.a)}getNewInstance(initialConfig){return new _models_default_node_model__WEBPACK_IMPORTED_MODULE_2__.a(initialConfig)}}},347:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AbstractNodeFactory}));var _base_factory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(133);class AbstractNodeFactory extends _base_factory__WEBPACK_IMPORTED_MODULE_0__.a{}},348:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultPortFactory}));var _factories_port_factory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(349),_models_default_port_model__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(158),_components_default_port_default_port_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(184);class DefaultPortFactory extends _factories_port_factory__WEBPACK_IMPORTED_MODULE_0__.a{constructor(resolver,renderer){super("default"),this.resolver=resolver,this.renderer=renderer}generateWidget(port,portsHost){const componentRef=portsHost.createComponent(this.getRecipe()),rootNode=componentRef.location.nativeElement;return this.renderer.setAttribute(rootNode,"data-portid",port.id),this.renderer.setAttribute(rootNode,"data-name",port.getName()),port.in?this.renderer.addClass(rootNode,"in"):this.renderer.addClass(rootNode,"out"),Object.entries(port).forEach(([key,value])=>{componentRef.instance[key]=value}),port.onEntityDestroy().subscribe(()=>{componentRef.destroy()}),componentRef.instance.setPainted(!0),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(_components_default_port_default_port_component__WEBPACK_IMPORTED_MODULE_2__.a)}getNewInstance(initialConfig){return new _models_default_port_model__WEBPACK_IMPORTED_MODULE_1__.a(Object.assign({isInput:!0,name:"unknown"},initialConfig))}}},349:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AbstractPortFactory}));var _base_factory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(133);class AbstractPortFactory extends _base_factory__WEBPACK_IMPORTED_MODULE_0__.a{}},350:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultLinkFactory}));var _factories_link_factory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(351),_components_default_link_default_link_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(185),_models_default_link_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(159);class DefaultLinkFactory extends _factories_link_factory__WEBPACK_IMPORTED_MODULE_0__.a{constructor(resolver,renderer){super("default"),this.resolver=resolver,this.renderer=renderer}generateWidget(diagramEngine,link,linksHost){const componentRef=linksHost.createComponent(this.getRecipe()),rootNode=componentRef.location.nativeElement;return this.renderer.setStyle(rootNode,"position","absolute"),this.renderer.addClass(rootNode,"label"),this.renderer.setAttribute(rootNode,"data-linkid",link.id),link.onEntityDestroy().subscribe(()=>{componentRef.destroy()}),Object.entries(link).forEach(([key,value])=>{componentRef.instance[key]=value}),componentRef.instance.diagramEngine=diagramEngine,componentRef.instance.setPainted(!0),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(_components_default_link_default_link_component__WEBPACK_IMPORTED_MODULE_1__.a)}getNewInstance(){return new _models_default_link_model__WEBPACK_IMPORTED_MODULE_2__.a}}},351:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AbstractLinkFactory}));var _base_factory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(133);class AbstractLinkFactory extends _base_factory__WEBPACK_IMPORTED_MODULE_0__.a{}},352:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return NgxDiagramsModule}));var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_containers_diagram_diagram_component__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(268),_angular_common__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(12);let NgxDiagramsModule=class NgxDiagramsModule{};NgxDiagramsModule=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({declarations:[_containers_diagram_diagram_component__WEBPACK_IMPORTED_MODULE_2__.a],imports:[_angular_common__WEBPACK_IMPORTED_MODULE_3__.a],providers:[],exports:[_containers_diagram_diagram_component__WEBPACK_IMPORTED_MODULE_2__.a],entryComponents:[]})],NgxDiagramsModule)},353:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DefaultLabelFactory}));var _factories_label_factory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(354),_components_default_label_default_label_component__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(186),_models_default_label_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(231);class DefaultLabelFactory extends _factories_label_factory__WEBPACK_IMPORTED_MODULE_0__.a{constructor(resolver,renderer){super("default"),this.resolver=resolver,this.renderer=renderer}generateWidget(label,labelHost){const componentRef=labelHost.createComponent(this.getRecipe()),rootNode=componentRef.location.nativeElement;return this.renderer.setStyle(rootNode,"position","absolute"),this.renderer.setAttribute(rootNode,"data-labelid",label.id),label.onEntityDestroy().subscribe(()=>{componentRef.destroy()}),Object.entries(label).forEach(([key,value])=>{componentRef.instance[key]=value}),componentRef.instance.setPainted(!0),componentRef}getRecipe(){return this.resolver.resolveComponentFactory(_components_default_label_default_label_component__WEBPACK_IMPORTED_MODULE_1__.a)}getNewInstance(){return new _models_default_label_model__WEBPACK_IMPORTED_MODULE_2__.a}}},354:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return AbstractLabelFactory}));var _base_factory__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(133);class AbstractLabelFactory extends _base_factory__WEBPACK_IMPORTED_MODULE_0__.a{}},355:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return LabelModel}));var _base_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(107),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(23),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(63),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(71);class LabelModel extends _base_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor(type,id){super(type,id),this._coords=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a({x:0,y:0}),this.coords$=this._coords.asObservable(),this._rotation=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a(0),this.rotation$=this._rotation.asObservable()}serialize(){return Object.assign(Object.assign({},super.serialize()),{type:this.getType(),rotation:this.getRotation(),coords:this.getCoords()})}getRotation(){return this._rotation.getValue()}getCoords(){return this._coords.getValue()}destroy(){super.destroy()}setRotation(angle){this._rotation.next(angle)}selectRotation(){return this.rotation$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}setCoords(newCoords){this._coords.next(Object.assign(Object.assign({},this._coords.getValue()),newCoords))}selectCoords(){return this.coords$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}}},356:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(107),__webpack_require__(207),__webpack_require__(118);var _move_selection_model__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(671);__webpack_require__.o(_move_selection_model__WEBPACK_IMPORTED_MODULE_3__,"AbstractLabelFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLabelFactory",(function(){return _move_selection_model__WEBPACK_IMPORTED_MODULE_3__.AbstractLabelFactory})),__webpack_require__.o(_move_selection_model__WEBPACK_IMPORTED_MODULE_3__,"AbstractLinkFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLinkFactory",(function(){return _move_selection_model__WEBPACK_IMPORTED_MODULE_3__.AbstractLinkFactory})),__webpack_require__.o(_move_selection_model__WEBPACK_IMPORTED_MODULE_3__,"AbstractNodeFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractNodeFactory",(function(){return _move_selection_model__WEBPACK_IMPORTED_MODULE_3__.AbstractNodeFactory})),__webpack_require__.o(_move_selection_model__WEBPACK_IMPORTED_MODULE_3__,"AbstractPortFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractPortFactory",(function(){return _move_selection_model__WEBPACK_IMPORTED_MODULE_3__.AbstractPortFactory})),__webpack_require__.o(_move_selection_model__WEBPACK_IMPORTED_MODULE_3__,"PointModel")&&__webpack_require__.d(__webpack_exports__,"PointModel",(function(){return _move_selection_model__WEBPACK_IMPORTED_MODULE_3__.PointModel})),__webpack_require__.o(_move_selection_model__WEBPACK_IMPORTED_MODULE_3__,"generateCurvePath")&&__webpack_require__.d(__webpack_exports__,"generateCurvePath",(function(){return _move_selection_model__WEBPACK_IMPORTED_MODULE_3__.generateCurvePath}));__webpack_require__(137);var _point_model__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(77);__webpack_require__.d(__webpack_exports__,"PointModel",(function(){return _point_model__WEBPACK_IMPORTED_MODULE_5__.a}));__webpack_require__(157),__webpack_require__(355)},371:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return BaseEntity}));var _utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(79),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(33),rxjs__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(23),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(63),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29),_interfaces_event_interface__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(161);class BaseEntity{constructor(id,logPrefix=""){this._destroyed=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a,this._destroyed$=this._destroyed.asObservable(),this._locked=new rxjs__WEBPACK_IMPORTED_MODULE_2__.a(!1),this._locked$=this._locked.asObservable(),this._id=id||Object(_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__.b)(),this._logPrefix=""+logPrefix}get id(){return this._id}set id(id){this._id=id}log(message,...args){Object(_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__.d)(`${this._logPrefix} ${message}: `,_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__.a.LOG,...args)}withLog(message,...args){return Object(_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__.f)(`${this._logPrefix} ${message}: `,_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__.a.LOG,...args)}getLocked(){return this._locked.getValue()}setLocked(locked=!0){this._locked.next(locked)}doClone(lookupTable={},clone){}clone(lookupTable={}){if(lookupTable[this.id])return lookupTable[this.id];const clone=Object.assign({},this);return clone.id=Object(_utils_tool_kit_util__WEBPACK_IMPORTED_MODULE_0__.b)(),lookupTable[this.id]=clone,this.doClone(lookupTable,clone),clone}serialize(){return{id:this.id,locked:this.getLocked()}}lockChanges(){return this._locked$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(locked=>new _interfaces_event_interface__WEBPACK_IMPORTED_MODULE_5__.b(this,locked)),this.withLog("lockChanges"))}destroy(){this.log("entity destroyed"),this._destroyed.next(),this._destroyed.complete()}onEntityDestroy(){return this._destroyed$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(opts=>new _interfaces_event_interface__WEBPACK_IMPORTED_MODULE_5__.a(this,opts)))}}},586:function(module,exports){function webpackEmptyAsyncContext(req){return Promise.resolve().then((function(){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=function(){return[]},webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,module.exports=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id=586},670:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return DiagramEngine}));var _a,_b,tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_models_diagram_model__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(207),_defaults_factories_default_node_factory__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(346),_defaults_factories_default_port_factory__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(348),rxjs__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(23),rxjs_operators__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(67),rxjs_operators__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(206),rxjs_operators__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(475),_defaults_factories_default_link_factory__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(350),_ngx_diagrams_module__WEBPACK_IMPORTED_MODULE_10__=__webpack_require__(352),_defaults_factories_default_label_factory__WEBPACK_IMPORTED_MODULE_11__=__webpack_require__(353);let DiagramEngine=class DiagramEngine{constructor(resolver,rendererFactory){this.resolver=resolver,this.rendererFactory=rendererFactory,this._renderer=this.rendererFactory.createRenderer(null,null),this.nodeFactories={},this.linkFactories={},this.portFactories={},this.labelFactories={},this.canvas$=new rxjs__WEBPACK_IMPORTED_MODULE_5__.a(null)}createDiagram(){return this.diagramModel=new _models_diagram_model__WEBPACK_IMPORTED_MODULE_2__.a(this),this.diagramModel}registerDefaultFactories(){this.registerNodeFactory(new _defaults_factories_default_node_factory__WEBPACK_IMPORTED_MODULE_3__.a(this.resolver,this._renderer)),this.registerPortFactory(new _defaults_factories_default_port_factory__WEBPACK_IMPORTED_MODULE_4__.a(this.resolver,this._renderer)),this.registerLinkFactory(new _defaults_factories_default_link_factory__WEBPACK_IMPORTED_MODULE_9__.a(this.resolver,this._renderer)),this.registerLabelFactory(new _defaults_factories_default_label_factory__WEBPACK_IMPORTED_MODULE_11__.a(this.resolver,this._renderer))}registerLabelFactory(labelFactory){this.labelFactories[labelFactory.type]=labelFactory}getLabelFactories(){return this.labelFactories}getLabelFactory(type){if(this.labelFactories[type])return this.labelFactories[type];throw new Error(`cannot find factory for node of type: [${type}]`)}getFactoryForLabel(label){return this.getLabelFactory(label.getType())}generateWidgetForLabel(label,labelHost){const labelFactory=this.getFactoryForLabel(label);if(!labelFactory)throw new Error("Cannot find widget factory for node: "+label.getType());return labelFactory.generateWidget(label,labelHost)}registerNodeFactory(nodeFactory){this.nodeFactories[nodeFactory.type]=nodeFactory}getNodeFactories(){return this.nodeFactories}getNodeFactory(type){if(this.nodeFactories[type])return this.nodeFactories[type];throw new Error(`cannot find factory for node of type: [${type}]`)}getFactoryForNode(node){return this.getNodeFactory(node.getType())}generateWidgetForNode(node,nodesHost){const nodeFactory=this.getFactoryForNode(node);if(!nodeFactory)throw new Error("Cannot find widget factory for node: "+node.getType());return nodeFactory.generateWidget(this,node,nodesHost)}registerPortFactory(factory){this.portFactories[factory.type]=factory}getPortFactories(){return this.portFactories}getPortFactory(type){if(this.portFactories[type])return this.portFactories[type];throw new Error(`cannot find factory for port of type: [${type}]`)}getFactoryForPort(port){return this.getPortFactory(port.getType())}generateWidgetForPort(port,portsHost){const portFactory=this.getFactoryForPort(port);if(!portFactory)throw new Error("Cannot find widget factory for port: "+port.getType());return portFactory.generateWidget(port,portsHost)}getLinkFactories(){return this.linkFactories}registerLinkFactory(factory){this.linkFactories[factory.type]=factory}getLinkFactory(type){if(this.linkFactories[type])return this.linkFactories[type];throw new Error(`cannot find factory for link of type: [${type}]`)}getFactoryForLink(link){return this.getLinkFactory(link.getType())}generateWidgetForLink(link,linksHost){const linkFactory=this.getFactoryForLink(link);if(!linkFactory)throw new Error("Cannot find link factory for link: "+link.getType());return linkFactory.generateWidget(this,link,linksHost)}getNodeElement(node){const selector=this.canvas$.getValue().querySelector(`[data-nodeid="${node.id}"]`);if(null===selector)throw new Error("Cannot find Node element with node id: ["+node.id+"]");return selector}getNodePortElement(port){const selector=this.canvas$.getValue().querySelector(`[data-nodeid="${port.getParent().id}"] [data-portid="${port.id}"]`);if(null===selector)throw new Error("Cannot find Node Port element with node id: ["+port.getParent().id+"] and port id: ["+port.id+"]");return selector}getPortCenter(port){const sourceElement=this.getNodePortElement(port),sourceRect=sourceElement.getBoundingClientRect(),rel=this.getRelativePoint(sourceRect.left,sourceRect.top);return{x:sourceElement.offsetWidth/2+(rel.x-this.diagramModel.getOffsetX())/(this.diagramModel.getZoomLevel()/100),y:sourceElement.offsetHeight/2+(rel.y-this.diagramModel.getOffsetY())/(this.diagramModel.getZoomLevel()/100)}}getPortCoords(port){const sourceRect=this.getNodePortElement(port).getBoundingClientRect(),canvasRect=this.canvas$.getValue().getBoundingClientRect();return{x:(sourceRect.x-this.diagramModel.getOffsetX())/(this.diagramModel.getZoomLevel()/100)-canvasRect.left,y:(sourceRect.y-this.diagramModel.getOffsetY())/(this.diagramModel.getZoomLevel()/100)-canvasRect.top,width:sourceRect.width,height:sourceRect.height}}getNodeDimensions(node){if(!this.canvas$.getValue())return{width:0,height:0};const nodeRect=this.getNodeElement(node).getBoundingClientRect();return{width:nodeRect.width,height:nodeRect.height}}setCanvas(canvas){this.canvas$.next(canvas)}getRelativeMousePoint(event){const point=this.getRelativePoint(event.clientX,event.clientY);return{x:(point.x-this.diagramModel.getOffsetX())/(this.diagramModel.getZoomLevel()/100),y:(point.y-this.diagramModel.getOffsetY())/(this.diagramModel.getZoomLevel()/100)}}getRelativePoint(x,y){const canvasRect=this.canvas$.getValue().getBoundingClientRect();return{x:x-canvasRect.left,y:y-canvasRect.top}}getDiagramModel(){return this.diagramModel}isModelLocked(model){return!!this.diagramModel.getLocked()||model.getLocked()}autoArrange(){}zoomToFit(additionalZoomFactor=.005){this.canvas$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__.a)(Boolean),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__.a)(1),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_8__.a)(0)).subscribe(canvas=>{const xFactor=canvas.clientWidth/canvas.scrollWidth,yFactor=canvas.clientHeight/canvas.scrollHeight,zoomFactor=xFactor<yFactor?xFactor:yFactor;let newZoomLvl=this.diagramModel.getZoomLevel()*(zoomFactor-additionalZoomFactor);const maxZoomOut=this.diagramModel.getMaxZoomOut();maxZoomOut&&newZoomLvl<maxZoomOut&&(newZoomLvl=maxZoomOut),this.diagramModel.setZoomLevel(newZoomLvl),this.diagramModel.setOffset(0,0)})}};DiagramEngine=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)({providedIn:_ngx_diagrams_module__WEBPACK_IMPORTED_MODULE_10__.a}),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",["function"==typeof(_a=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.ComponentFactoryResolver)?_a:Object,"function"==typeof(_b=void 0!==_angular_core__WEBPACK_IMPORTED_MODULE_1__.RendererFactory2&&_angular_core__WEBPACK_IMPORTED_MODULE_1__.RendererFactory2)?_b:Object])],DiagramEngine)},671:function(module,exports){},672:function(module,__webpack_exports__,__webpack_require__){"use strict";var _coords_interface__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(673);__webpack_require__.o(_coords_interface__WEBPACK_IMPORTED_MODULE_0__,"AbstractLabelFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLabelFactory",(function(){return _coords_interface__WEBPACK_IMPORTED_MODULE_0__.AbstractLabelFactory})),__webpack_require__.o(_coords_interface__WEBPACK_IMPORTED_MODULE_0__,"AbstractLinkFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLinkFactory",(function(){return _coords_interface__WEBPACK_IMPORTED_MODULE_0__.AbstractLinkFactory})),__webpack_require__.o(_coords_interface__WEBPACK_IMPORTED_MODULE_0__,"AbstractNodeFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractNodeFactory",(function(){return _coords_interface__WEBPACK_IMPORTED_MODULE_0__.AbstractNodeFactory})),__webpack_require__.o(_coords_interface__WEBPACK_IMPORTED_MODULE_0__,"AbstractPortFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractPortFactory",(function(){return _coords_interface__WEBPACK_IMPORTED_MODULE_0__.AbstractPortFactory})),__webpack_require__.o(_coords_interface__WEBPACK_IMPORTED_MODULE_0__,"generateCurvePath")&&__webpack_require__.d(__webpack_exports__,"generateCurvePath",(function(){return _coords_interface__WEBPACK_IMPORTED_MODULE_0__.generateCurvePath}));var _dimensions_interface__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(674);__webpack_require__.o(_dimensions_interface__WEBPACK_IMPORTED_MODULE_1__,"AbstractLabelFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLabelFactory",(function(){return _dimensions_interface__WEBPACK_IMPORTED_MODULE_1__.AbstractLabelFactory})),__webpack_require__.o(_dimensions_interface__WEBPACK_IMPORTED_MODULE_1__,"AbstractLinkFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLinkFactory",(function(){return _dimensions_interface__WEBPACK_IMPORTED_MODULE_1__.AbstractLinkFactory})),__webpack_require__.o(_dimensions_interface__WEBPACK_IMPORTED_MODULE_1__,"AbstractNodeFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractNodeFactory",(function(){return _dimensions_interface__WEBPACK_IMPORTED_MODULE_1__.AbstractNodeFactory})),__webpack_require__.o(_dimensions_interface__WEBPACK_IMPORTED_MODULE_1__,"AbstractPortFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractPortFactory",(function(){return _dimensions_interface__WEBPACK_IMPORTED_MODULE_1__.AbstractPortFactory})),__webpack_require__.o(_dimensions_interface__WEBPACK_IMPORTED_MODULE_1__,"generateCurvePath")&&__webpack_require__.d(__webpack_exports__,"generateCurvePath",(function(){return _dimensions_interface__WEBPACK_IMPORTED_MODULE_1__.generateCurvePath}));__webpack_require__(161);var _serialization_interface__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(675);__webpack_require__.o(_serialization_interface__WEBPACK_IMPORTED_MODULE_3__,"AbstractLabelFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLabelFactory",(function(){return _serialization_interface__WEBPACK_IMPORTED_MODULE_3__.AbstractLabelFactory})),__webpack_require__.o(_serialization_interface__WEBPACK_IMPORTED_MODULE_3__,"AbstractLinkFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractLinkFactory",(function(){return _serialization_interface__WEBPACK_IMPORTED_MODULE_3__.AbstractLinkFactory})),__webpack_require__.o(_serialization_interface__WEBPACK_IMPORTED_MODULE_3__,"AbstractNodeFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractNodeFactory",(function(){return _serialization_interface__WEBPACK_IMPORTED_MODULE_3__.AbstractNodeFactory})),__webpack_require__.o(_serialization_interface__WEBPACK_IMPORTED_MODULE_3__,"AbstractPortFactory")&&__webpack_require__.d(__webpack_exports__,"AbstractPortFactory",(function(){return _serialization_interface__WEBPACK_IMPORTED_MODULE_3__.AbstractPortFactory})),__webpack_require__.o(_serialization_interface__WEBPACK_IMPORTED_MODULE_3__,"generateCurvePath")&&__webpack_require__.d(__webpack_exports__,"generateCurvePath",(function(){return _serialization_interface__WEBPACK_IMPORTED_MODULE_3__.generateCurvePath}))},673:function(module,exports){},674:function(module,exports){},675:function(module,exports){},676:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__(133);var _link_factory__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(351);__webpack_require__.d(__webpack_exports__,"b",(function(){return _link_factory__WEBPACK_IMPORTED_MODULE_1__.a}));var _port_factory__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(349);__webpack_require__.d(__webpack_exports__,"d",(function(){return _port_factory__WEBPACK_IMPORTED_MODULE_2__.a}));var _node_factory__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(347);__webpack_require__.d(__webpack_exports__,"c",(function(){return _node_factory__WEBPACK_IMPORTED_MODULE_3__.a}));var _label_factory__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(354);__webpack_require__.d(__webpack_exports__,"a",(function(){return _label_factory__WEBPACK_IMPORTED_MODULE_4__.a}))},677:function(module,__webpack_exports__,__webpack_require__){"use strict";var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(4),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(0),_models__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(356),dagre__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(483);let DagreEngine=class DagreEngine{constructor(){try{this.g=new dagre__WEBPACK_IMPORTED_MODULE_3__.graphlib.Graph({multigraph:!0})}catch(error){console.warn("`dagre` packages isn't installed, please install it before using the DagreEngine plugin")}}redistribute(model,options={}){this.g.setGraph(options.graph||{}),this.g.setDefaultEdgeLabel(()=>({}));const processedlinks={};Object.values(model.getNodes()).forEach(node=>{this.g.setNode(node.id,{width:node.getWidth(),height:node.getHeight()})}),Object.values(model.getLinks()).forEach(link=>{link.getSourcePort()&&link.getTargetPort()&&(processedlinks[link.id]=!0,this.g.setEdge({v:link.getSourcePort().getNode().id,w:link.getTargetPort().getNode().id,name:link.id}))}),dagre__WEBPACK_IMPORTED_MODULE_3__.layout(this.g,options.layout),this.g.nodes().forEach(v=>{const{x:x,y:y}=this.g.node(v);model.getNode(v).setCoords({x:x,y:y})}),options.includeLinks&&this.g.edges().forEach(e=>{const edge=this.g.edge(e),link=model.getLink(e.name),points=[link.getFirstPoint()];for(let i=1;i<edge.points.length-2;i++)points.push(new _models__WEBPACK_IMPORTED_MODULE_2__.PointModel(link,{x:edge.points[i].x,y:edge.points[i].y}));link.setPoints(points.concat(link.getLastPoint()))})}};DagreEngine=Object(tslib__WEBPACK_IMPORTED_MODULE_0__.a)([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__.Injectable)(),Object(tslib__WEBPACK_IMPORTED_MODULE_0__.b)("design:paramtypes",[])],DagreEngine)},690:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"c",(function(){return default_link_component.a})),__webpack_require__.d(__webpack_exports__,"e",(function(){return default_node_component.a})),__webpack_require__.d(__webpack_exports__,"g",(function(){return default_port_component.a})),__webpack_require__.d(__webpack_exports__,"a",(function(){return default_label_component.a})),__webpack_require__.d(__webpack_exports__,"d",(function(){return default_link_model.a})),__webpack_require__.d(__webpack_exports__,"f",(function(){return default_node_model.a})),__webpack_require__.d(__webpack_exports__,"h",(function(){return default_port_model.a})),__webpack_require__.d(__webpack_exports__,"b",(function(){return default_label_model.a}));var tslib_es6=__webpack_require__(4),core=__webpack_require__(0),common=__webpack_require__(12),default_link_component=__webpack_require__(185);let DefaultLinkModule=class DefaultLinkModule{};DefaultLinkModule=Object(tslib_es6.a)([Object(core.NgModule)({declarations:[default_link_component.a],imports:[common.a],providers:[],exports:[default_link_component.a],entryComponents:[default_link_component.a]})],DefaultLinkModule);var default_node_component=__webpack_require__(183);let DefaultNodeModule=class DefaultNodeModule{};DefaultNodeModule=Object(tslib_es6.a)([Object(core.NgModule)({declarations:[default_node_component.a],imports:[common.a],providers:[],exports:[default_node_component.a],entryComponents:[default_node_component.a]})],DefaultNodeModule);var default_port_component=__webpack_require__(184);let DefaultPortModule=class DefaultPortModule{};DefaultPortModule=Object(tslib_es6.a)([Object(core.NgModule)({declarations:[default_port_component.a],imports:[common.a],providers:[],exports:[default_port_component.a],entryComponents:[default_port_component.a]})],DefaultPortModule);var default_label_component=__webpack_require__(186);let DefaultLabelModule=class DefaultLabelModule{};DefaultLabelModule=Object(tslib_es6.a)([Object(core.NgModule)({declarations:[default_label_component.a],imports:[common.a],providers:[],exports:[default_label_component.a],entryComponents:[default_label_component.a]})],DefaultLabelModule);var default_link_model=__webpack_require__(159),default_node_model=__webpack_require__(230),default_port_model=__webpack_require__(158),default_label_model=__webpack_require__(231);__webpack_require__(350),__webpack_require__(348),__webpack_require__(346),__webpack_require__(353)},691:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return tool_kit_util.c}));var tool_kit_util=__webpack_require__(79)},704:function(module){module.exports=JSON.parse('{"pipes":[],"interfaces":[{"name":"Coords","id":"interface-Coords-d8cccc3efd28aa1635090819cde4fee2","file":"projects/ngx-diagrams/src/lib/interfaces/coords.interface.ts","type":"interface","sourceCode":"export interface Coords {\\n\\tx: number;\\n\\ty: number;\\n}\\n","properties":[{"name":"x","type":"number","optional":false,"description":"","line":2},{"name":"y","type":"number","optional":false,"description":"","line":3}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"DagreEngineOptions","id":"interface-DagreEngineOptions-3fd39313e4e137fa0889cce425edf4cd","file":"projects/ngx-diagrams/src/lib/plugins/dagre-engine.plugin.ts","type":"interface","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { DiagramModel, PointModel } from \'../models\';\\nimport * as dagre from \'dagre\';\\nimport { GraphLabel, NodeConfig, EdgeConfig } from \'dagre\';\\n\\nexport interface DagreEngineOptions {\\n\\tgraph?: GraphLabel;\\n\\tlayout?: GraphLabel & NodeConfig & EdgeConfig;\\n\\t/**\\n\\t * Will also layout links\\n\\t */\\n\\tincludeLinks?: boolean;\\n}\\n\\n@Injectable()\\nexport class DagreEngine {\\n\\tg: dagre.graphlib.Graph;\\n\\tconstructor() {\\n\\t\\ttry {\\n\\t\\t\\tthis.g = new dagre.graphlib.Graph({ multigraph: true });\\n\\t\\t} catch (error) {\\n\\t\\t\\tconsole.warn(\\"`dagre` packages isn\'t installed, please install it before using the DagreEngine plugin\\");\\n\\t\\t}\\n\\t}\\n\\n\\tredistribute(model: DiagramModel, options: DagreEngineOptions = {}): void {\\n\\t\\tthis.g.setGraph(options.graph || {});\\n\\n\\t\\tthis.g.setDefaultEdgeLabel(() => {\\n\\t\\t\\treturn {};\\n\\t\\t});\\n\\n\\t\\tconst processedlinks: { [id: string]: boolean } = {};\\n\\n\\t\\t// set nodes\\n\\t\\tObject.values(model.getNodes()).forEach(node => {\\n\\t\\t\\tthis.g.setNode(node.id, { width: node.getWidth(), height: node.getHeight() });\\n\\t\\t});\\n\\n\\t\\tObject.values(model.getLinks()).forEach(link => {\\n\\t\\t\\t// set edges\\n\\t\\t\\tif (link.getSourcePort() && link.getTargetPort()) {\\n\\t\\t\\t\\tprocessedlinks[link.id] = true;\\n\\t\\t\\t\\tthis.g.setEdge({\\n\\t\\t\\t\\t\\tv: link.getSourcePort().getNode().id,\\n\\t\\t\\t\\t\\tw: link.getTargetPort().getNode().id,\\n\\t\\t\\t\\t\\tname: link.id,\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\t// layout the graph\\n\\t\\tdagre.layout(this.g, options.layout);\\n\\n\\t\\tthis.g.nodes().forEach(v => {\\n\\t\\t\\tconst { x, y } = this.g.node(v);\\n\\t\\t\\tmodel.getNode(v).setCoords({ x, y });\\n\\t\\t});\\n\\n\\t\\t// also include links?\\n\\t\\tif (options.includeLinks) {\\n\\t\\t\\tthis.g.edges().forEach(e => {\\n\\t\\t\\t\\tconst edge = this.g.edge(e);\\n\\t\\t\\t\\tconst link = model.getLink(e.name);\\n\\n\\t\\t\\t\\tconst points = [link.getFirstPoint()];\\n\\t\\t\\t\\tfor (let i = 1; i < edge.points.length - 2; i++) {\\n\\t\\t\\t\\t\\tpoints.push(new PointModel(link, { x: edge.points[i].x, y: edge.points[i].y }));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlink.setPoints(points.concat(link.getLastPoint()));\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n}\\n","properties":[{"name":"graph","type":"GraphLabel","optional":true,"description":"","line":7},{"name":"includeLinks","type":"boolean","optional":true,"description":"<p>Will also layout links</p>\\n","line":12},{"name":"layout","type":"","optional":true,"description":"","line":8}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"DefaultPortModelConfig","id":"interface-DefaultPortModelConfig-1a4ddbc0af8ef42ab1b542533b561f80","file":"projects/ngx-diagrams/src/lib/defaults/models/default-port.model.ts","type":"interface","sourceCode":"import { PortModel } from \'../../models/port.model\';\\nimport { LinkModel } from \'../../models/link.model\';\\nimport { DefaultLinkModel } from \'./default-link.model\';\\n\\nexport interface DefaultPortModelConfig {\\n\\tid?: string;\\n\\tisInput?: boolean;\\n\\tname?: string;\\n\\ttype?: string;\\n\\tlabel?: string;\\n\\tlinkType?: string;\\n\\tmaximumLinks?: number;\\n}\\n\\nexport class DefaultPortModel extends PortModel {\\n\\tin: boolean;\\n\\tlabel: string;\\n\\tlinks: { [id: string]: any };\\n\\n\\tconstructor({\\n\\t\\tisInput = true,\\n\\t\\tname = \'port\',\\n\\t\\ttype = \'default\',\\n\\t\\tid = null,\\n\\t\\tlabel = null,\\n\\t\\tlinkType = \'default\',\\n\\t\\tmaximumLinks = null,\\n\\t}: DefaultPortModelConfig = {}) {\\n\\t\\tsuper(name, type, id, null, linkType);\\n\\t\\tthis.in = isInput;\\n\\t\\tthis.label = label || name;\\n\\n\\t\\tif (this.in) {\\n\\t\\t\\tthis.setCanCreateLinks(false);\\n\\t\\t} else {\\n\\t\\t\\tthis.setMaximumLinks(maximumLinks);\\n\\t\\t\\tthis.setMagnetic(false);\\n\\t\\t}\\n\\t}\\n\\n\\tlink(port: PortModel): LinkModel {\\n\\t\\tif (super.getCanCreateLinks()) {\\n\\t\\t\\tconst link = new DefaultLinkModel({ type: this.getLinkType() });\\n\\t\\t\\tlink.setSourcePort(this);\\n\\t\\t\\tlink.setTargetPort(port);\\n\\t\\t\\treturn link;\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t}\\n\\n\\tcreateLinkModel() {\\n\\t\\tif (super.getCanCreateLinks()) {\\n\\t\\t\\treturn new DefaultLinkModel({ type: this.getLinkType() });\\n\\t\\t}\\n\\t}\\n\\n\\tcanLinkToPort(port: PortModel): boolean {\\n\\t\\tif (port instanceof DefaultPortModel) {\\n\\t\\t\\treturn this.in !== port.in;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n}\\n","properties":[{"name":"id","type":"string","optional":true,"description":"","line":6},{"name":"isInput","type":"boolean","optional":true,"description":"","line":7},{"name":"label","type":"string","optional":true,"description":"","line":10},{"name":"linkType","type":"string","optional":true,"description":"","line":11},{"name":"maximumLinks","type":"number","optional":true,"description":"","line":12},{"name":"name","type":"string","optional":true,"description":"","line":8},{"name":"type","type":"string","optional":true,"description":"","line":9}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"Dimensions","id":"interface-Dimensions-9c5d7ee274bf21f5ed6b99fb17eaabbd","file":"projects/ngx-diagrams/src/lib/interfaces/dimensions.interface.ts","type":"interface","sourceCode":"export interface Dimensions {\\n\\twidth: number;\\n\\theight: number;\\n}\\n","properties":[{"name":"height","type":"number","optional":false,"description":"","line":3},{"name":"width","type":"number","optional":false,"description":"","line":2}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"SelectionModel","id":"interface-SelectionModel-30bf77f56d6eac3438f7a14176ba5f7b","file":"projects/ngx-diagrams/src/lib/models/move-selection.model.ts","type":"interface","sourceCode":"import { BaseModel } from \'./base.model\';\\nimport { BaseEntity } from \'../base.entity\';\\nimport { PortModel } from \'./port.model\';\\n\\nexport interface SelectionModel {\\n\\tmodel: BaseModel<BaseEntity>;\\n\\tinitialX: number;\\n\\tinitialY: number;\\n\\tmagnet?: PortModel;\\n}\\n","properties":[{"name":"initialX","type":"number","optional":false,"description":"","line":7},{"name":"initialY","type":"number","optional":false,"description":"","line":8},{"name":"magnet","type":"PortModel","optional":true,"description":"","line":9},{"name":"model","type":"BaseModel<BaseEntity>","optional":false,"description":"","line":6}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"SelectOptions","id":"interface-SelectOptions-c139a93222654aeafa8d6e4abb29daaf","file":"projects/ngx-diagrams/src/lib/interfaces/select-options.interface.ts","type":"interface","sourceCode":"export interface SelectOptions<E> {\\n\\t// asObject?: boolean;\\n\\tfilter?: ((entity: E) => boolean) | undefined;\\n\\t// limitTo?: number;\\n}\\n","properties":[{"name":"filter","type":" | undefined","optional":true,"description":"","line":3}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"SerializedBaseModel","id":"interface-SerializedBaseModel-69ec61077f665e9e4da534f4c46ef467","file":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","sourceCode":"import { Coords } from \'./\';\\n\\nexport interface SerializedBaseModel {\\n\\tlocked: boolean;\\n\\tid: string;\\n}\\n\\nexport interface SerializedDiagramModel extends SerializedBaseModel {\\n\\tnodes: SerializedNodeModel[];\\n\\tlinks: SerializedLinkModel[];\\n}\\n\\nexport interface SerializedNodeModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tnodeType: string;\\n\\textras: {\\n\\t\\t[s: string]: any;\\n\\t};\\n\\twidth: number;\\n\\theight: number;\\n\\ttype: string;\\n\\tid: string;\\n\\tlocked: boolean;\\n\\tports: SerializedPortModel[];\\n}\\n\\nexport interface SerializedLinkModel extends SerializedBaseModel {\\n\\tname?: string;\\n\\tsourcePort: string;\\n\\ttargetPort: string;\\n\\textras: any;\\n\\tpoints: SerializedPointModel[];\\n\\tlabel?: SerializedLabelModel;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedPortModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tname: string;\\n\\tlinkType: string;\\n\\tmaximumLinks: number;\\n\\ttype: string;\\n\\tmagnetic: boolean;\\n\\theight: number;\\n\\twidth: number;\\n\\tcanCreateLinks: boolean;\\n}\\n\\nexport interface SerializedPointModel extends SerializedBaseModel {\\n\\tcoords: Coords;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedLabelModel extends SerializedBaseModel {\\n\\ttype: string;\\n\\trotation: number;\\n\\tcoords: Coords;\\n}\\n","properties":[{"name":"id","type":"string","optional":false,"description":"","line":5},{"name":"locked","type":"boolean","optional":false,"description":"","line":4}],"indexSignatures":[],"kind":150,"methods":[]},{"name":"SerializedDiagramModel","id":"interface-SerializedDiagramModel-69ec61077f665e9e4da534f4c46ef467","file":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","sourceCode":"import { Coords } from \'./\';\\n\\nexport interface SerializedBaseModel {\\n\\tlocked: boolean;\\n\\tid: string;\\n}\\n\\nexport interface SerializedDiagramModel extends SerializedBaseModel {\\n\\tnodes: SerializedNodeModel[];\\n\\tlinks: SerializedLinkModel[];\\n}\\n\\nexport interface SerializedNodeModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tnodeType: string;\\n\\textras: {\\n\\t\\t[s: string]: any;\\n\\t};\\n\\twidth: number;\\n\\theight: number;\\n\\ttype: string;\\n\\tid: string;\\n\\tlocked: boolean;\\n\\tports: SerializedPortModel[];\\n}\\n\\nexport interface SerializedLinkModel extends SerializedBaseModel {\\n\\tname?: string;\\n\\tsourcePort: string;\\n\\ttargetPort: string;\\n\\textras: any;\\n\\tpoints: SerializedPointModel[];\\n\\tlabel?: SerializedLabelModel;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedPortModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tname: string;\\n\\tlinkType: string;\\n\\tmaximumLinks: number;\\n\\ttype: string;\\n\\tmagnetic: boolean;\\n\\theight: number;\\n\\twidth: number;\\n\\tcanCreateLinks: boolean;\\n}\\n\\nexport interface SerializedPointModel extends SerializedBaseModel {\\n\\tcoords: Coords;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedLabelModel extends SerializedBaseModel {\\n\\ttype: string;\\n\\trotation: number;\\n\\tcoords: Coords;\\n}\\n","properties":[{"name":"links","type":"SerializedLinkModel[]","optional":false,"description":"","line":10},{"name":"nodes","type":"SerializedNodeModel[]","optional":false,"description":"","line":9}],"indexSignatures":[],"kind":150,"methods":[],"extends":"SerializedBaseModel"},{"name":"SerializedLabelModel","id":"interface-SerializedLabelModel-69ec61077f665e9e4da534f4c46ef467","file":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","sourceCode":"import { Coords } from \'./\';\\n\\nexport interface SerializedBaseModel {\\n\\tlocked: boolean;\\n\\tid: string;\\n}\\n\\nexport interface SerializedDiagramModel extends SerializedBaseModel {\\n\\tnodes: SerializedNodeModel[];\\n\\tlinks: SerializedLinkModel[];\\n}\\n\\nexport interface SerializedNodeModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tnodeType: string;\\n\\textras: {\\n\\t\\t[s: string]: any;\\n\\t};\\n\\twidth: number;\\n\\theight: number;\\n\\ttype: string;\\n\\tid: string;\\n\\tlocked: boolean;\\n\\tports: SerializedPortModel[];\\n}\\n\\nexport interface SerializedLinkModel extends SerializedBaseModel {\\n\\tname?: string;\\n\\tsourcePort: string;\\n\\ttargetPort: string;\\n\\textras: any;\\n\\tpoints: SerializedPointModel[];\\n\\tlabel?: SerializedLabelModel;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedPortModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tname: string;\\n\\tlinkType: string;\\n\\tmaximumLinks: number;\\n\\ttype: string;\\n\\tmagnetic: boolean;\\n\\theight: number;\\n\\twidth: number;\\n\\tcanCreateLinks: boolean;\\n}\\n\\nexport interface SerializedPointModel extends SerializedBaseModel {\\n\\tcoords: Coords;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedLabelModel extends SerializedBaseModel {\\n\\ttype: string;\\n\\trotation: number;\\n\\tcoords: Coords;\\n}\\n","properties":[{"name":"coords","type":"Coords","optional":false,"description":"","line":59},{"name":"rotation","type":"number","optional":false,"description":"","line":58},{"name":"type","type":"string","optional":false,"description":"","line":57}],"indexSignatures":[],"kind":150,"methods":[],"extends":"SerializedBaseModel"},{"name":"SerializedLinkModel","id":"interface-SerializedLinkModel-69ec61077f665e9e4da534f4c46ef467","file":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","sourceCode":"import { Coords } from \'./\';\\n\\nexport interface SerializedBaseModel {\\n\\tlocked: boolean;\\n\\tid: string;\\n}\\n\\nexport interface SerializedDiagramModel extends SerializedBaseModel {\\n\\tnodes: SerializedNodeModel[];\\n\\tlinks: SerializedLinkModel[];\\n}\\n\\nexport interface SerializedNodeModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tnodeType: string;\\n\\textras: {\\n\\t\\t[s: string]: any;\\n\\t};\\n\\twidth: number;\\n\\theight: number;\\n\\ttype: string;\\n\\tid: string;\\n\\tlocked: boolean;\\n\\tports: SerializedPortModel[];\\n}\\n\\nexport interface SerializedLinkModel extends SerializedBaseModel {\\n\\tname?: string;\\n\\tsourcePort: string;\\n\\ttargetPort: string;\\n\\textras: any;\\n\\tpoints: SerializedPointModel[];\\n\\tlabel?: SerializedLabelModel;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedPortModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tname: string;\\n\\tlinkType: string;\\n\\tmaximumLinks: number;\\n\\ttype: string;\\n\\tmagnetic: boolean;\\n\\theight: number;\\n\\twidth: number;\\n\\tcanCreateLinks: boolean;\\n}\\n\\nexport interface SerializedPointModel extends SerializedBaseModel {\\n\\tcoords: Coords;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedLabelModel extends SerializedBaseModel {\\n\\ttype: string;\\n\\trotation: number;\\n\\tcoords: Coords;\\n}\\n","properties":[{"name":"extras","type":"any","optional":false,"description":"","line":32},{"name":"label","type":"SerializedLabelModel","optional":true,"description":"","line":34},{"name":"name","type":"string","optional":true,"description":"","line":29},{"name":"points","type":"SerializedPointModel[]","optional":false,"description":"","line":33},{"name":"sourcePort","type":"string","optional":false,"description":"","line":30},{"name":"targetPort","type":"string","optional":false,"description":"","line":31},{"name":"type","type":"string","optional":false,"description":"","line":35}],"indexSignatures":[],"kind":150,"methods":[],"extends":"SerializedBaseModel"},{"name":"SerializedNodeModel","id":"interface-SerializedNodeModel-69ec61077f665e9e4da534f4c46ef467","file":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","sourceCode":"import { Coords } from \'./\';\\n\\nexport interface SerializedBaseModel {\\n\\tlocked: boolean;\\n\\tid: string;\\n}\\n\\nexport interface SerializedDiagramModel extends SerializedBaseModel {\\n\\tnodes: SerializedNodeModel[];\\n\\tlinks: SerializedLinkModel[];\\n}\\n\\nexport interface SerializedNodeModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tnodeType: string;\\n\\textras: {\\n\\t\\t[s: string]: any;\\n\\t};\\n\\twidth: number;\\n\\theight: number;\\n\\ttype: string;\\n\\tid: string;\\n\\tlocked: boolean;\\n\\tports: SerializedPortModel[];\\n}\\n\\nexport interface SerializedLinkModel extends SerializedBaseModel {\\n\\tname?: string;\\n\\tsourcePort: string;\\n\\ttargetPort: string;\\n\\textras: any;\\n\\tpoints: SerializedPointModel[];\\n\\tlabel?: SerializedLabelModel;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedPortModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tname: string;\\n\\tlinkType: string;\\n\\tmaximumLinks: number;\\n\\ttype: string;\\n\\tmagnetic: boolean;\\n\\theight: number;\\n\\twidth: number;\\n\\tcanCreateLinks: boolean;\\n}\\n\\nexport interface SerializedPointModel extends SerializedBaseModel {\\n\\tcoords: Coords;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedLabelModel extends SerializedBaseModel {\\n\\ttype: string;\\n\\trotation: number;\\n\\tcoords: Coords;\\n}\\n","properties":[{"name":"extras","type":"literal type","optional":false,"description":"","line":17},{"name":"height","type":"number","optional":false,"description":"","line":21},{"name":"id","type":"string","optional":false,"description":"","line":23},{"name":"locked","type":"boolean","optional":false,"description":"","line":24},{"name":"nodeType","type":"string","optional":false,"description":"","line":16},{"name":"ports","type":"SerializedPortModel[]","optional":false,"description":"","line":25},{"name":"type","type":"string","optional":false,"description":"","line":22},{"name":"width","type":"number","optional":false,"description":"","line":20},{"name":"x","type":"number","optional":false,"description":"","line":14},{"name":"y","type":"number","optional":false,"description":"","line":15}],"indexSignatures":[],"kind":150,"methods":[],"extends":"SerializedBaseModel"},{"name":"SerializedPointModel","id":"interface-SerializedPointModel-69ec61077f665e9e4da534f4c46ef467","file":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","sourceCode":"import { Coords } from \'./\';\\n\\nexport interface SerializedBaseModel {\\n\\tlocked: boolean;\\n\\tid: string;\\n}\\n\\nexport interface SerializedDiagramModel extends SerializedBaseModel {\\n\\tnodes: SerializedNodeModel[];\\n\\tlinks: SerializedLinkModel[];\\n}\\n\\nexport interface SerializedNodeModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tnodeType: string;\\n\\textras: {\\n\\t\\t[s: string]: any;\\n\\t};\\n\\twidth: number;\\n\\theight: number;\\n\\ttype: string;\\n\\tid: string;\\n\\tlocked: boolean;\\n\\tports: SerializedPortModel[];\\n}\\n\\nexport interface SerializedLinkModel extends SerializedBaseModel {\\n\\tname?: string;\\n\\tsourcePort: string;\\n\\ttargetPort: string;\\n\\textras: any;\\n\\tpoints: SerializedPointModel[];\\n\\tlabel?: SerializedLabelModel;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedPortModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tname: string;\\n\\tlinkType: string;\\n\\tmaximumLinks: number;\\n\\ttype: string;\\n\\tmagnetic: boolean;\\n\\theight: number;\\n\\twidth: number;\\n\\tcanCreateLinks: boolean;\\n}\\n\\nexport interface SerializedPointModel extends SerializedBaseModel {\\n\\tcoords: Coords;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedLabelModel extends SerializedBaseModel {\\n\\ttype: string;\\n\\trotation: number;\\n\\tcoords: Coords;\\n}\\n","properties":[{"name":"coords","type":"Coords","optional":false,"description":"","line":52},{"name":"type","type":"string","optional":false,"description":"","line":53}],"indexSignatures":[],"kind":150,"methods":[],"extends":"SerializedBaseModel"},{"name":"SerializedPortModel","id":"interface-SerializedPortModel-69ec61077f665e9e4da534f4c46ef467","file":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","sourceCode":"import { Coords } from \'./\';\\n\\nexport interface SerializedBaseModel {\\n\\tlocked: boolean;\\n\\tid: string;\\n}\\n\\nexport interface SerializedDiagramModel extends SerializedBaseModel {\\n\\tnodes: SerializedNodeModel[];\\n\\tlinks: SerializedLinkModel[];\\n}\\n\\nexport interface SerializedNodeModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tnodeType: string;\\n\\textras: {\\n\\t\\t[s: string]: any;\\n\\t};\\n\\twidth: number;\\n\\theight: number;\\n\\ttype: string;\\n\\tid: string;\\n\\tlocked: boolean;\\n\\tports: SerializedPortModel[];\\n}\\n\\nexport interface SerializedLinkModel extends SerializedBaseModel {\\n\\tname?: string;\\n\\tsourcePort: string;\\n\\ttargetPort: string;\\n\\textras: any;\\n\\tpoints: SerializedPointModel[];\\n\\tlabel?: SerializedLabelModel;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedPortModel extends SerializedBaseModel {\\n\\tx: number;\\n\\ty: number;\\n\\tname: string;\\n\\tlinkType: string;\\n\\tmaximumLinks: number;\\n\\ttype: string;\\n\\tmagnetic: boolean;\\n\\theight: number;\\n\\twidth: number;\\n\\tcanCreateLinks: boolean;\\n}\\n\\nexport interface SerializedPointModel extends SerializedBaseModel {\\n\\tcoords: Coords;\\n\\ttype: string;\\n}\\n\\nexport interface SerializedLabelModel extends SerializedBaseModel {\\n\\ttype: string;\\n\\trotation: number;\\n\\tcoords: Coords;\\n}\\n","properties":[{"name":"canCreateLinks","type":"boolean","optional":false,"description":"","line":48},{"name":"height","type":"number","optional":false,"description":"","line":46},{"name":"linkType","type":"string","optional":false,"description":"","line":42},{"name":"magnetic","type":"boolean","optional":false,"description":"","line":45},{"name":"maximumLinks","type":"number","optional":false,"description":"","line":43},{"name":"name","type":"string","optional":false,"description":"","line":41},{"name":"type","type":"string","optional":false,"description":"","line":44},{"name":"width","type":"number","optional":false,"description":"","line":47},{"name":"x","type":"number","optional":false,"description":"","line":39},{"name":"y","type":"number","optional":false,"description":"","line":40}],"indexSignatures":[],"kind":150,"methods":[],"extends":"SerializedBaseModel"}],"injectables":[{"name":"DagreEngine","id":"injectable-DagreEngine-3fd39313e4e137fa0889cce425edf4cd","file":"projects/ngx-diagrams/src/lib/plugins/dagre-engine.plugin.ts","properties":[{"name":"g","type":"dagre.graphlib.Graph","optional":false,"description":"","line":17}],"methods":[{"name":"redistribute","args":[{"name":"model","type":"DiagramModel"},{"name":"options","type":"DagreEngineOptions","defaultValue":"{}"}],"optional":false,"returnType":"void","typeParameters":[],"line":26,"jsdoctags":[{"name":"model","type":"DiagramModel","tagName":{"text":"param"}},{"name":"options","type":"DagreEngineOptions","defaultValue":"{}","tagName":{"text":"param"}}]}],"description":"","sourceCode":"import { Injectable } from \'@angular/core\';\\nimport { DiagramModel, PointModel } from \'../models\';\\nimport * as dagre from \'dagre\';\\nimport { GraphLabel, NodeConfig, EdgeConfig } from \'dagre\';\\n\\nexport interface DagreEngineOptions {\\n\\tgraph?: GraphLabel;\\n\\tlayout?: GraphLabel & NodeConfig & EdgeConfig;\\n\\t/**\\n\\t * Will also layout links\\n\\t */\\n\\tincludeLinks?: boolean;\\n}\\n\\n@Injectable()\\nexport class DagreEngine {\\n\\tg: dagre.graphlib.Graph;\\n\\tconstructor() {\\n\\t\\ttry {\\n\\t\\t\\tthis.g = new dagre.graphlib.Graph({ multigraph: true });\\n\\t\\t} catch (error) {\\n\\t\\t\\tconsole.warn(\\"`dagre` packages isn\'t installed, please install it before using the DagreEngine plugin\\");\\n\\t\\t}\\n\\t}\\n\\n\\tredistribute(model: DiagramModel, options: DagreEngineOptions = {}): void {\\n\\t\\tthis.g.setGraph(options.graph || {});\\n\\n\\t\\tthis.g.setDefaultEdgeLabel(() => {\\n\\t\\t\\treturn {};\\n\\t\\t});\\n\\n\\t\\tconst processedlinks: { [id: string]: boolean } = {};\\n\\n\\t\\t// set nodes\\n\\t\\tObject.values(model.getNodes()).forEach(node => {\\n\\t\\t\\tthis.g.setNode(node.id, { width: node.getWidth(), height: node.getHeight() });\\n\\t\\t});\\n\\n\\t\\tObject.values(model.getLinks()).forEach(link => {\\n\\t\\t\\t// set edges\\n\\t\\t\\tif (link.getSourcePort() && link.getTargetPort()) {\\n\\t\\t\\t\\tprocessedlinks[link.id] = true;\\n\\t\\t\\t\\tthis.g.setEdge({\\n\\t\\t\\t\\t\\tv: link.getSourcePort().getNode().id,\\n\\t\\t\\t\\t\\tw: link.getTargetPort().getNode().id,\\n\\t\\t\\t\\t\\tname: link.id,\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\t// layout the graph\\n\\t\\tdagre.layout(this.g, options.layout);\\n\\n\\t\\tthis.g.nodes().forEach(v => {\\n\\t\\t\\tconst { x, y } = this.g.node(v);\\n\\t\\t\\tmodel.getNode(v).setCoords({ x, y });\\n\\t\\t});\\n\\n\\t\\t// also include links?\\n\\t\\tif (options.includeLinks) {\\n\\t\\t\\tthis.g.edges().forEach(e => {\\n\\t\\t\\t\\tconst edge = this.g.edge(e);\\n\\t\\t\\t\\tconst link = model.getLink(e.name);\\n\\n\\t\\t\\t\\tconst points = [link.getFirstPoint()];\\n\\t\\t\\t\\tfor (let i = 1; i < edge.points.length - 2; i++) {\\n\\t\\t\\t\\t\\tpoints.push(new PointModel(link, { x: edge.points[i].x, y: edge.points[i].y }));\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tlink.setPoints(points.concat(link.getLastPoint()));\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[],"line":17},"type":"injectable"},{"name":"DiagramEngine","id":"injectable-DiagramEngine-a1f42a5042b6ba23559c10f046a6cf59","file":"projects/ngx-diagrams/src/lib/services/engine.service.ts","properties":[{"name":"_renderer","type":"Renderer2","optional":false,"description":"","line":22,"modifierKind":[112]},{"name":"canvas$","type":"BehaviorSubject<Element>","optional":false,"description":"","line":27,"modifierKind":[112]},{"name":"diagramModel","type":"DiagramModel","optional":false,"description":"","line":29},{"name":"labelFactories","type":"literal type","optional":false,"description":"","line":24,"modifierKind":[112]},{"name":"linkFactories","type":"literal type","optional":false,"description":"","line":25,"modifierKind":[112]},{"name":"nodeFactories","type":"literal type","optional":false,"description":"","line":23,"modifierKind":[112]},{"name":"portFactories","type":"literal type","optional":false,"description":"","line":26,"modifierKind":[112]}],"methods":[{"name":"autoArrange","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":269,"description":"<p>auto arrange the graph</p>\\n"},{"name":"createDiagram","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":40},{"name":"generateWidgetForLabel","args":[{"name":"label","type":"LabelModel"},{"name":"labelHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef | null","typeParameters":[],"line":73,"jsdoctags":[{"name":"label","type":"LabelModel","tagName":{"text":"param"}},{"name":"labelHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"generateWidgetForLink","args":[{"name":"link","type":"LinkModel"},{"name":"linksHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef | null","typeParameters":[],"line":157,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}},{"name":"linksHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"generateWidgetForNode","args":[{"name":"node","type":"NodeModel"},{"name":"nodesHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef | null","typeParameters":[],"line":101,"jsdoctags":[{"name":"node","type":"NodeModel","tagName":{"text":"param"}},{"name":"nodesHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"generateWidgetForPort","args":[{"name":"port","type":"PortModel"},{"name":"portsHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef | null","typeParameters":[],"line":129,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}},{"name":"portsHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getDiagramModel","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":254},{"name":"getFactoryForLabel","args":[{"name":"label","type":"LabelModel"}],"optional":false,"returnType":"AbstractLabelFactory | null","typeParameters":[],"line":69,"jsdoctags":[{"name":"label","type":"LabelModel","tagName":{"text":"param"}}]},{"name":"getFactoryForLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"AbstractLinkFactory | null","typeParameters":[],"line":153,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}}]},{"name":"getFactoryForNode","args":[{"name":"node","type":"NodeModel"}],"optional":false,"returnType":"AbstractNodeFactory | null","typeParameters":[],"line":97,"jsdoctags":[{"name":"node","type":"NodeModel","tagName":{"text":"param"}}]},{"name":"getFactoryForPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"AbstractPortFactory | null","typeParameters":[],"line":125,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"getLabelFactories","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":58},{"name":"getLabelFactory","args":[{"name":"type","type":"string"}],"optional":false,"returnType":"AbstractLabelFactory","typeParameters":[],"line":62,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}]},{"name":"getLinkFactories","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":138},{"name":"getLinkFactory","args":[{"name":"type","type":"string"}],"optional":false,"returnType":"AbstractLinkFactory","typeParameters":[],"line":146,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}]},{"name":"getNodeDimensions","args":[{"name":"node","type":"NodeModel"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":220,"description":"<p>Determine the width and height of the node passed in.\\nIt currently assumes nodes have a rectangular shape, can be overriden for customised shapes.</p>\\n","jsdoctags":[{"name":"node","type":"NodeModel","tagName":{"text":"param"}}]},{"name":"getNodeElement","args":[{"name":"node","type":"NodeModel"}],"optional":false,"returnType":"HTMLElement","typeParameters":[],"line":166,"jsdoctags":[{"name":"node","type":"NodeModel","tagName":{"text":"param"}}]},{"name":"getNodeFactories","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":86},{"name":"getNodeFactory","args":[{"name":"type","type":"string"}],"optional":false,"returnType":"AbstractNodeFactory","typeParameters":[],"line":90,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}]},{"name":"getNodePortElement","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"HTMLElement","typeParameters":[],"line":174,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"getPortCenter","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"{ x: number; y: number; }","typeParameters":[],"line":182,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"getPortCoords","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":196,"description":"<p>Calculate rectangular coordinates of the port passed in.</p>\\n","jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"getPortFactories","args":[],"optional":false,"returnType":"{ [s: string]: any; }","typeParameters":[],"line":114},{"name":"getPortFactory","args":[{"name":"type","type":"string"}],"optional":false,"returnType":"AbstractPortFactory","typeParameters":[],"line":118,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}]},{"name":"getRelativeMousePoint","args":[{"name":"event","type":"MouseEvent"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":241,"jsdoctags":[{"name":"event","type":"MouseEvent","tagName":{"text":"param"}}]},{"name":"getRelativePoint","args":[{"name":"x","type":"number"},{"name":"y","type":"number"}],"optional":false,"returnType":"{ x: number; y: number; }","typeParameters":[],"line":249,"jsdoctags":[{"name":"x","type":"number","tagName":{"text":"param"}},{"name":"y","type":"number","tagName":{"text":"param"}}]},{"name":"isModelLocked","args":[{"name":"model","type":"BaseEntity"}],"optional":false,"returnType":"any","typeParameters":[],"line":258,"jsdoctags":[{"name":"model","type":"BaseEntity","tagName":{"text":"param"}}]},{"name":"registerDefaultFactories","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":45},{"name":"registerLabelFactory","args":[{"name":"labelFactory","type":"AbstractLabelFactory"}],"optional":false,"returnType":"void","typeParameters":[],"line":54,"jsdoctags":[{"name":"labelFactory","type":"AbstractLabelFactory","tagName":{"text":"param"}}]},{"name":"registerLinkFactory","args":[{"name":"factory","type":"AbstractLinkFactory"}],"optional":false,"returnType":"void","typeParameters":[],"line":142,"jsdoctags":[{"name":"factory","type":"AbstractLinkFactory","tagName":{"text":"param"}}]},{"name":"registerNodeFactory","args":[{"name":"nodeFactory","type":"AbstractNodeFactory"}],"optional":false,"returnType":"void","typeParameters":[],"line":82,"jsdoctags":[{"name":"nodeFactory","type":"AbstractNodeFactory","tagName":{"text":"param"}}]},{"name":"registerPortFactory","args":[{"name":"factory","type":"AbstractPortFactory"}],"optional":false,"returnType":"void","typeParameters":[],"line":110,"jsdoctags":[{"name":"factory","type":"AbstractPortFactory","tagName":{"text":"param"}}]},{"name":"setCanvas","args":[{"name":"canvas","type":"Element"}],"optional":false,"returnType":"void","typeParameters":[],"line":237,"jsdoctags":[{"name":"canvas","type":"Element","tagName":{"text":"param"}}]},{"name":"zoomToFit","args":[{"name":"additionalZoomFactor","type":"number","defaultValue":"0.005"}],"optional":false,"returnType":"void","typeParameters":[],"line":275,"description":"<p>fit the canvas zoom levels to the elements contained.</p>\\n","jsdoctags":[{"name":{"pos":9088,"end":9108,"flags":0,"escapedText":"additionalZoomFactor"},"type":"number","defaultValue":"0.005","tagName":{"pos":9082,"end":9087,"flags":0,"escapedText":"param"},"comment":"<p>allow for further zooming out to make sure edges doesn&#39;t cut</p>\\n"}]}],"description":"","sourceCode":"import { Injectable, ComponentFactoryResolver, ViewContainerRef, ComponentRef, Renderer2, RendererFactory2 } from \'@angular/core\';\\nimport { AbstractNodeFactory } from \'../factories/node.factory\';\\nimport { DiagramModel } from \'../models/diagram.model\';\\nimport { DefaultNodeFactory } from \'../defaults/factories/default-node.factory\';\\nimport { NodeModel } from \'../models/node.model\';\\nimport { AbstractLinkFactory } from \'../factories/link.factory\';\\nimport { AbstractPortFactory } from \'../factories/port.factory\';\\nimport { DefaultPortFactory } from \'../defaults/factories/default-port.factory\';\\nimport { LinkModel } from \'../models/link.model\';\\nimport { PortModel } from \'../models/port.model\';\\nimport { BehaviorSubject } from \'rxjs\';\\nimport { take, delay, filter } from \'rxjs/operators\';\\nimport { DefaultLinkFactory } from \'../defaults/factories/default-link.factory\';\\nimport { BaseEntity } from \'../base.entity\';\\nimport { NgxDiagramsModule } from \'../ngx-diagrams.module\';\\nimport { AbstractLabelFactory } from \'../factories/label.factory\';\\nimport { LabelModel } from \'../models/label.model\';\\nimport { DefaultLabelFactory } from \'../defaults/factories/default-label.factory\';\\n\\n@Injectable({ providedIn: NgxDiagramsModule })\\nexport class DiagramEngine {\\n\\tprivate _renderer: Renderer2;\\n\\tprivate nodeFactories: { [s: string]: AbstractNodeFactory };\\n\\tprivate labelFactories: { [s: string]: AbstractLabelFactory };\\n\\tprivate linkFactories: { [s: string]: AbstractLinkFactory };\\n\\tprivate portFactories: { [s: string]: AbstractPortFactory };\\n\\tprivate canvas$: BehaviorSubject<Element>;\\n\\n\\tdiagramModel: DiagramModel;\\n\\n\\tconstructor(private resolver: ComponentFactoryResolver, private rendererFactory: RendererFactory2) {\\n\\t\\tthis._renderer = this.rendererFactory.createRenderer(null, null);\\n\\t\\tthis.nodeFactories = {};\\n\\t\\tthis.linkFactories = {};\\n\\t\\tthis.portFactories = {};\\n\\t\\tthis.labelFactories = {};\\n\\t\\tthis.canvas$ = new BehaviorSubject<Element>(null);\\n\\t}\\n\\n\\tcreateDiagram() {\\n\\t\\tthis.diagramModel = new DiagramModel(this);\\n\\t\\treturn this.diagramModel;\\n\\t}\\n\\n\\tregisterDefaultFactories() {\\n\\t\\tthis.registerNodeFactory(new DefaultNodeFactory(this.resolver, this._renderer));\\n\\t\\tthis.registerPortFactory(new DefaultPortFactory(this.resolver, this._renderer));\\n\\t\\tthis.registerLinkFactory(new DefaultLinkFactory(this.resolver, this._renderer));\\n\\t\\tthis.registerLabelFactory(new DefaultLabelFactory(this.resolver, this._renderer));\\n\\t}\\n\\n\\t//#region Factories\\n\\t// LABELS\\n\\tregisterLabelFactory(labelFactory: AbstractLabelFactory) {\\n\\t\\tthis.labelFactories[labelFactory.type] = labelFactory;\\n\\t}\\n\\n\\tgetLabelFactories(): { [s: string]: AbstractLabelFactory } {\\n\\t\\treturn this.labelFactories;\\n\\t}\\n\\n\\tgetLabelFactory(type: string): AbstractLabelFactory {\\n\\t\\tif (this.labelFactories[type]) {\\n\\t\\t\\treturn this.labelFactories[type];\\n\\t\\t}\\n\\t\\tthrow new Error(`cannot find factory for node of type: [${type}]`);\\n\\t}\\n\\n\\tgetFactoryForLabel(label: LabelModel): AbstractLabelFactory | null {\\n\\t\\treturn this.getLabelFactory(label.getType());\\n\\t}\\n\\n\\tgenerateWidgetForLabel(label: LabelModel, labelHost: ViewContainerRef): ComponentRef<LabelModel> | null {\\n\\t\\tconst labelFactory = this.getFactoryForLabel(label);\\n\\t\\tif (!labelFactory) {\\n\\t\\t\\tthrow new Error(`Cannot find widget factory for node: ${label.getType()}`);\\n\\t\\t}\\n\\t\\treturn labelFactory.generateWidget(label, labelHost);\\n\\t}\\n\\n\\t// NODES\\n\\tregisterNodeFactory(nodeFactory: AbstractNodeFactory) {\\n\\t\\tthis.nodeFactories[nodeFactory.type] = nodeFactory;\\n\\t}\\n\\n\\tgetNodeFactories(): { [s: string]: AbstractNodeFactory } {\\n\\t\\treturn this.nodeFactories;\\n\\t}\\n\\n\\tgetNodeFactory(type: string): AbstractNodeFactory {\\n\\t\\tif (this.nodeFactories[type]) {\\n\\t\\t\\treturn this.nodeFactories[type];\\n\\t\\t}\\n\\t\\tthrow new Error(`cannot find factory for node of type: [${type}]`);\\n\\t}\\n\\n\\tgetFactoryForNode(node: NodeModel): AbstractNodeFactory | null {\\n\\t\\treturn this.getNodeFactory(node.getType());\\n\\t}\\n\\n\\tgenerateWidgetForNode(node: NodeModel, nodesHost: ViewContainerRef): ComponentRef<NodeModel> | null {\\n\\t\\tconst nodeFactory = this.getFactoryForNode(node);\\n\\t\\tif (!nodeFactory) {\\n\\t\\t\\tthrow new Error(`Cannot find widget factory for node: ${node.getType()}`);\\n\\t\\t}\\n\\t\\treturn nodeFactory.generateWidget(this, node, nodesHost);\\n\\t}\\n\\n\\t// PORTS\\n\\tregisterPortFactory(factory: AbstractPortFactory) {\\n\\t\\tthis.portFactories[factory.type] = factory;\\n\\t}\\n\\n\\tgetPortFactories() {\\n\\t\\treturn this.portFactories;\\n\\t}\\n\\n\\tgetPortFactory(type: string): AbstractPortFactory {\\n\\t\\tif (this.portFactories[type]) {\\n\\t\\t\\treturn this.portFactories[type];\\n\\t\\t}\\n\\t\\tthrow new Error(`cannot find factory for port of type: [${type}]`);\\n\\t}\\n\\n\\tgetFactoryForPort(port: PortModel): AbstractPortFactory | null {\\n\\t\\treturn this.getPortFactory(port.getType());\\n\\t}\\n\\n\\tgenerateWidgetForPort(port: PortModel, portsHost: ViewContainerRef): ComponentRef<PortModel> | null {\\n\\t\\tconst portFactory = this.getFactoryForPort(port);\\n\\t\\tif (!portFactory) {\\n\\t\\t\\tthrow new Error(`Cannot find widget factory for port: ${port.getType()}`);\\n\\t\\t}\\n\\t\\treturn portFactory.generateWidget(port, portsHost);\\n\\t}\\n\\n\\t// LINKS\\n\\tgetLinkFactories(): { [s: string]: AbstractLinkFactory } {\\n\\t\\treturn this.linkFactories;\\n\\t}\\n\\n\\tregisterLinkFactory(factory: AbstractLinkFactory) {\\n\\t\\tthis.linkFactories[factory.type] = factory;\\n\\t}\\n\\n\\tgetLinkFactory(type: string): AbstractLinkFactory {\\n\\t\\tif (this.linkFactories[type]) {\\n\\t\\t\\treturn this.linkFactories[type];\\n\\t\\t}\\n\\t\\tthrow new Error(`cannot find factory for link of type: [${type}]`);\\n\\t}\\n\\n\\tgetFactoryForLink(link: LinkModel): AbstractLinkFactory | null {\\n\\t\\treturn this.getLinkFactory(link.getType());\\n\\t}\\n\\n\\tgenerateWidgetForLink(link: LinkModel, linksHost: ViewContainerRef): ComponentRef<LinkModel> | null {\\n\\t\\tconst linkFactory = this.getFactoryForLink(link);\\n\\t\\tif (!linkFactory) {\\n\\t\\t\\tthrow new Error(`Cannot find link factory for link: ${link.getType()}`);\\n\\t\\t}\\n\\t\\treturn linkFactory.generateWidget(this, link, linksHost);\\n\\t}\\n\\t//#endregion\\n\\n\\tgetNodeElement(node: NodeModel): HTMLElement {\\n\\t\\tconst selector = this.canvas$.getValue().querySelector(`[data-nodeid=\\"${node.id}\\"]`);\\n\\t\\tif (selector === null) {\\n\\t\\t\\tthrow new Error(\'Cannot find Node element with node id: [\' + node.id + \']\');\\n\\t\\t}\\n\\t\\treturn selector as HTMLElement;\\n\\t}\\n\\n\\tgetNodePortElement(port: PortModel): HTMLElement {\\n\\t\\tconst selector = this.canvas$.getValue().querySelector(`[data-nodeid=\\"${port.getParent().id}\\"] [data-portid=\\"${port.id}\\"]`);\\n\\t\\tif (selector === null) {\\n\\t\\t\\tthrow new Error(\'Cannot find Node Port element with node id: [\' + port.getParent().id + \'] and port id: [\' + port.id + \']\');\\n\\t\\t}\\n\\t\\treturn selector as HTMLElement;\\n\\t}\\n\\n\\tgetPortCenter(port: PortModel) {\\n\\t\\tconst sourceElement = this.getNodePortElement(port);\\n\\t\\tconst sourceRect = sourceElement.getBoundingClientRect();\\n\\t\\tconst rel = this.getRelativePoint(sourceRect.left, sourceRect.top);\\n\\n\\t\\treturn {\\n\\t\\t\\tx: sourceElement.offsetWidth / 2 + (rel.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\\n\\t\\t\\ty: sourceElement.offsetHeight / 2 + (rel.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0),\\n\\t\\t};\\n\\t}\\n\\n\\t/**\\n\\t * Calculate rectangular coordinates of the port passed in.\\n\\t */\\n\\tgetPortCoords(\\n\\t\\tport: PortModel\\n\\t): {\\n\\t\\tx: number;\\n\\t\\ty: number;\\n\\t\\twidth: number;\\n\\t\\theight: number;\\n\\t} {\\n\\t\\tconst sourceElement = this.getNodePortElement(port);\\n\\t\\tconst sourceRect = sourceElement.getBoundingClientRect() as DOMRect;\\n\\t\\tconst canvasRect = this.canvas$.getValue().getBoundingClientRect() as ClientRect;\\n\\n\\t\\treturn {\\n\\t\\t\\tx: (sourceRect.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0) - canvasRect.left,\\n\\t\\t\\ty: (sourceRect.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0) - canvasRect.top,\\n\\t\\t\\twidth: sourceRect.width,\\n\\t\\t\\theight: sourceRect.height,\\n\\t\\t};\\n\\t}\\n\\n\\t/**\\n\\t * Determine the width and height of the node passed in.\\n\\t * It currently assumes nodes have a rectangular shape, can be overriden for customised shapes.\\n\\t */\\n\\tgetNodeDimensions(node: NodeModel): { width: number; height: number } {\\n\\t\\tif (!this.canvas$.getValue()) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\twidth: 0,\\n\\t\\t\\t\\theight: 0,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\tconst nodeElement = this.getNodeElement(node);\\n\\t\\tconst nodeRect = nodeElement.getBoundingClientRect();\\n\\n\\t\\treturn {\\n\\t\\t\\twidth: nodeRect.width,\\n\\t\\t\\theight: nodeRect.height,\\n\\t\\t};\\n\\t}\\n\\n\\tsetCanvas(canvas: Element) {\\n\\t\\tthis.canvas$.next(canvas);\\n\\t}\\n\\n\\tgetRelativeMousePoint(event: MouseEvent): { x: number; y: number } {\\n\\t\\tconst point = this.getRelativePoint(event.clientX, event.clientY);\\n\\t\\treturn {\\n\\t\\t\\tx: (point.x - this.diagramModel.getOffsetX()) / (this.diagramModel.getZoomLevel() / 100.0),\\n\\t\\t\\ty: (point.y - this.diagramModel.getOffsetY()) / (this.diagramModel.getZoomLevel() / 100.0),\\n\\t\\t};\\n\\t}\\n\\n\\tgetRelativePoint(x: number, y: number) {\\n\\t\\tconst canvasRect = this.canvas$.getValue().getBoundingClientRect();\\n\\t\\treturn { x: x - canvasRect.left, y: y - canvasRect.top };\\n\\t}\\n\\n\\tgetDiagramModel() {\\n\\t\\treturn this.diagramModel;\\n\\t}\\n\\n\\tisModelLocked(model: BaseEntity) {\\n\\t\\tif (this.diagramModel.getLocked()) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\treturn model.getLocked();\\n\\t}\\n\\n\\t/**\\n\\t * auto arrange the graph\\n\\t */\\n\\tautoArrange() {}\\n\\n\\t/**\\n\\t * fit the canvas zoom levels to the elements contained.\\n\\t * @param additionalZoomFactor allow for further zooming out to make sure edges doesn\'t cut\\n\\t */\\n\\tzoomToFit(additionalZoomFactor: number = 0.005) {\\n\\t\\tthis.canvas$.pipe(filter(Boolean), take(1), delay(0)).subscribe((canvas: HTMLElement) => {\\n\\t\\t\\tconst xFactor = canvas.clientWidth / canvas.scrollWidth;\\n\\t\\t\\tconst yFactor = canvas.clientHeight / canvas.scrollHeight;\\n\\t\\t\\tconst zoomFactor = xFactor < yFactor ? xFactor : yFactor;\\n\\n\\t\\t\\tlet newZoomLvl = this.diagramModel.getZoomLevel() * (zoomFactor - additionalZoomFactor);\\n\\t\\t\\tconst maxZoomOut = this.diagramModel.getMaxZoomOut();\\n\\n\\t\\t\\tif (maxZoomOut && newZoomLvl < maxZoomOut) {\\n\\t\\t\\t\\tnewZoomLvl = maxZoomOut;\\n\\t\\t\\t}\\n\\n\\t\\t\\tthis.diagramModel.setZoomLevel(newZoomLvl);\\n\\n\\t\\t\\t// TODO: either block the canvas movement on 0,0 or detect the top left furthest element and set the offest to its edges\\n\\t\\t\\tthis.diagramModel.setOffset(0, 0);\\n\\t\\t});\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"resolver","type":"ComponentFactoryResolver"},{"name":"rendererFactory","type":"RendererFactory2"}],"line":29,"jsdoctags":[{"name":"resolver","type":"ComponentFactoryResolver","tagName":{"text":"param"}},{"name":"rendererFactory","type":"RendererFactory2","tagName":{"text":"param"}}]},"type":"injectable"}],"classes":[{"name":"AbstractFactory","id":"class-AbstractFactory-1fbf5ba0184d756ebc3279be2923d5a2","file":"projects/ngx-diagrams/src/lib/factories/base.factory.ts","type":"class","sourceCode":"import { BaseModel } from \'../models/base.model\';\\n\\nexport abstract class AbstractFactory<T extends BaseModel> {\\n\\tprotected _type: string;\\n\\n\\tconstructor(type: string) {\\n\\t\\tthis._type = type;\\n\\t}\\n\\n\\tget type(): string {\\n\\t\\treturn this._type;\\n\\t}\\n\\n\\tabstract getNewInstance(initialConfig?: any): T;\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"type","type":"string"}],"line":4,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}]},"properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113]}],"methods":[{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}]}],"indexSignatures":[],"accessors":{"type":{"name":"type","getSignature":{"name":"type","type":"string","returnType":"string","line":10}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AbstractLabelFactory","id":"class-AbstractLabelFactory-35a14e4ad4a2181283ee66b067baf26d","file":"projects/ngx-diagrams/src/lib/factories/label.factory.ts","type":"class","sourceCode":"import { AbstractFactory } from \'./base.factory\';\\nimport { ViewContainerRef, ComponentRef } from \'@angular/core\';\\nimport { LabelModel } from \'../models/label.model\';\\n\\nexport abstract class AbstractLabelFactory<T extends LabelModel = LabelModel> extends AbstractFactory<T> {\\n\\tabstract generateWidget(label: LabelModel, labelsHost: ViewContainerRef): ComponentRef<T>;\\n}\\n","properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"label","type":"LabelModel"},{"name":"labelsHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":6,"modifierKind":[117],"jsdoctags":[{"name":"label","type":"LabelModel","tagName":{"text":"param"}},{"name":"labelsHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AbstractLinkFactory","id":"class-AbstractLinkFactory-c7042a91d6d5b89010bf70d63b1f4a90","file":"projects/ngx-diagrams/src/lib/factories/link.factory.ts","type":"class","sourceCode":"import { LinkModel } from \'../models/link.model\';\\nimport { AbstractFactory } from \'./base.factory\';\\nimport { ViewContainerRef, ComponentRef } from \'@angular/core\';\\nimport { DiagramEngine } from \'../services/engine.service\';\\n\\nexport abstract class AbstractLinkFactory<T extends LinkModel = LinkModel> extends AbstractFactory<T> {\\n\\tabstract generateWidget(diagramEngine: DiagramEngine, link: LinkModel, linksHost: ViewContainerRef): ComponentRef<T>;\\n}\\n","properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"diagramEngine","type":"DiagramEngine"},{"name":"link","type":"LinkModel"},{"name":"linksHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":7,"modifierKind":[117],"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}},{"name":"link","type":"LinkModel","tagName":{"text":"param"}},{"name":"linksHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AbstractNodeFactory","id":"class-AbstractNodeFactory-b62e4c61014ed0a4c7a44f7855fde8c7","file":"projects/ngx-diagrams/src/lib/factories/node.factory.ts","type":"class","sourceCode":"import { NodeModel } from \'../models/node.model\';\\nimport { AbstractFactory } from \'./base.factory\';\\nimport { DiagramEngine } from \'../services/engine.service\';\\nimport { ViewContainerRef, ComponentRef } from \'@angular/core\';\\n\\nexport abstract class AbstractNodeFactory<T extends NodeModel = NodeModel> extends AbstractFactory<T> {\\n\\tabstract generateWidget(diagramEngine: DiagramEngine, node: NodeModel, nodeHost: ViewContainerRef): ComponentRef<T>;\\n}\\n","properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"diagramEngine","type":"DiagramEngine"},{"name":"node","type":"NodeModel"},{"name":"nodeHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":7,"modifierKind":[117],"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}},{"name":"node","type":"NodeModel","tagName":{"text":"param"}},{"name":"nodeHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"AbstractPortFactory","id":"class-AbstractPortFactory-ee2ed66a099dd2934f776f8547802205","file":"projects/ngx-diagrams/src/lib/factories/port.factory.ts","type":"class","sourceCode":"import { PortModel } from \'../models/port.model\';\\nimport { AbstractFactory } from \'./base.factory\';\\nimport { ViewContainerRef, ComponentRef } from \'@angular/core\';\\n\\nexport abstract class AbstractPortFactory<T extends PortModel = PortModel> extends AbstractFactory<T> {\\n\\tabstract generateWidget(port: PortModel, portHost: ViewContainerRef): ComponentRef<T>;\\n}\\n","properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"port","type":"PortModel"},{"name":"portHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":6,"modifierKind":[117],"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}},{"name":"portHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BaseAction","id":"class-BaseAction-7ae567d7c478a86007f1808d9a729615","file":"projects/ngx-diagrams/src/lib/actions/base.action.ts","type":"class","sourceCode":"export class BaseAction {\\n    mouseX: number;\\n    mouseY: number;\\n    ms: number;\\n\\n    constructor(mouseX: number, mouseY: number) {\\n        this.mouseX = mouseX;\\n        this.mouseY = mouseY;\\n        this.ms = new Date().getTime();\\n    }\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"mouseX","type":"number"},{"name":"mouseY","type":"number"}],"line":4,"jsdoctags":[{"name":"mouseX","type":"number","tagName":{"text":"param"}},{"name":"mouseY","type":"number","tagName":{"text":"param"}}]},"properties":[{"name":"mouseX","type":"number","optional":false,"description":"","line":2},{"name":"mouseY","type":"number","optional":false,"description":"","line":3},{"name":"ms","type":"number","optional":false,"description":"","line":4}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BaseEntity","id":"class-BaseEntity-6560f46c30af8590cabd76d470f9a31d","file":"projects/ngx-diagrams/src/lib/base.entity.ts","type":"class","sourceCode":"import { ID, log as _log, withLog as _withLog, UID, LOG_LEVEL } from \'./utils/tool-kit.util\';\\nimport { BehaviorSubject, Observable, Subject } from \'rxjs\';\\nimport { map, takeUntil } from \'rxjs/operators\';\\nimport { BaseEvent, LockEvent } from \'./interfaces/event.interface\';\\n\\nexport type BaseEntityType = \'node\' | \'link\' | \'port\' | \'point\';\\n\\nexport class BaseEntity {\\n\\tprivate _id: ID;\\n\\t/**\\n\\t * a prefix to make logs more easier\\n\\t */\\n\\tprivate _logPrefix: string;\\n\\tprivate _destroyed: Subject<null> = new Subject();\\n\\tprivate _destroyed$: Observable<null> = this._destroyed.asObservable();\\n\\tprivate _locked: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\tprivate _locked$: Observable<boolean> = this._locked.asObservable();\\n\\n\\tconstructor(id?: ID, logPrefix = \'\') {\\n\\t\\tthis._id = id || UID();\\n\\t\\tthis._logPrefix = `${logPrefix}`;\\n\\t}\\n\\n\\tpublic get id(): ID {\\n\\t\\treturn this._id;\\n\\t}\\n\\n\\tpublic set id(id: ID) {\\n\\t\\tthis._id = id;\\n\\t}\\n\\n\\tlog(message: string, ...args: any): void {\\n\\t\\t_log(`${this._logPrefix} ${message}: `, LOG_LEVEL.LOG, ...args);\\n\\t}\\n\\n\\twithLog(message: string, ...args: any): any {\\n\\t\\treturn _withLog(`${this._logPrefix} ${message}: `, LOG_LEVEL.LOG, ...args);\\n\\t}\\n\\n\\tgetLocked(): boolean {\\n\\t\\treturn this._locked.getValue();\\n\\t}\\n\\n\\tsetLocked(locked: boolean = true) {\\n\\t\\tthis._locked.next(locked);\\n\\t}\\n\\n\\t// tslint:disable-next-line\\n\\tdoClone(lookupTable: { [s: string]: any } = {}, clone: any) {\\n\\t\\t/*noop*/\\n\\t}\\n\\n\\tclone(lookupTable: { [s: string]: any } = {}) {\\n\\t\\t// try and use an existing clone first\\n\\t\\tif (lookupTable[this.id]) {\\n\\t\\t\\treturn lookupTable[this.id];\\n\\t\\t}\\n\\t\\tconst clone = { ...this };\\n\\t\\tclone.id = UID();\\n\\t\\t// clone.clearListeners();\\n\\t\\tlookupTable[this.id] = clone;\\n\\n\\t\\tthis.doClone(lookupTable, clone);\\n\\t\\treturn clone;\\n\\t}\\n\\n\\tserialize() {\\n\\t\\treturn {\\n\\t\\t\\tid: this.id,\\n\\t\\t\\tlocked: this.getLocked(),\\n\\t\\t};\\n\\t}\\n\\n\\tpublic lockChanges(): Observable<LockEvent> {\\n\\t\\treturn this._locked$.pipe(\\n\\t\\t\\ttakeUntil(this.onEntityDestroy()),\\n\\t\\t\\tmap(locked => new LockEvent(this, locked)),\\n\\t\\t\\tthis.withLog(\'lockChanges\')\\n\\t\\t);\\n\\t}\\n\\n\\tpublic destroy() {\\n\\t\\tthis.log(\'entity destroyed\');\\n\\t\\tthis._destroyed.next();\\n\\t\\tthis._destroyed.complete();\\n\\t}\\n\\n\\tpublic onEntityDestroy(): Observable<BaseEvent<BaseEntity>> {\\n\\t\\treturn this._destroyed$.pipe(map(opts => new BaseEvent(this, opts)));\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"id","type":"ID","optional":true},{"name":"logPrefix","type":"string","defaultValue":"\'\'"}],"line":17,"jsdoctags":[{"name":"id","type":"ID","optional":true,"tagName":{"text":"param"}},{"name":"logPrefix","type":"string","defaultValue":"\'\'","tagName":{"text":"param"}}]},"properties":[{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112]},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112]},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112]},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112]},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112]},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112]}],"methods":[{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}]},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114]},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}]},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114]},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114]},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}]},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"indexSignatures":[],"accessors":{"id":{"name":"id","setSignature":{"name":"id","type":"void","args":[{"name":"id","type":""}],"returnType":"void","line":28,"jsdoctags":[{"name":"id","type":"","tagName":{"text":"param"}}]},"getSignature":{"name":"id","type":"","returnType":"ID","line":24}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BaseEvent","id":"class-BaseEvent-a1b25ab2b6c79a87bcb302a83d8d1347","file":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","sourceCode":"import { ID, UID } from \'../utils/tool-kit.util\';\\nimport { BaseEntity } from \'../base.entity\';\\n\\n// region events\\nexport class BaseEvent<T extends BaseEntity> {\\n\\tentity: T;\\n\\tentityId: ID;\\n\\tstopPropagation: () => any;\\n\\tfiring: boolean;\\n\\tid: ID;\\n\\tpropogate: boolean;\\n\\n\\tconstructor(entity: T, options?: any) {\\n\\t\\tthis.id = UID();\\n\\t\\tthis.entity = entity;\\n\\t\\tthis.entityId = entity.id;\\n\\t\\tthis.firing = true;\\n\\t\\tthis.stopPropagation = () => (this.firing = false);\\n\\t\\tthis.propogate = options ? options.propagate : null;\\n\\t}\\n}\\nexport class LockEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tlocked: boolean;\\n\\n\\tconstructor(entity: T, locked: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.locked = locked;\\n\\t}\\n}\\nexport class ParentChangeEvent<P extends BaseEntity = BaseEntity, T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tparent: P;\\n\\n\\tconstructor(entity: T, parent: P) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.parent = parent;\\n\\t}\\n}\\nexport class SelectionEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisSelected: boolean;\\n\\n\\tconstructor(entity: T, selected: boolean) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isSelected = selected;\\n\\t}\\n}\\nexport class PaintedEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisPainted: boolean;\\n\\n\\tconstructor(entity: T, painted: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isPainted = painted;\\n\\t}\\n}\\n// endregion\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"entity","type":"T"},{"name":"options","type":"any","optional":true}],"line":11,"jsdoctags":[{"name":"entity","type":"T","tagName":{"text":"param"}},{"name":"options","type":"any","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"entity","type":"T","optional":false,"description":"","line":6},{"name":"entityId","type":"ID","optional":false,"description":"","line":7},{"name":"firing","type":"boolean","optional":false,"description":"","line":9},{"name":"id","type":"ID","optional":false,"description":"","line":10},{"name":"propogate","type":"boolean","optional":false,"description":"","line":11},{"name":"stopPropagation","type":"function","optional":false,"description":"","line":8}],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"BaseModel","id":"class-BaseModel-58a2cdb8a4b7ad587e99dbb0700dbef4","file":"projects/ngx-diagrams/src/lib/models/base.model.ts","type":"class","sourceCode":"import { BaseEntity } from \'../base.entity\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { map, takeUntil } from \'rxjs/operators\';\\nimport { PaintedEvent, ParentChangeEvent, SelectionEvent } from \'../interfaces/event.interface\';\\n\\nexport class BaseModel<X extends BaseEntity = BaseEntity> extends BaseEntity {\\n\\tprivate readonly _type: string;\\n\\tprivate readonly _parent: BehaviorSubject<X> = new BehaviorSubject(null);\\n\\tprivate readonly _parent$: Observable<X> = this._parent.asObservable();\\n\\tprivate readonly _selected: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\tprivate readonly _selected$: Observable<boolean> = this._selected.asObservable();\\n\\tprivate readonly _painted: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\tprivate readonly _painted$: Observable<boolean> = this._painted.asObservable();\\n\\tprivate readonly _hovered: BehaviorSubject<boolean> = new BehaviorSubject(false);\\n\\tprivate readonly _hovered$: Observable<boolean> = this._hovered.asObservable();\\n\\n\\tconstructor(type?: string, id?: string, logPrefix = \'[Base]\') {\\n\\t\\tsuper(id, logPrefix);\\n\\t\\tthis._type = type;\\n\\t}\\n\\n\\tserialize() {\\n\\t\\treturn {\\n\\t\\t\\t...super.serialize(),\\n\\t\\t\\ttype: this.getType(),\\n\\t\\t};\\n\\t}\\n\\n\\tgetParent(): X {\\n\\t\\treturn this._parent.getValue();\\n\\t}\\n\\n\\tsetParent(parent: X): void {\\n\\t\\tthis._parent.next(parent);\\n\\t}\\n\\n\\tparentChanges(): Observable<ParentChangeEvent<X>> {\\n\\t\\treturn this._parent$.pipe(\\n\\t\\t\\ttakeUntil(this.onEntityDestroy()),\\n\\t\\t\\tmap(p => new ParentChangeEvent<X>(this, p))\\n\\t\\t);\\n\\t}\\n\\n\\tgetPainted(): boolean {\\n\\t\\treturn this._painted.getValue();\\n\\t}\\n\\n\\tsetPainted(painted: boolean = true) {\\n\\t\\tthis._painted.next(painted);\\n\\t}\\n\\n\\tgetHovered(): boolean {\\n\\t\\treturn this._hovered.getValue();\\n\\t}\\n\\n\\tsetHovered(painted: boolean = true) {\\n\\t\\tthis._hovered.next(painted);\\n\\t}\\n\\n\\tselectHovered() {\\n\\t\\treturn this._hovered$;\\n\\t}\\n\\n\\tpaintChanges(): Observable<PaintedEvent> {\\n\\t\\treturn this._painted$.pipe(\\n\\t\\t\\ttakeUntil(this.onEntityDestroy()),\\n\\t\\t\\tmap(p => new PaintedEvent(this, p))\\n\\t\\t);\\n\\t}\\n\\n\\tgetType(): string {\\n\\t\\treturn this._type;\\n\\t}\\n\\n\\tgetSelected(): boolean {\\n\\t\\treturn this._selected.getValue();\\n\\t}\\n\\n\\tselectSelected(): Observable<boolean> {\\n\\t\\treturn this._selected.asObservable();\\n\\t}\\n\\n\\tsetSelected(selected: boolean = true) {\\n\\t\\tthis._selected.next(selected);\\n\\t}\\n\\n\\tselectionChanges(): Observable<SelectionEvent> {\\n\\t\\treturn this._selected$.pipe(\\n\\t\\t\\ttakeUntil(this.onEntityDestroy()),\\n\\t\\t\\tmap(s => new SelectionEvent(this, s)),\\n\\t\\t\\tthis.withLog(\'selectionChanges\')\\n\\t\\t);\\n\\t}\\n\\n\\tgetSelectedEntities(): BaseModel[] {\\n\\t\\treturn this._selected.value ? [this] : [];\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"type","type":"string","optional":true},{"name":"id","type":"string","optional":true},{"name":"logPrefix","type":"string","defaultValue":"\'[Base]\'"}],"line":15,"jsdoctags":[{"name":"type","type":"string","optional":true,"tagName":{"text":"param"}},{"name":"id","type":"string","optional":true,"tagName":{"text":"param"}},{"name":"logPrefix","type":"string","defaultValue":"\'[Base]\'","tagName":{"text":"param"}}]},"properties":[{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132]},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132]},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132]},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132]},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132]},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132]},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132]},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132]},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132]},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}]},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}]},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}]},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}]},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"BaseEntity","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultLabelFactory","id":"class-DefaultLabelFactory-e309a74b4af700bf725d5227254a8e5b","file":"projects/ngx-diagrams/src/lib/defaults/factories/default-label.factory.ts","type":"class","sourceCode":"import { ViewContainerRef, ComponentRef, ComponentFactoryResolver, ComponentFactory, Renderer2 } from \'@angular/core\';\\nimport { AbstractLabelFactory } from \'../../factories/label.factory\';\\nimport { DefaultLabelComponent } from \'../components/default-label/default-label.component\';\\nimport { DefaultLabelModel } from \'../models/default-label.model\';\\n\\nexport class DefaultLabelFactory extends AbstractLabelFactory<DefaultLabelModel> {\\n\\tconstructor(private resolver: ComponentFactoryResolver, private renderer: Renderer2) {\\n\\t\\tsuper(\'default\');\\n\\t}\\n\\n\\tgenerateWidget(label: DefaultLabelComponent, labelHost: ViewContainerRef): ComponentRef<DefaultLabelComponent> {\\n\\t\\tconst componentRef = labelHost.createComponent(this.getRecipe());\\n\\n\\t\\t// attach coordinates and default positional behaviour to the generated component host\\n\\t\\tconst rootNode = componentRef.location.nativeElement;\\n\\n\\t\\t// default style for link\\n\\t\\tthis.renderer.setStyle(rootNode, \'position\', \'absolute\');\\n\\n\\t\\t// data attributes\\n\\t\\tthis.renderer.setAttribute(rootNode, \'data-labelid\', label.id);\\n\\n\\t\\t// on destroy make sure to destroy the componentRef\\n\\t\\tlabel.onEntityDestroy().subscribe(() => {\\n\\t\\t\\tcomponentRef.destroy();\\n\\t\\t});\\n\\n\\t\\t// assign all passed properties to node initialization.\\n\\t\\tObject.entries(label).forEach(([key, value]) => {\\n\\t\\t\\tcomponentRef.instance[key] = value;\\n\\t\\t});\\n\\n\\t\\tcomponentRef.instance.setPainted(true);\\n\\t\\treturn componentRef;\\n\\t}\\n\\n\\tgetRecipe(): ComponentFactory<DefaultLabelComponent> {\\n\\t\\treturn this.resolver.resolveComponentFactory(DefaultLabelComponent);\\n\\t}\\n\\n\\tgetNewInstance() {\\n\\t\\treturn new DefaultLabelModel();\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"resolver","type":"ComponentFactoryResolver"},{"name":"renderer","type":"Renderer2"}],"line":6,"jsdoctags":[{"name":"resolver","type":"ComponentFactoryResolver","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","tagName":{"text":"param"}}]},"properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractLabelFactory"}},{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"label","type":"DefaultLabelComponent"},{"name":"labelHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<DefaultLabelComponent>","typeParameters":[],"line":11,"jsdoctags":[{"name":"label","type":"DefaultLabelComponent","tagName":{"text":"param"}},{"name":"labelHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":41},{"name":"getRecipe","args":[],"optional":false,"returnType":"ComponentFactory<DefaultLabelComponent>","typeParameters":[],"line":37},{"name":"generateWidget","args":[{"name":"label","type":"LabelModel"},{"name":"labelsHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":6,"modifierKind":[117],"jsdoctags":[{"name":"label","type":"LabelModel","tagName":{"text":"param"}},{"name":"labelsHost","type":"ViewContainerRef","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractLabelFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractLabelFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractLabelFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultLabelModel","id":"class-DefaultLabelModel-eb9c426488fab0b955e6810f7504ddd7","file":"projects/ngx-diagrams/src/lib/defaults/models/default-label.model.ts","type":"class","sourceCode":"import { LabelModel } from \'../../models/label.model\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\n\\nexport class DefaultLabelModel extends LabelModel {\\n\\tprivate _label: BehaviorSubject<string> = new BehaviorSubject(\'\');\\n\\tlabel$: Observable<string> = this._label.asObservable();\\n\\n\\tconstructor(label: string = \'NO LABEL\', type: string = \'default\') {\\n\\t\\tsuper(type);\\n\\t\\tthis.setLabel(label);\\n\\t}\\n\\n\\tsetLabel(label: string) {\\n\\t\\tthis._label.next(label);\\n\\t}\\n\\n\\tgetLabel(): string {\\n\\t\\treturn this._label.getValue();\\n\\t}\\n\\n\\tselectLabel(): Observable<string> {\\n\\t\\treturn this.label$;\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"label","type":"string","defaultValue":"\'NO LABEL\'"},{"name":"type","type":"string","defaultValue":"\'default\'"}],"line":6,"jsdoctags":[{"name":"label","type":"string","defaultValue":"\'NO LABEL\'","tagName":{"text":"param"}},{"name":"type","type":"string","defaultValue":"\'default\'","tagName":{"text":"param"}}]},"properties":[{"name":"_label","defaultValue":"new BehaviorSubject(\'\')","type":"BehaviorSubject<string>","optional":false,"description":"","line":5,"modifierKind":[112]},{"name":"label$","defaultValue":"this._label.asObservable()","type":"Observable<string>","optional":false,"description":"","line":6},{"name":"_coords","type":"BehaviorSubject<Coords>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_rotation","type":"BehaviorSubject<number>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"coords$","type":"Observable<Coords>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"rotation$","type":"Observable<number>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"LabelModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"getLabel","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":17},{"name":"selectLabel","args":[],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":21},{"name":"setLabel","args":[{"name":"label","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":13,"jsdoctags":[{"name":"label","type":"string","tagName":{"text":"param"}}]},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"inheritance":{"file":"LabelModel"}},{"name":"getCoords","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":37,"inheritance":{"file":"LabelModel"}},{"name":"getRotation","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":33,"inheritance":{"file":"LabelModel"}},{"name":"selectCoords","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":57,"inheritance":{"file":"LabelModel"}},{"name":"selectRotation","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":49,"inheritance":{"file":"LabelModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedLabelModel","typeParameters":[],"line":24,"inheritance":{"file":"LabelModel"}},{"name":"setCoords","args":[{"name":"newCoords","type":"Partial<Coords>"}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"jsdoctags":[{"name":"newCoords","type":"Partial<Coords>","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"setRotation","args":[{"name":"angle","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"jsdoctags":[{"name":"angle","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"LabelModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"LabelModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"LabelModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"LabelModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"LabelModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"LabelModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"LabelModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"LabelModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"LabelModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"LabelModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"LabelModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"LabelModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"LabelModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"LabelModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"LabelModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"LabelModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"LabelModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"LabelModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"LabelModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"LabelModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"LabelModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"LabelModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"LabelModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultLinkFactory","id":"class-DefaultLinkFactory-e90ff1be4b8218e18b40c3faf18dfb8b","file":"projects/ngx-diagrams/src/lib/defaults/factories/default-link.factory.ts","type":"class","sourceCode":"import { AbstractLinkFactory } from \'../../factories/link.factory\';\\nimport { DefaultLinkComponent } from \'../components/default-link/default-link.component\';\\nimport { DefaultLinkModel } from \'../models/default-link.model\';\\nimport { ViewContainerRef, ComponentRef, ComponentFactoryResolver, ComponentFactory, Renderer2 } from \'@angular/core\';\\nimport { DiagramEngine } from \'../../services/engine.service\';\\n\\nexport class DefaultLinkFactory extends AbstractLinkFactory<DefaultLinkModel> {\\n\\tconstructor(private resolver: ComponentFactoryResolver, private renderer: Renderer2) {\\n\\t\\tsuper(\'default\');\\n\\t}\\n\\n\\tgenerateWidget(diagramEngine: DiagramEngine, link: DefaultLinkModel, linksHost: ViewContainerRef): ComponentRef<DefaultLinkComponent> {\\n\\t\\tconst componentRef = linksHost.createComponent(this.getRecipe());\\n\\n\\t\\t// attach coordinates and default positional behaviour to the generated component host\\n\\t\\tconst rootNode = componentRef.location.nativeElement;\\n\\n\\t\\t// default style for link\\n\\t\\tthis.renderer.setStyle(rootNode, \'position\', \'absolute\');\\n\\t\\tthis.renderer.addClass(rootNode, \'label\');\\n\\n\\t\\t// data attributes\\n\\t\\tthis.renderer.setAttribute(rootNode, \'data-linkid\', link.id);\\n\\n\\t\\t// on destroy make sure to destroy the componentRef\\n\\t\\tlink.onEntityDestroy().subscribe(() => {\\n\\t\\t\\tcomponentRef.destroy();\\n\\t\\t});\\n\\n\\t\\t// assign all passed properties to link initialization.\\n\\t\\tObject.entries(link).forEach(([key, value]) => {\\n\\t\\t\\tcomponentRef.instance[key] = value;\\n\\t\\t});\\n\\n\\t\\tcomponentRef.instance.diagramEngine = diagramEngine;\\n\\t\\tcomponentRef.instance.setPainted(true);\\n\\t\\treturn componentRef;\\n\\t}\\n\\n\\tgetRecipe(): ComponentFactory<DefaultLinkComponent> {\\n\\t\\treturn this.resolver.resolveComponentFactory(DefaultLinkComponent);\\n\\t}\\n\\n\\tgetNewInstance() {\\n\\t\\treturn new DefaultLinkModel();\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"resolver","type":"ComponentFactoryResolver"},{"name":"renderer","type":"Renderer2"}],"line":7,"jsdoctags":[{"name":"resolver","type":"ComponentFactoryResolver","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","tagName":{"text":"param"}}]},"properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractLinkFactory"}},{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"diagramEngine","type":"DiagramEngine"},{"name":"link","type":"DefaultLinkModel"},{"name":"linksHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<DefaultLinkComponent>","typeParameters":[],"line":12,"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}},{"name":"link","type":"DefaultLinkModel","tagName":{"text":"param"}},{"name":"linksHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":44},{"name":"getRecipe","args":[],"optional":false,"returnType":"ComponentFactory<DefaultLinkComponent>","typeParameters":[],"line":40},{"name":"generateWidget","args":[{"name":"diagramEngine","type":"DiagramEngine"},{"name":"link","type":"LinkModel"},{"name":"linksHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":7,"modifierKind":[117],"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}},{"name":"link","type":"LinkModel","tagName":{"text":"param"}},{"name":"linksHost","type":"ViewContainerRef","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractLinkFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractLinkFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractLinkFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultLinkModel","id":"class-DefaultLinkModel-eeecc0df85d0f465ed62956afb64e222","file":"projects/ngx-diagrams/src/lib/defaults/models/default-link.model.ts","type":"class","sourceCode":"import { LinkModel } from \'../../models/link.model\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\n\\nexport class DefaultLinkModel extends LinkModel {\\n\\twidth$: BehaviorSubject<number>;\\n\\tprivate color$: BehaviorSubject<string>;\\n\\tcurvyness$: BehaviorSubject<number>;\\n\\n\\tconstructor({ type = \'default\' }: { type?: string } = {}) {\\n\\t\\tsuper(type);\\n\\t\\tthis.color$ = new BehaviorSubject(\'rgba(255,255,255,0.5)\');\\n\\t\\tthis.width$ = new BehaviorSubject(3);\\n\\t\\tthis.curvyness$ = new BehaviorSubject(50);\\n\\t}\\n\\n\\tsetWidth(width: number) {\\n\\t\\tthis.width$.next(width);\\n\\t}\\n\\n\\tsetColor(color: string) {\\n\\t\\tthis.color$.next(color);\\n\\t}\\n\\n\\tselectWidth(): Observable<number> {\\n\\t\\treturn this.width$.asObservable();\\n\\t}\\n\\n\\tselectColor(): Observable<string> {\\n\\t\\treturn this.color$.asObservable();\\n\\t}\\n\\n\\tsetCurvyness(curvyness: number) {\\n\\t\\tthis.curvyness$.next(curvyness);\\n\\t}\\n\\n\\tget color() {\\n\\t\\treturn this.color$.getValue();\\n\\t}\\n\\n\\tget width() {\\n\\t\\treturn this.width$.getValue();\\n\\t}\\n\\n\\tget curvyness() {\\n\\t\\treturn this.curvyness$.getValue();\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"type":"literal type","defaultValue":"{}"}],"line":7,"jsdoctags":[{"type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}]},"properties":[{"name":"color$","type":"BehaviorSubject<string>","optional":false,"description":"","line":6,"modifierKind":[112]},{"name":"curvyness$","type":"BehaviorSubject<number>","optional":false,"description":"","line":7},{"name":"width$","type":"BehaviorSubject<number>","optional":false,"description":"","line":5},{"name":"diagramEngine","type":"DiagramEngine","optional":false,"description":"","line":13,"inheritance":{"file":"LinkModel"}},{"name":"extras","type":"any","optional":false,"description":"","line":20,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"label","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<LabelModel>","optional":false,"description":"","line":22,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"name","type":"string","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"points","type":"PointModel[]","optional":false,"description":"","line":19,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"sourcePort","type":"PortModel | null","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"targetPort","type":"PortModel | null","optional":false,"description":"","line":18,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"selectColor","args":[],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":28},{"name":"selectWidth","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":24},{"name":"setColor","args":[{"name":"color","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":20,"jsdoctags":[{"name":"color","type":"string","tagName":{"text":"param"}}]},{"name":"setCurvyness","args":[{"name":"curvyness","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"curvyness","type":"number","tagName":{"text":"param"}}]},{"name":"setWidth","args":[{"name":"width","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":16,"jsdoctags":[{"name":"width","type":"number","tagName":{"text":"param"}}]},{"name":"addPoint","args":[{"name":"pointModel","type":"P"},{"name":"index","type":"number","defaultValue":"1"}],"optional":false,"returnType":"P","typeParameters":["P"],"line":219,"jsdoctags":[{"name":"pointModel","type":"P","tagName":{"text":"param"}},{"name":"index","type":"number","defaultValue":"1","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"inheritance":{"file":"LinkModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"object","defaultValue":"{}"},{"name":"clone","type":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"jsdoctags":[{"name":"lookupTable","type":"object","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"generatePoint","args":[{"type":"Coords"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":226,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getExtras","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":54,"inheritance":{"file":"LinkModel"}},{"name":"getFirstPoint","args":[],"optional":false,"returnType":"PointModel","typeParameters":[],"line":126,"inheritance":{"file":"LinkModel"}},{"name":"getLabel","args":[],"optional":false,"returnType":"LabelModel","typeParameters":[],"line":186,"inheritance":{"file":"LinkModel"}},{"name":"getLastPoint","args":[],"optional":false,"returnType":"PointModel","typeParameters":[],"line":130,"inheritance":{"file":"LinkModel"}},{"name":"getName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":50,"inheritance":{"file":"LinkModel"}},{"name":"getPointForPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":116,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getPointIndex","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"any","typeParameters":[],"line":93,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getPointModel","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"PointModel | null","typeParameters":[],"line":97,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getPoints","args":[],"optional":false,"returnType":"PointModel[]","typeParameters":[],"line":166,"inheritance":{"file":"LinkModel"}},{"name":"getPortForPoint","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"PortModel","typeParameters":[],"line":106,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getSourcePort","args":[],"optional":false,"returnType":"PortModel","typeParameters":[],"line":144,"inheritance":{"file":"LinkModel"}},{"name":"getTargetPort","args":[],"optional":false,"returnType":"PortModel","typeParameters":[],"line":148,"inheritance":{"file":"LinkModel"}},{"name":"isLastPoint","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":88,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"point","args":[{"type":"Coords"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":162,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"removeMiddlePoints","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":213,"inheritance":{"file":"LinkModel"}},{"name":"removePoint","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":201,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"removePointsAfter","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":209,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"removePointsBefore","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":205,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"resetLabel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":190,"inheritance":{"file":"LinkModel"}},{"name":"selectLabel","args":[],"optional":false,"returnType":"Observable<LabelModel | null>","typeParameters":[],"line":182,"inheritance":{"file":"LinkModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedLinkModel","typeParameters":[],"line":32,"inheritance":{"file":"LinkModel"}},{"name":"setExtras","args":[{"name":"extras","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"jsdoctags":[{"name":"extras","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setLabel","args":[{"name":"label","type":"LabelModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":177,"jsdoctags":[{"name":"label","type":"LabelModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":230,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setName","args":[{"name":"name","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":46,"jsdoctags":[{"name":"name","type":"string","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setPoints","args":[{"name":"points","type":"PointModel[]"}],"optional":false,"returnType":"void","typeParameters":[],"line":170,"jsdoctags":[{"name":"points","type":"PointModel[]","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setSourcePort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setTargetPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":152,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"LinkModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"LinkModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"LinkModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"LinkModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"LinkModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"LinkModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"LinkModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"LinkModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"LinkModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"LinkModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"LinkModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"LinkModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"LinkModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"LinkModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"LinkModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"LinkModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"LinkModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"LinkModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"LinkModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"LinkModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"LinkModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"LinkModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"LinkModel","accessors":{"color":{"name":"color","getSignature":{"name":"color","type":"","returnType":"","line":36}},"width":{"name":"width","getSignature":{"name":"width","type":"","returnType":"","line":40}},"curvyness":{"name":"curvyness","getSignature":{"name":"curvyness","type":"","returnType":"","line":44}}},"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultNodeFactory","id":"class-DefaultNodeFactory-e4d52813ade86942629a55b1cb145679","file":"projects/ngx-diagrams/src/lib/defaults/factories/default-node.factory.ts","type":"class","sourceCode":"import { DefaultNodeComponent } from \'../components/default-node/default-node.component\';\\nimport { AbstractNodeFactory } from \'../../factories/node.factory\';\\nimport { ComponentFactoryResolver, ViewContainerRef, ComponentRef, ComponentFactory, Renderer2 } from \'@angular/core\';\\nimport { DiagramEngine } from \'../../services/engine.service\';\\nimport { DefaultNodeModel } from \'../models/default-node.model\';\\n\\nexport class DefaultNodeFactory extends AbstractNodeFactory<DefaultNodeModel> {\\n\\tconstructor(private resolver: ComponentFactoryResolver, private renderer: Renderer2) {\\n\\t\\tsuper(\'default\');\\n\\t}\\n\\n\\tgenerateWidget(diagramEngine: DiagramEngine, node: DefaultNodeModel, nodesHost: ViewContainerRef): ComponentRef<DefaultNodeComponent> {\\n\\t\\tconst componentRef = nodesHost.createComponent(this.getRecipe());\\n\\n\\t\\t// attach coordinates and default positional behaviour to the generated component host\\n\\t\\tconst rootNode = componentRef.location.nativeElement;\\n\\n\\t\\t// default style for node\\n\\t\\tthis.renderer.setStyle(rootNode, \'position\', \'absolute\');\\n\\t\\tthis.renderer.setStyle(rootNode, \'display\', \'block\');\\n\\n\\t\\t// data attributes\\n\\t\\tthis.renderer.setAttribute(rootNode, \'data-nodeid\', node.id);\\n\\n\\t\\t// subscribe to node coordinates\\n\\t\\tnode.selectCoords().subscribe(({ x, y }) => {\\n\\t\\t\\tthis.renderer.setStyle(rootNode, \'left\', `${x}px`);\\n\\t\\t\\tthis.renderer.setStyle(rootNode, \'top\', `${y}px`);\\n\\t\\t});\\n\\n\\t\\tnode.selectionChanges().subscribe(e => {\\n\\t\\t\\te.isSelected ? this.renderer.addClass(rootNode, \'selected\') : this.renderer.removeClass(rootNode, \'selected\');\\n\\t\\t});\\n\\n\\t\\tnode.onEntityDestroy().subscribe(() => {\\n\\t\\t\\tcomponentRef.destroy();\\n\\t\\t});\\n\\n\\t\\t// assign all passed properties to node initialization.\\n\\t\\tObject.entries(node).forEach(([key, value]) => {\\n\\t\\t\\tcomponentRef.instance[key] = value;\\n\\t\\t});\\n\\n\\t\\tcomponentRef.instance.setDiagramEngine(diagramEngine);\\n\\t\\tcomponentRef.instance.setPainted(true);\\n\\n\\t\\treturn componentRef;\\n\\t}\\n\\n\\tgetRecipe(): ComponentFactory<DefaultNodeComponent> {\\n\\t\\treturn this.resolver.resolveComponentFactory(DefaultNodeComponent);\\n\\t}\\n\\n\\tgetNewInstance(initialConfig?: any): DefaultNodeModel {\\n\\t\\treturn new DefaultNodeModel(initialConfig);\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"resolver","type":"ComponentFactoryResolver"},{"name":"renderer","type":"Renderer2"}],"line":7,"jsdoctags":[{"name":"resolver","type":"ComponentFactoryResolver","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","tagName":{"text":"param"}}]},"properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractNodeFactory"}},{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"diagramEngine","type":"DiagramEngine"},{"name":"node","type":"DefaultNodeModel"},{"name":"nodesHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<DefaultNodeComponent>","typeParameters":[],"line":12,"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}},{"name":"node","type":"DefaultNodeModel","tagName":{"text":"param"}},{"name":"nodesHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"DefaultNodeModel","typeParameters":[],"line":54,"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}]},{"name":"getRecipe","args":[],"optional":false,"returnType":"ComponentFactory<DefaultNodeComponent>","typeParameters":[],"line":50},{"name":"generateWidget","args":[{"name":"diagramEngine","type":"DiagramEngine"},{"name":"node","type":"NodeModel"},{"name":"nodeHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":7,"modifierKind":[117],"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}},{"name":"node","type":"NodeModel","tagName":{"text":"param"}},{"name":"nodeHost","type":"ViewContainerRef","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractNodeFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractNodeFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractNodeFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultNodeModel","id":"class-DefaultNodeModel-2163cc362a44718630fbb8eb710d247c","file":"projects/ngx-diagrams/src/lib/defaults/models/default-node.model.ts","type":"class","sourceCode":"import { NodeModel } from \'../../models/node.model\';\\nimport { DefaultPortModel } from \'./default-port.model\';\\nimport { Observable } from \'rxjs\';\\n\\nexport class DefaultNodeModel extends NodeModel {\\n\\tname: string;\\n\\tcolor: string;\\n\\theight$: Observable<number>;\\n\\twidth$: Observable<number>;\\n\\n\\tconstructor({\\n\\t\\tname = \'Untitled\',\\n\\t\\ttype = \'default\',\\n\\t\\tcolor = \'rgb(0, 192, 255)\',\\n\\t\\tid,\\n\\t}: {\\n\\t\\tname?: string;\\n\\t\\ttype?: string;\\n\\t\\tid?: string;\\n\\t\\tcolor?: string;\\n\\t} = {}) {\\n\\t\\tsuper(type, id);\\n\\t\\tthis.name = name;\\n\\t\\tthis.color = color;\\n\\t\\tthis.height$ = this.selectHeight();\\n\\t\\tthis.width$ = this.selectWidth();\\n\\t}\\n\\n\\taddInPort({ name, type = \'default\', id, linkType = \'default\' }: { name: string; type?: string; id?: string; linkType?: string }) {\\n\\t\\tconst port = new DefaultPortModel({ isInput: true, name, type, id, label: null, linkType });\\n\\t\\tthis.addPort(port);\\n\\t\\treturn port;\\n\\t}\\n\\n\\taddOutPort({\\n\\t\\tname,\\n\\t\\ttype = \'default\',\\n\\t\\tid,\\n\\t\\tlinkType = \'default\',\\n\\t\\tmaximumLinks = null,\\n\\t}: {\\n\\t\\tname: string;\\n\\t\\ttype?: string;\\n\\t\\tid?: string;\\n\\t\\tlinkType?: string;\\n\\t\\tmaximumLinks?: number;\\n\\t}) {\\n\\t\\tconst port = new DefaultPortModel({ isInput: false, name, type, id, label: null, linkType, maximumLinks });\\n\\t\\tthis.addPort(port);\\n\\t\\treturn port;\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"type":"literal type","defaultValue":"{}"}],"line":9,"jsdoctags":[{"type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}]},"properties":[{"name":"color","type":"string","optional":false,"description":"","line":7},{"name":"height$","type":"Observable<number>","optional":false,"description":"","line":8},{"name":"name","type":"string","optional":false,"description":"","line":6},{"name":"width$","type":"Observable<number>","optional":false,"description":"","line":9},{"name":"_coords","type":"BehaviorSubject<Coords>","optional":false,"description":"","line":16,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_diagramEngine","type":"BehaviorSubject<DiagramEngine>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_dimensions","type":"BehaviorSubject<Dimensions>","optional":false,"description":"","line":17,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_extras","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_ports","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"coords$","type":"Observable<Coords>","optional":false,"description":"","line":20,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"dimensions$","type":"Observable<Dimensions>","optional":false,"description":"","line":21,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"extras$","type":"Observable<literal type>","optional":false,"description":"","line":18,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"ports$","type":"Observable<literal type>","optional":false,"description":"","line":19,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"NodeModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"addInPort","args":[{"type":"literal type"}],"optional":false,"returnType":"any","typeParameters":[],"line":29,"jsdoctags":[{"type":"literal type","tagName":{"text":"param"}}]},{"name":"addOutPort","args":[{"type":"literal type"}],"optional":false,"returnType":"any","typeParameters":[],"line":35,"jsdoctags":[{"type":"literal type","tagName":{"text":"param"}}]},{"name":"addPort","args":[{"name":"port","type":"P"}],"optional":false,"returnType":"P","typeParameters":[],"line":178,"description":"<p>Assign a port to the node and set the node as its getParent</p>\\n","jsdoctags":[{"name":"port","type":"P","tagName":{"text":"param"}},{"tagName":{"pos":5309,"end":5316,"flags":0,"escapedText":"returns"},"comment":"<p>the inserted port</p>\\n"}],"inheritance":{"file":"NodeModel"}},{"name":"coordsChanges","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":150,"inheritance":{"file":"NodeModel"}},{"name":"dimensionChanges","args":[],"optional":false,"returnType":"Observable<Dimensions>","typeParameters":[],"line":223,"inheritance":{"file":"NodeModel"}},{"name":"getCoords","args":[],"optional":false,"returnType":"Coords","typeParameters":[],"line":57,"inheritance":{"file":"NodeModel"}},{"name":"getDiagramEngine","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":45,"inheritance":{"file":"NodeModel"}},{"name":"getDimensions","args":[],"optional":false,"returnType":"Dimensions","typeParameters":[],"line":218,"inheritance":{"file":"NodeModel"}},{"name":"getExtras","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":265,"inheritance":{"file":"NodeModel"}},{"name":"getHeight","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":227,"inheritance":{"file":"NodeModel"}},{"name":"getPort","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"P","typeParameters":[],"line":195,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getPorts","args":[{"name":"ids","type":"ID[]","optional":true}],"optional":false,"returnType":"literal type","typeParameters":[],"line":210,"jsdoctags":[{"name":"ids","type":"ID[]","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":130,"inheritance":{"file":"NodeModel"}},{"name":"getWidth","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":235,"inheritance":{"file":"NodeModel"}},{"name":"removePort","args":[{"name":"port","type":"P"}],"optional":false,"returnType":"string","typeParameters":[],"line":184,"jsdoctags":[{"name":"port","type":"P","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"selectCoords","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":154,"inheritance":{"file":"NodeModel"}},{"name":"selectDiagramEngine","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":49,"inheritance":{"file":"NodeModel"}},{"name":"selectExtras","args":[{"name":"selector","type":"function","optional":true,"function":[{"name":"extra","type":"E"}]}],"optional":false,"returnType":"any","typeParameters":["E"],"line":269,"jsdoctags":[{"name":"selector","type":"function","optional":true,"function":[{"name":"extra","type":"E"}],"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"selectHeight","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":252,"inheritance":{"file":"NodeModel"}},{"name":"selectPorts","args":[{"name":"selector","type":"function","optional":true,"function":[]}],"optional":false,"returnType":"Observable<P[]>","typeParameters":[],"line":199,"jsdoctags":[{"name":"selector","type":"function","optional":true,"function":[],"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"selectWidth","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":243,"inheritance":{"file":"NodeModel"}},{"name":"selectX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":158,"inheritance":{"file":"NodeModel"}},{"name":"selectY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":166,"inheritance":{"file":"NodeModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedNodeModel","typeParameters":[],"line":75,"inheritance":{"file":"NodeModel"}},{"name":"setCoords","args":[{"type":"Coords"}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setDiagramEngine","args":[{"name":"diagramEngine","type":"DiagramEngine"}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setDimensions","args":[{"type":"Dimensions"}],"optional":false,"returnType":"void","typeParameters":[],"line":214,"jsdoctags":[{"type":"Dimensions","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setExtras","args":[{"name":"extras","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":261,"jsdoctags":[{"name":"extras","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setHeight","args":[{"name":"height","type":"number"}],"optional":false,"returnType":"any","typeParameters":[],"line":231,"jsdoctags":[{"name":"height","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setWidth","args":[{"name":"width","type":"number"}],"optional":false,"returnType":"any","typeParameters":[],"line":239,"jsdoctags":[{"name":"width","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"transitionToCoords","args":[{"type":"Coords"}],"optional":false,"returnType":"void","typeParameters":[],"line":89,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"NodeModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"NodeModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"NodeModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"NodeModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"NodeModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"NodeModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"NodeModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"NodeModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"NodeModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"NodeModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"NodeModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"NodeModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"NodeModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"NodeModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"NodeModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"NodeModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"NodeModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"NodeModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"NodeModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"NodeModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"NodeModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"NodeModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"NodeModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultPortFactory","id":"class-DefaultPortFactory-fa373a5bb0c9f4c1728183bb7d963a9c","file":"projects/ngx-diagrams/src/lib/defaults/factories/default-port.factory.ts","type":"class","sourceCode":"import { AbstractPortFactory } from \'../../factories/port.factory\';\\nimport { DefaultPortModel } from \'../models/default-port.model\';\\nimport { ViewContainerRef, ComponentRef, ComponentFactory, ComponentFactoryResolver, Renderer2 } from \'@angular/core\';\\nimport { DefaultPortComponent } from \'../components/default-port/default-port.component\';\\n\\nexport class DefaultPortFactory extends AbstractPortFactory<DefaultPortModel> {\\n\\tconstructor(private resolver: ComponentFactoryResolver, private renderer: Renderer2) {\\n\\t\\tsuper(\'default\');\\n\\t}\\n\\n\\tgenerateWidget(port: DefaultPortModel, portsHost: ViewContainerRef): ComponentRef<DefaultPortComponent> {\\n\\t\\tconst componentRef = portsHost.createComponent(this.getRecipe());\\n\\n\\t\\t// attach coordinates and default positional behaviour to the generated component host\\n\\t\\tconst rootNode = componentRef.location.nativeElement as HTMLElement;\\n\\n\\t\\t// data attributes\\n\\t\\tthis.renderer.setAttribute(rootNode, \'data-portid\', port.id);\\n\\t\\tthis.renderer.setAttribute(rootNode, \'data-name\', port.getName());\\n\\n\\t\\tport.in ? this.renderer.addClass(rootNode, \'in\') : this.renderer.addClass(rootNode, \'out\');\\n\\n\\t\\t// assign all passed properties to node initialization.\\n\\t\\tObject.entries(port).forEach(([key, value]) => {\\n\\t\\t\\tcomponentRef.instance[key] = value;\\n\\t\\t});\\n\\n\\t\\tport.onEntityDestroy().subscribe(() => {\\n\\t\\t\\tcomponentRef.destroy();\\n\\t\\t});\\n\\n\\t\\tcomponentRef.instance.setPainted(true);\\n\\t\\treturn componentRef;\\n\\t}\\n\\n\\tgetRecipe(): ComponentFactory<DefaultPortComponent> {\\n\\t\\treturn this.resolver.resolveComponentFactory(DefaultPortComponent);\\n\\t}\\n\\n\\tgetNewInstance(initialConfig?: any): DefaultPortModel {\\n\\t\\treturn new DefaultPortModel({ isInput: true, name: \'unknown\', ...initialConfig });\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"resolver","type":"ComponentFactoryResolver"},{"name":"renderer","type":"Renderer2"}],"line":6,"jsdoctags":[{"name":"resolver","type":"ComponentFactoryResolver","tagName":{"text":"param"}},{"name":"renderer","type":"Renderer2","tagName":{"text":"param"}}]},"properties":[{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractPortFactory"}},{"name":"_type","type":"string","optional":false,"description":"","line":4,"modifierKind":[113],"inheritance":{"file":"AbstractFactory"}}],"methods":[{"name":"generateWidget","args":[{"name":"port","type":"DefaultPortModel"},{"name":"portsHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<DefaultPortComponent>","typeParameters":[],"line":11,"jsdoctags":[{"name":"port","type":"DefaultPortModel","tagName":{"text":"param"}},{"name":"portsHost","type":"ViewContainerRef","tagName":{"text":"param"}}]},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"DefaultPortModel","typeParameters":[],"line":40,"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}]},{"name":"getRecipe","args":[],"optional":false,"returnType":"ComponentFactory<DefaultPortComponent>","typeParameters":[],"line":36},{"name":"generateWidget","args":[{"name":"port","type":"PortModel"},{"name":"portHost","type":"ViewContainerRef"}],"optional":false,"returnType":"ComponentRef<T>","typeParameters":[],"line":6,"modifierKind":[117],"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}},{"name":"portHost","type":"ViewContainerRef","tagName":{"text":"param"}}],"inheritance":{"file":"AbstractPortFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractPortFactory"}},{"name":"getNewInstance","args":[{"name":"initialConfig","type":"any","optional":true}],"optional":false,"returnType":"T","typeParameters":[],"line":14,"modifierKind":[117],"jsdoctags":[{"name":"initialConfig","type":"any","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"AbstractFactory"}}],"indexSignatures":[],"extends":"AbstractPortFactory","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DefaultPortModel","id":"class-DefaultPortModel-1a4ddbc0af8ef42ab1b542533b561f80","file":"projects/ngx-diagrams/src/lib/defaults/models/default-port.model.ts","type":"class","sourceCode":"import { PortModel } from \'../../models/port.model\';\\nimport { LinkModel } from \'../../models/link.model\';\\nimport { DefaultLinkModel } from \'./default-link.model\';\\n\\nexport interface DefaultPortModelConfig {\\n\\tid?: string;\\n\\tisInput?: boolean;\\n\\tname?: string;\\n\\ttype?: string;\\n\\tlabel?: string;\\n\\tlinkType?: string;\\n\\tmaximumLinks?: number;\\n}\\n\\nexport class DefaultPortModel extends PortModel {\\n\\tin: boolean;\\n\\tlabel: string;\\n\\tlinks: { [id: string]: any };\\n\\n\\tconstructor({\\n\\t\\tisInput = true,\\n\\t\\tname = \'port\',\\n\\t\\ttype = \'default\',\\n\\t\\tid = null,\\n\\t\\tlabel = null,\\n\\t\\tlinkType = \'default\',\\n\\t\\tmaximumLinks = null,\\n\\t}: DefaultPortModelConfig = {}) {\\n\\t\\tsuper(name, type, id, null, linkType);\\n\\t\\tthis.in = isInput;\\n\\t\\tthis.label = label || name;\\n\\n\\t\\tif (this.in) {\\n\\t\\t\\tthis.setCanCreateLinks(false);\\n\\t\\t} else {\\n\\t\\t\\tthis.setMaximumLinks(maximumLinks);\\n\\t\\t\\tthis.setMagnetic(false);\\n\\t\\t}\\n\\t}\\n\\n\\tlink(port: PortModel): LinkModel {\\n\\t\\tif (super.getCanCreateLinks()) {\\n\\t\\t\\tconst link = new DefaultLinkModel({ type: this.getLinkType() });\\n\\t\\t\\tlink.setSourcePort(this);\\n\\t\\t\\tlink.setTargetPort(port);\\n\\t\\t\\treturn link;\\n\\t\\t}\\n\\n\\t\\treturn null;\\n\\t}\\n\\n\\tcreateLinkModel() {\\n\\t\\tif (super.getCanCreateLinks()) {\\n\\t\\t\\treturn new DefaultLinkModel({ type: this.getLinkType() });\\n\\t\\t}\\n\\t}\\n\\n\\tcanLinkToPort(port: PortModel): boolean {\\n\\t\\tif (port instanceof DefaultPortModel) {\\n\\t\\t\\treturn this.in !== port.in;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"type":"DefaultPortModelConfig","defaultValue":"{}"}],"line":18,"jsdoctags":[{"type":"DefaultPortModelConfig","defaultValue":"{}","tagName":{"text":"param"}}]},"properties":[{"name":"in","type":"boolean","optional":false,"description":"","line":16},{"name":"label","type":"string","optional":false,"description":"","line":17},{"name":"links","type":"literal type","optional":false,"description":"","line":18},{"name":"canCreateLinks$","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"height$","type":"BehaviorSubject<number>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"links$","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":8,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"linkType","type":"string","optional":false,"description":"","line":10,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"magnetic$","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"maximumLinks","type":"number","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"name","type":"string","optional":false,"description":"","line":7,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"width$","type":"BehaviorSubject<number>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"x$","type":"BehaviorSubject<number>","optional":false,"description":"","line":12,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"y$","type":"BehaviorSubject<number>","optional":false,"description":"","line":13,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"PortModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"canLinkToPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":58,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"createLinkModel","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":52},{"name":"link","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"LinkModel","typeParameters":[],"line":41,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"addLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"canLinkToPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":155,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"createLinkModel","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":163,"inheritance":{"file":"PortModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"inheritance":{"file":"PortModel"}},{"name":"getCanCreateLinks","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":56,"inheritance":{"file":"PortModel"}},{"name":"getCoords","args":[],"optional":false,"returnType":"{ x: any; y: any; }","typeParameters":[],"line":66,"inheritance":{"file":"PortModel"}},{"name":"getHeight","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":106,"inheritance":{"file":"PortModel"}},{"name":"getLinks","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":140,"inheritance":{"file":"PortModel"}},{"name":"getLinkType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":122,"inheritance":{"file":"PortModel"}},{"name":"getMagnetic","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":78,"inheritance":{"file":"PortModel"}},{"name":"getMaximumLinks","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":114,"inheritance":{"file":"PortModel"}},{"name":"getName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":52,"inheritance":{"file":"PortModel"}},{"name":"getNode","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":48,"inheritance":{"file":"PortModel"}},{"name":"getWidth","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":110,"inheritance":{"file":"PortModel"}},{"name":"getX","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":102,"inheritance":{"file":"PortModel"}},{"name":"getY","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":98,"inheritance":{"file":"PortModel"}},{"name":"isLocked","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":159,"inheritance":{"file":"PortModel"}},{"name":"removeLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":130,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"selectCanCreateLinks","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":70,"inheritance":{"file":"PortModel"}},{"name":"selectLinks","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":144,"inheritance":{"file":"PortModel"}},{"name":"selectMagnetic","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":82,"inheritance":{"file":"PortModel"}},{"name":"selectX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":90,"inheritance":{"file":"PortModel"}},{"name":"selectY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":94,"inheritance":{"file":"PortModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":33,"inheritance":{"file":"PortModel"}},{"name":"setCanCreateLinks","args":[{"name":"value","type":"boolean"}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"jsdoctags":[{"name":"value","type":"boolean","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setLinkType","args":[{"name":"type","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setMagnetic","args":[{"name":"magnetic","type":"boolean"}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"jsdoctags":[{"name":"magnetic","type":"boolean","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setMaximumLinks","args":[{"name":"maximumLinks","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":118,"jsdoctags":[{"name":"maximumLinks","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"updateCoords","args":[{"type":"literal type"}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"jsdoctags":[{"type":"literal type","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"PortModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"PortModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"PortModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"PortModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"PortModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"PortModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"PortModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"PortModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"PortModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"PortModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"PortModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"PortModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"PortModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"PortModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"PortModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"PortModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"PortModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"PortModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"PortModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"PortModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"PortModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"PortModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"PortModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"DiagramModel","id":"class-DiagramModel-2a90704cac0b825f2993d1f8e489375f","file":"projects/ngx-diagrams/src/lib/models/diagram.model.ts","type":"class","sourceCode":"import { BehaviorSubject, Observable } from \'rxjs\';\\nimport { NodeModel } from \'./node.model\';\\nimport { LinkModel } from \'./link.model\';\\nimport { BaseEntity, BaseEntityType } from \'../base.entity\';\\nimport { DiagramEngine } from \'../services/engine.service\';\\nimport { BaseModel } from \'./base.model\';\\nimport { PortModel } from \'./port.model\';\\nimport { PointModel } from \'./point.model\';\\nimport { Coords } from \'../interfaces/coords.interface\';\\nimport { ID } from \'../utils/tool-kit.util\';\\nimport { SelectOptions } from \'../interfaces/select-options.interface\';\\nimport { SerializedDiagramModel } from \'../interfaces/serialization.interface\';\\n\\nexport class DiagramModel extends BaseEntity {\\n\\tlinks$: BehaviorSubject<{ [s: string]: LinkModel }>;\\n\\tnodes$: BehaviorSubject<{ [s: string]: NodeModel }>;\\n\\tzoom$: BehaviorSubject<number>;\\n\\toffsetX$: BehaviorSubject<number>;\\n\\toffsetY$: BehaviorSubject<number>;\\n\\tgridSize$: BehaviorSubject<number>;\\n\\tmaxZoomOut$: BehaviorSubject<number>;\\n\\tmaxZoomIn$: BehaviorSubject<number>;\\n\\n\\tconstructor(private diagramEngine: DiagramEngine, id?: string) {\\n\\t\\tsuper(id);\\n\\t\\tthis.nodes$ = new BehaviorSubject<{ [s: string]: NodeModel }>({});\\n\\t\\tthis.links$ = new BehaviorSubject<{ [s: string]: LinkModel }>({});\\n\\t\\tthis.zoom$ = new BehaviorSubject(100);\\n\\t\\tthis.offsetX$ = new BehaviorSubject(0);\\n\\t\\tthis.offsetY$ = new BehaviorSubject(0);\\n\\t\\tthis.gridSize$ = new BehaviorSubject(0);\\n\\t\\tthis.maxZoomIn$ = new BehaviorSubject(null);\\n\\t\\tthis.maxZoomOut$ = new BehaviorSubject(null);\\n\\t}\\n\\n\\t// TODO: support the following events for links and nodes\\n\\t// removed, updated<positionChanged/dataChanged>, added\\n\\tgetNodes(): { [s: string]: NodeModel } {\\n\\t\\treturn this.nodes$.getValue();\\n\\t}\\n\\n\\tgetNode(id: ID): NodeModel | null {\\n\\t\\treturn this.nodes$.getValue()[id];\\n\\t}\\n\\n\\tgetLink(id: ID): LinkModel | null {\\n\\t\\treturn this.links$.getValue()[id];\\n\\t}\\n\\n\\tgetLinks(): { [s: string]: LinkModel } {\\n\\t\\treturn this.links$.getValue();\\n\\t}\\n\\n\\tgetAllPorts(options?: SelectOptions<PortModel>): Map<string, PortModel> {\\n\\t\\tconst portsMap = new Map();\\n\\t\\t// TODO: optimize!\\n\\t\\tObject.values(this.getNodes()).forEach(node => {\\n\\t\\t\\tfor (const [key, port] of Object.entries(node.getPorts())) {\\n\\t\\t\\t\\tif (options.filter) {\\n\\t\\t\\t\\t\\tif (options.filter(port as PortModel)) {\\n\\t\\t\\t\\t\\t\\tportsMap.set(key, port);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tportsMap.set(key, port);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn portsMap;\\n\\t}\\n\\n\\t/**\\n\\t * Add a node to the diagram\\n\\t * @returns Inserted Node\\n\\t */\\n\\taddNode(node: NodeModel): NodeModel {\\n\\t\\tthis.nodes$.next({ ...this.nodes$.value, [node.id]: node });\\n\\t\\treturn node;\\n\\t}\\n\\n\\t/**\\n\\t * Delete a node from the diagram\\n\\t */\\n\\tdeleteNode(nodeOrId: NodeModel | string): void {\\n\\t\\tconst nodeID: ID = typeof nodeOrId === \'string\' ? nodeOrId : nodeOrId.id;\\n\\t\\tconst node = this.getNode(nodeID);\\n\\n\\t\\t// delete all related links\\n\\t\\tObject.values(node.getPorts()).forEach((port: PortModel) => {\\n\\t\\t\\tObject.values(port.getLinks()).forEach(link => {\\n\\t\\t\\t\\tthis.deleteLink(link);\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tconst updNodes = { ...this.nodes$.value };\\n\\t\\tdelete updNodes[nodeID];\\n\\t\\tthis.nodes$.next(updNodes);\\n\\n\\t\\tnode.destroy();\\n\\t}\\n\\n\\t/**\\n\\t * Get nodes behaviour subject, use `.getValue()` for snapshot\\n\\t */\\n\\tselectNodes(): Observable<{ [s: string]: NodeModel }> {\\n\\t\\treturn this.nodes$.asObservable();\\n\\t}\\n\\n\\t/**\\n\\t * Add link\\n\\t * @returns Newly created link\\n\\t */\\n\\taddLink(link: LinkModel): LinkModel {\\n\\t\\tthis.links$.next({ ...this.links$.value, [link.id]: link });\\n\\t\\treturn link;\\n\\t}\\n\\n\\t/**\\n\\t * Delete link\\n\\t */\\n\\tdeleteLink(linkOrId: LinkModel | string) {\\n\\t\\tconst linkID: ID = typeof linkOrId === \'string\' ? linkOrId : linkOrId.id;\\n\\t\\tconst link = this.getLink(linkID);\\n\\n\\t\\tconst updLinks = { ...this.links$.value };\\n\\t\\tdelete updLinks[linkID];\\n\\n\\t\\tthis.links$.next(updLinks);\\n\\t\\tlink.destroy();\\n\\t}\\n\\n\\treset() {\\n\\t\\tObject.values(this.getNodes()).forEach(node => {\\n\\t\\t\\tthis.deleteNode(node);\\n\\t\\t});\\n\\t}\\n\\n\\t/**\\n\\t * Get links behaviour subject, use `.getValue()` for snapshot\\n\\t */\\n\\tselectLinks(): Observable<{ [s: string]: LinkModel }> {\\n\\t\\treturn this.links$.asObservable();\\n\\t}\\n\\n\\t// /**\\n\\t//  * Serialize the diagram model to JSON\\n\\t//  * @returns diagram model as a string\\n\\t//  */\\n\\tserialize(): SerializedDiagramModel {\\n\\t\\tconst serializedNodes = Object.values(this.nodes$.getValue()).map(node => node.serialize());\\n\\t\\tconst serializedLinks = Object.values(this.links$.getValue()).map(link => link.serialize());\\n\\t\\treturn { ...super.serialize(), nodes: serializedNodes, links: serializedLinks };\\n\\t}\\n\\n\\t// /**\\n\\t//  * Load diagram from JSON\\n\\t//  */\\n\\t// deserialize(serializedModel: SerializedDiagramModel) {\\n\\t// \\tconst nodes: DefaultNodeModel[] = [];\\n\\t// \\tObject.values(serializedModel.nodes).forEach(node => {\\n\\t// \\t\\tconst nodeModel = new DefaultNodeModel(node);\\n\\t// \\t\\tconsole.log(nodeModel);\\n\\t// \\t\\tnodes.push(nodeModel);\\n\\t// \\t});\\n\\n\\t// \\tthis.addAll(...nodes);\\n\\t// Object.values(serializedModel.links).forEach(link => {\\n\\t// \\tconst linkModel = new DefaultLinkModel(link);\\n\\t// \\tthis.addLink(linkModel);\\n\\t// });\\n\\t// }\\n\\n\\tsetMaxZoomOut(maxZoomOut: number) {\\n\\t\\tthis.maxZoomOut$.next(maxZoomOut);\\n\\t}\\n\\n\\tsetMaxZoomIn(maxZoomIn: number) {\\n\\t\\tthis.maxZoomIn$.next(maxZoomIn);\\n\\t}\\n\\n\\tgetMaxZoomOut() {\\n\\t\\treturn this.maxZoomOut$.getValue();\\n\\t}\\n\\n\\tgetMaxZoomIn() {\\n\\t\\treturn this.maxZoomIn$.getValue();\\n\\t}\\n\\n\\tsetOffset(x: number, y: number) {\\n\\t\\tthis.offsetX$.next(x);\\n\\t\\tthis.offsetY$.next(y);\\n\\t}\\n\\n\\tsetOffsetX(x: number) {\\n\\t\\tthis.offsetX$.next(x);\\n\\t}\\n\\n\\tgetOffsetX(): number {\\n\\t\\treturn this.offsetX$.getValue();\\n\\t}\\n\\n\\tselectOffsetX(): Observable<number> {\\n\\t\\treturn this.offsetX$.asObservable();\\n\\t}\\n\\n\\tsetOffsetY(y: number) {\\n\\t\\tthis.offsetY$.next(y);\\n\\t}\\n\\n\\tgetOffsetY(): number {\\n\\t\\treturn this.offsetY$.getValue();\\n\\t}\\n\\n\\tselectOffsetY(): Observable<number> {\\n\\t\\treturn this.offsetY$.asObservable();\\n\\t}\\n\\n\\tsetZoomLevel(z: number) {\\n\\t\\tconst maxZoomIn = this.maxZoomIn$.getValue();\\n\\t\\tconst maxZoomOut = this.maxZoomOut$.getValue();\\n\\n\\t\\t// check if zoom levels exceeded defined boundaries\\n\\t\\tif ((maxZoomIn && z > maxZoomIn) || (maxZoomOut && z < maxZoomOut)) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tthis.zoom$.next(z);\\n\\t}\\n\\n\\tgetZoomLevel(): number {\\n\\t\\treturn this.zoom$.getValue();\\n\\t}\\n\\n\\tselectZoomLevel(): Observable<number> {\\n\\t\\treturn this.zoom$.asObservable();\\n\\t}\\n\\n\\tgetDiagramEngine(): DiagramEngine {\\n\\t\\treturn this.diagramEngine;\\n\\t}\\n\\n\\tclearSelection(ignore: BaseModel | null = null) {\\n\\t\\tthis.getSelectedItems().forEach(element => {\\n\\t\\t\\tif (ignore && ignore.id === element.id) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\t\\t\\telement.setSelected(false);\\n\\t\\t});\\n\\t}\\n\\n\\tgetGridPosition({ x, y }: Coords): Coords {\\n\\t\\tconst gridSize = this.gridSize$.getValue();\\n\\t\\tif (gridSize === 0) {\\n\\t\\t\\treturn { x, y };\\n\\t\\t}\\n\\t\\treturn {\\n\\t\\t\\tx: gridSize * Math.floor((x + gridSize / 2) / gridSize),\\n\\t\\t\\ty: gridSize * Math.floor((y + gridSize / 2) / gridSize),\\n\\t\\t};\\n\\t}\\n\\n\\tgetSelectedItems(...filters: BaseEntityType[]): BaseModel[] {\\n\\t\\tif (!Array.isArray(filters)) {\\n\\t\\t\\tfilters = [filters];\\n\\t\\t}\\n\\t\\tlet items: BaseModel[] = [];\\n\\n\\t\\t// run through nodes\\n\\t\\titems = items.concat(Object.values(this.nodes$.getValue()).flatMap(node => node.getSelectedEntities()));\\n\\n\\t\\t// find all the links\\n\\t\\titems = items.concat(Object.values(this.links$.getValue()).flatMap(link => link.getSelectedEntities()));\\n\\n\\t\\t// find all points\\n\\t\\titems = items.concat(\\n\\t\\t\\tObject.values(this.links$.getValue()).flatMap(link => {\\n\\t\\t\\t\\treturn link.getPoints().flatMap(point => point.getSelectedEntities());\\n\\t\\t\\t})\\n\\t\\t);\\n\\n\\t\\titems = [...new Set(items)];\\n\\n\\t\\tif (filters.length > 0) {\\n\\t\\t\\titems = items.filter((item: BaseModel) => {\\n\\t\\t\\t\\tif (filters.includes(\'node\') && item instanceof NodeModel) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (filters.includes(\'link\') && item instanceof LinkModel) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (filters.includes(\'port\') && item instanceof PortModel) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif (filters.includes(\'point\') && item instanceof PointModel) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\treturn items;\\n\\t}\\n\\n\\taddAll(...models: BaseModel[]) {\\n\\t\\tmodels.forEach(model => {\\n\\t\\t\\tif (model instanceof LinkModel) {\\n\\t\\t\\t\\tthis.addLink(model);\\n\\t\\t\\t} else if (model instanceof NodeModel) {\\n\\t\\t\\t\\tthis.addNode(model);\\n\\t\\t\\t}\\n\\t\\t});\\n\\t\\treturn models;\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"diagramEngine","type":"DiagramEngine"},{"name":"id","type":"string","optional":true}],"line":22,"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}},{"name":"id","type":"string","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"gridSize$","type":"BehaviorSubject<number>","optional":false,"description":"","line":20},{"name":"links$","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":15},{"name":"maxZoomIn$","type":"BehaviorSubject<number>","optional":false,"description":"","line":22},{"name":"maxZoomOut$","type":"BehaviorSubject<number>","optional":false,"description":"","line":21},{"name":"nodes$","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":16},{"name":"offsetX$","type":"BehaviorSubject<number>","optional":false,"description":"","line":18},{"name":"offsetY$","type":"BehaviorSubject<number>","optional":false,"description":"","line":19},{"name":"zoom$","type":"BehaviorSubject<number>","optional":false,"description":"","line":17},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"addAll","args":[{"name":"models","type":"BaseModel[]","dotDotDotToken":true}],"optional":false,"returnType":"{}","typeParameters":[],"line":303,"jsdoctags":[{"name":"models","type":"BaseModel[]","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"addLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"LinkModel","typeParameters":[],"line":112,"description":"<p>Add link</p>\\n","jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}},{"tagName":{"pos":3267,"end":3274,"flags":0,"escapedText":"returns"},"comment":"<p>Newly created link</p>\\n"}]},{"name":"addNode","args":[{"name":"node","type":"NodeModel"}],"optional":false,"returnType":"NodeModel","typeParameters":[],"line":75,"description":"<p>Add a node to the diagram</p>\\n","jsdoctags":[{"name":"node","type":"NodeModel","tagName":{"text":"param"}},{"tagName":{"pos":2403,"end":2410,"flags":0,"escapedText":"returns"},"comment":"<p>Inserted Node</p>\\n"}]},{"name":"clearSelection","args":[{"name":"ignore","type":"BaseModel | null","defaultValue":"null"}],"optional":false,"returnType":"void","typeParameters":[],"line":241,"jsdoctags":[{"name":"ignore","type":"BaseModel | null","defaultValue":"null","tagName":{"text":"param"}}]},{"name":"deleteLink","args":[{"name":"linkOrId","type":"LinkModel | string"}],"optional":false,"returnType":"void","typeParameters":[],"line":120,"description":"<p>Delete link</p>\\n","jsdoctags":[{"name":"linkOrId","type":"LinkModel | string","tagName":{"text":"param"}}]},{"name":"deleteNode","args":[{"name":"nodeOrId","type":"NodeModel | string"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"description":"<p>Delete a node from the diagram</p>\\n","jsdoctags":[{"name":"nodeOrId","type":"NodeModel | string","tagName":{"text":"param"}}]},{"name":"getAllPorts","args":[{"name":"options","type":"SelectOptions<PortModel>","optional":true}],"optional":false,"returnType":"Map<string, PortModel>","typeParameters":[],"line":54,"jsdoctags":[{"name":"options","type":"SelectOptions<PortModel>","optional":true,"tagName":{"text":"param"}}]},{"name":"getDiagramEngine","args":[],"optional":false,"returnType":"DiagramEngine","typeParameters":[],"line":237},{"name":"getGridPosition","args":[{"type":"Coords"}],"optional":false,"returnType":"Coords","typeParameters":[],"line":250,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}]},{"name":"getLink","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"LinkModel | null","typeParameters":[],"line":46,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}]},{"name":"getLinks","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":50},{"name":"getMaxZoomIn","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":184},{"name":"getMaxZoomOut","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":180},{"name":"getNode","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"NodeModel | null","typeParameters":[],"line":42,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}]},{"name":"getNodes","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":38},{"name":"getOffsetX","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":197},{"name":"getOffsetY","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":209},{"name":"getSelectedItems","args":[{"name":"filters","type":"BaseEntityType[]","dotDotDotToken":true}],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":261,"jsdoctags":[{"name":"filters","type":"BaseEntityType[]","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"getZoomLevel","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":229},{"name":"reset","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":131},{"name":"selectLinks","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":140,"description":"<p>Get links behaviour subject, use <code>.getValue()</code> for snapshot</p>\\n"},{"name":"selectNodes","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":104,"description":"<p>Get nodes behaviour subject, use <code>.getValue()</code> for snapshot</p>\\n"},{"name":"selectOffsetX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":201},{"name":"selectOffsetY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":213},{"name":"selectZoomLevel","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":233},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedDiagramModel","typeParameters":[],"line":148},{"name":"setMaxZoomIn","args":[{"name":"maxZoomIn","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":176,"jsdoctags":[{"name":"maxZoomIn","type":"number","tagName":{"text":"param"}}]},{"name":"setMaxZoomOut","args":[{"name":"maxZoomOut","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":172,"jsdoctags":[{"name":"maxZoomOut","type":"number","tagName":{"text":"param"}}]},{"name":"setOffset","args":[{"name":"x","type":"number"},{"name":"y","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":188,"jsdoctags":[{"name":"x","type":"number","tagName":{"text":"param"}},{"name":"y","type":"number","tagName":{"text":"param"}}]},{"name":"setOffsetX","args":[{"name":"x","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":193,"jsdoctags":[{"name":"x","type":"number","tagName":{"text":"param"}}]},{"name":"setOffsetY","args":[{"name":"y","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":205,"jsdoctags":[{"name":"y","type":"number","tagName":{"text":"param"}}]},{"name":"setZoomLevel","args":[{"name":"z","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":217,"jsdoctags":[{"name":"z","type":"number","tagName":{"text":"param"}}]},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"BaseEntity","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"InvalidLinkDestroyed","id":"class-InvalidLinkDestroyed-1e81ccd558aa62e9e195743d67d0d282","file":"projects/ngx-diagrams/src/lib/actions/invalid-link-destroyed.action.ts","type":"class","sourceCode":"import { BaseAction } from \'./base.action\';\\nimport { PortModel } from \'../models/port.model\';\\nimport { NodeModel } from \'../models/node.model\';\\nimport { LinkModel } from \'../models\';\\n\\nexport class InvalidLinkDestroyed extends BaseAction {\\n\\tsourcePort: PortModel;\\n\\tlink: LinkModel;\\n\\n\\tconstructor(mouseX: number, mouseY: number, link: LinkModel) {\\n\\t\\tsuper(mouseX, mouseY);\\n\\t\\tthis.sourcePort = link.getSourcePort();\\n\\t\\tthis.link = link;\\n\\t}\\n\\n\\tgetOutPortNode(): NodeModel {\\n\\t\\treturn this.sourcePort.getParent();\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"mouseX","type":"number"},{"name":"mouseY","type":"number"},{"name":"link","type":"LinkModel"}],"line":8,"jsdoctags":[{"name":"mouseX","type":"number","tagName":{"text":"param"}},{"name":"mouseY","type":"number","tagName":{"text":"param"}},{"name":"link","type":"LinkModel","tagName":{"text":"param"}}]},"properties":[{"name":"link","type":"LinkModel","optional":false,"description":"","line":8},{"name":"sourcePort","type":"PortModel","optional":false,"description":"","line":7},{"name":"mouseX","type":"number","optional":false,"description":"","line":2,"inheritance":{"file":"BaseAction"}},{"name":"mouseY","type":"number","optional":false,"description":"","line":3,"inheritance":{"file":"BaseAction"}},{"name":"ms","type":"number","optional":false,"description":"","line":4,"inheritance":{"file":"BaseAction"}}],"methods":[{"name":"getOutPortNode","args":[],"optional":false,"returnType":"NodeModel","typeParameters":[],"line":16}],"indexSignatures":[],"extends":"BaseAction","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"LabelModel","id":"class-LabelModel-2ddac0237d5022e1d3630035b27e0210","file":"projects/ngx-diagrams/src/lib/models/label.model.ts","type":"class","sourceCode":"import { BaseModel } from \'./base.model\';\\nimport { LinkModel } from \'./link.model\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { Coords } from \'../interfaces/coords.interface\';\\nimport { takeUntil, distinctUntilChanged } from \'rxjs/operators\';\\nimport { SerializedLabelModel } from \'../interfaces/serialization.interface\';\\n\\nexport class LabelModel extends BaseModel<LinkModel> {\\n\\tprivate readonly _coords: BehaviorSubject<Coords>;\\n\\tprivate readonly coords$: Observable<Coords>;\\n\\n\\tprivate readonly _rotation: BehaviorSubject<number>;\\n\\tprivate readonly rotation$: Observable<number>;\\n\\n\\tconstructor(type?: string, id?: string) {\\n\\t\\tsuper(type, id);\\n\\t\\tthis._coords = new BehaviorSubject<Coords>({ x: 0, y: 0 });\\n\\t\\tthis.coords$ = this._coords.asObservable();\\n\\n\\t\\tthis._rotation = new BehaviorSubject(0);\\n\\t\\tthis.rotation$ = this._rotation.asObservable();\\n\\t}\\n\\n\\tserialize(): SerializedLabelModel {\\n\\t\\treturn {\\n\\t\\t\\t...super.serialize(),\\n\\t\\t\\ttype: this.getType(),\\n\\t\\t\\trotation: this.getRotation(),\\n\\t\\t\\tcoords: this.getCoords(),\\n\\t\\t};\\n\\t}\\n\\n\\tgetRotation() {\\n\\t\\treturn this._rotation.getValue();\\n\\t}\\n\\n\\tgetCoords() {\\n\\t\\treturn this._coords.getValue();\\n\\t}\\n\\n\\tdestroy() {\\n\\t\\tsuper.destroy();\\n\\t}\\n\\n\\tsetRotation(angle: number) {\\n\\t\\tthis._rotation.next(angle);\\n\\t}\\n\\n\\tselectRotation(): Observable<number> {\\n\\t\\treturn this.rotation$.pipe(takeUntil(this.onEntityDestroy()), distinctUntilChanged());\\n\\t}\\n\\n\\tsetCoords(newCoords: Partial<Coords>) {\\n\\t\\tthis._coords.next({ ...this._coords.getValue(), ...newCoords });\\n\\t}\\n\\n\\tselectCoords(): Observable<Coords> {\\n\\t\\treturn this.coords$.pipe(takeUntil(this.onEntityDestroy()), distinctUntilChanged());\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"type","type":"string","optional":true},{"name":"id","type":"string","optional":true}],"line":13,"jsdoctags":[{"name":"type","type":"string","optional":true,"tagName":{"text":"param"}},{"name":"id","type":"string","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"_coords","type":"BehaviorSubject<Coords>","optional":false,"description":"","line":9,"modifierKind":[112,132]},{"name":"_rotation","type":"BehaviorSubject<number>","optional":false,"description":"","line":12,"modifierKind":[112,132]},{"name":"coords$","type":"Observable<Coords>","optional":false,"description":"","line":10,"modifierKind":[112,132]},{"name":"rotation$","type":"Observable<number>","optional":false,"description":"","line":13,"modifierKind":[112,132]},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41},{"name":"getCoords","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":37},{"name":"getRotation","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":33},{"name":"selectCoords","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":57},{"name":"selectRotation","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":49},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedLabelModel","typeParameters":[],"line":24},{"name":"setCoords","args":[{"name":"newCoords","type":"Partial<Coords>"}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"jsdoctags":[{"name":"newCoords","type":"Partial<Coords>","tagName":{"text":"param"}}]},{"name":"setRotation","args":[{"name":"angle","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"jsdoctags":[{"name":"angle","type":"number","tagName":{"text":"param"}}]},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"BaseModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"LinkCreatedAction","id":"class-LinkCreatedAction-f770a22f6b9b410b87af49b3c2609e7f","file":"projects/ngx-diagrams/src/lib/actions/links-created.action.ts","type":"class","sourceCode":"import { BaseAction } from \'./base.action\';\\nimport { PortModel } from \'../models/port.model\';\\nimport { NodeModel } from \'../models/node.model\';\\nimport { LinkModel } from \'../models\';\\n\\n// TODO: refactor into entity-created.action, and fire every time a new entity is created!\\nexport class LinkCreatedAction extends BaseAction {\\n\\tsourcePort: PortModel;\\n\\ttargetPort: PortModel;\\n\\tlink: LinkModel;\\n\\n\\tconstructor(mouseX: number, mouseY: number, link: LinkModel) {\\n\\t\\tsuper(mouseX, mouseY);\\n\\t\\tthis.sourcePort = link.getSourcePort();\\n\\t\\tthis.targetPort = link.getTargetPort();\\n\\t\\tthis.link = link;\\n\\t}\\n\\n\\tgetOutPortNode(): NodeModel {\\n\\t\\treturn this.sourcePort.getParent();\\n\\t}\\n\\n\\tgetInPortNode(): NodeModel {\\n\\t\\treturn this.targetPort.getParent();\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"mouseX","type":"number"},{"name":"mouseY","type":"number"},{"name":"link","type":"LinkModel"}],"line":10,"jsdoctags":[{"name":"mouseX","type":"number","tagName":{"text":"param"}},{"name":"mouseY","type":"number","tagName":{"text":"param"}},{"name":"link","type":"LinkModel","tagName":{"text":"param"}}]},"properties":[{"name":"link","type":"LinkModel","optional":false,"description":"","line":10},{"name":"sourcePort","type":"PortModel","optional":false,"description":"","line":8},{"name":"targetPort","type":"PortModel","optional":false,"description":"","line":9},{"name":"mouseX","type":"number","optional":false,"description":"","line":2,"inheritance":{"file":"BaseAction"}},{"name":"mouseY","type":"number","optional":false,"description":"","line":3,"inheritance":{"file":"BaseAction"}},{"name":"ms","type":"number","optional":false,"description":"","line":4,"inheritance":{"file":"BaseAction"}}],"methods":[{"name":"getInPortNode","args":[],"optional":false,"returnType":"NodeModel","typeParameters":[],"line":23},{"name":"getOutPortNode","args":[],"optional":false,"returnType":"NodeModel","typeParameters":[],"line":19}],"indexSignatures":[],"extends":"BaseAction","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"LinkModel","id":"class-LinkModel-7e724fbd8aa09b4ba40545d3b5b7668e","file":"projects/ngx-diagrams/src/lib/models/link.model.ts","type":"class","sourceCode":"import { BaseModel } from \'./base.model\';\\nimport { DiagramModel } from \'./diagram.model\';\\nimport { PortModel } from \'./port.model\';\\nimport { PointModel } from \'./point.model\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { ID } from \'../utils/tool-kit.util\';\\nimport { Coords } from \'../interfaces/coords.interface\';\\nimport { LabelModel } from \'./label.model\';\\nimport { DiagramEngine } from \'../services/engine.service\';\\nimport { SerializedLinkModel } from \'../interfaces/serialization.interface\';\\n\\nexport class LinkModel extends BaseModel<DiagramModel> {\\n\\tdiagramEngine: DiagramEngine;\\n\\n\\t// TODO: decide what should be reactive using RXJS\\n\\tprivate name: string;\\n\\tprivate sourcePort: PortModel | null;\\n\\tprivate targetPort: PortModel | null;\\n\\tprivate points: PointModel[];\\n\\tprivate extras: any;\\n\\n\\tprivate readonly label: BehaviorSubject<LabelModel> = new BehaviorSubject(null);\\n\\n\\tconstructor(linkType: string = \'default\', id?: string) {\\n\\t\\tsuper(linkType, id);\\n\\t\\tthis.points = [new PointModel(this, { x: 0, y: 0 }), new PointModel(this, { x: 0, y: 0 })];\\n\\t\\tthis.extras = {};\\n\\t\\tthis.sourcePort = null;\\n\\t\\tthis.targetPort = null;\\n\\t}\\n\\n\\tserialize(): SerializedLinkModel {\\n\\t\\tconst serializedPoints = this.points.map(point => point.serialize());\\n\\t\\tconst label = this.getLabel()?.serialize();\\n\\t\\treturn {\\n\\t\\t\\t...super.serialize(),\\n\\t\\t\\tname: this.getName(),\\n\\t\\t\\tsourcePort: this.getSourcePort().id,\\n\\t\\t\\ttargetPort: this.getTargetPort().id,\\n\\t\\t\\textras: this.getExtras(),\\n\\t\\t\\tpoints: serializedPoints,\\n\\t\\t\\tlabel,\\n\\t\\t};\\n\\t}\\n\\n\\tsetName(name: string) {\\n\\t\\tthis.name = name;\\n\\t}\\n\\n\\tgetName(): string {\\n\\t\\treturn this.name;\\n\\t}\\n\\n\\tgetExtras(): any {\\n\\t\\treturn this.extras;\\n\\t}\\n\\n\\tsetExtras(extras: any) {\\n\\t\\tthis.extras = extras;\\n\\t}\\n\\n\\tdestroy() {\\n\\t\\tif (this.sourcePort) {\\n\\t\\t\\tthis.sourcePort.removeLink(this);\\n\\t\\t}\\n\\n\\t\\tif (this.targetPort) {\\n\\t\\t\\tthis.targetPort.removeLink(this);\\n\\t\\t}\\n\\n\\t\\tsuper.destroy();\\n\\t}\\n\\n\\tdoClone(lookupTable = {}, clone) {\\n\\t\\tclone.setPoints(\\n\\t\\t\\tthis.getPoints().map((point: PointModel) => {\\n\\t\\t\\t\\treturn point.clone(lookupTable);\\n\\t\\t\\t})\\n\\t\\t);\\n\\t\\tif (this.sourcePort) {\\n\\t\\t\\tclone.setSourcePort(this.sourcePort.clone(lookupTable));\\n\\t\\t}\\n\\t\\tif (this.targetPort) {\\n\\t\\t\\tclone.setTargetPort(this.targetPort.clone(lookupTable));\\n\\t\\t}\\n\\t}\\n\\n\\tisLastPoint(point: PointModel) {\\n\\t\\tconst index = this.getPointIndex(point);\\n\\t\\treturn index === this.points.length - 1;\\n\\t}\\n\\n\\tgetPointIndex(point: PointModel) {\\n\\t\\treturn this.points.indexOf(point);\\n\\t}\\n\\n\\tgetPointModel(id: ID): PointModel | null {\\n\\t\\tfor (const point of this.points) {\\n\\t\\t\\tif (point.id === id) {\\n\\t\\t\\t\\treturn point;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn null;\\n\\t}\\n\\n\\tgetPortForPoint(point: PointModel): PortModel {\\n\\t\\tif (this.sourcePort !== null && this.getFirstPoint().id === point.id) {\\n\\t\\t\\treturn this.sourcePort;\\n\\t\\t}\\n\\t\\tif (this.targetPort !== null && this.getLastPoint().id === point.id) {\\n\\t\\t\\treturn this.targetPort;\\n\\t\\t}\\n\\t\\treturn null;\\n\\t}\\n\\n\\tgetPointForPort(port: PortModel): PointModel {\\n\\t\\tif (this.sourcePort !== null && this.sourcePort.id === port.id) {\\n\\t\\t\\treturn this.getFirstPoint();\\n\\t\\t}\\n\\t\\tif (this.targetPort !== null && this.targetPort.id === port.id) {\\n\\t\\t\\treturn this.getLastPoint();\\n\\t\\t}\\n\\t\\treturn null;\\n\\t}\\n\\n\\tgetFirstPoint(): PointModel {\\n\\t\\treturn this.points[0];\\n\\t}\\n\\n\\tgetLastPoint(): PointModel {\\n\\t\\treturn this.points[this.points.length - 1];\\n\\t}\\n\\n\\tsetSourcePort(port: PortModel) {\\n\\t\\tif (port !== null) {\\n\\t\\t\\tport.addLink(this);\\n\\t\\t}\\n\\t\\tif (this.sourcePort !== null) {\\n\\t\\t\\tthis.sourcePort.removeLink(this);\\n\\t\\t}\\n\\t\\tthis.sourcePort = port;\\n\\t}\\n\\n\\tgetSourcePort(): PortModel {\\n\\t\\treturn this.sourcePort;\\n\\t}\\n\\n\\tgetTargetPort(): PortModel {\\n\\t\\treturn this.targetPort;\\n\\t}\\n\\n\\tsetTargetPort(port: PortModel) {\\n\\t\\tif (port !== null) {\\n\\t\\t\\tport.addLink(this);\\n\\t\\t}\\n\\t\\tif (this.targetPort !== null) {\\n\\t\\t\\tthis.targetPort.removeLink(this);\\n\\t\\t}\\n\\t\\tthis.targetPort = port;\\n\\t}\\n\\n\\tpoint({ x, y }: Coords): PointModel {\\n\\t\\treturn this.addPoint(this.generatePoint({ x, y }));\\n\\t}\\n\\n\\tgetPoints(): PointModel[] {\\n\\t\\treturn this.points;\\n\\t}\\n\\n\\tsetPoints(points: PointModel[]) {\\n\\t\\tpoints.forEach(point => {\\n\\t\\t\\tpoint.setParent(this);\\n\\t\\t});\\n\\t\\tthis.points = points;\\n\\t}\\n\\n\\tsetLabel(label: LabelModel) {\\n\\t\\tlabel.setParent(this);\\n\\t\\tthis.label.next(label);\\n\\t}\\n\\n\\tselectLabel(): Observable<LabelModel | null> {\\n\\t\\treturn this.label.asObservable();\\n\\t}\\n\\n\\tgetLabel(): LabelModel {\\n\\t\\treturn this.label.getValue();\\n\\t}\\n\\n\\tresetLabel() {\\n\\t\\tconst currentLabel = this.label.getValue();\\n\\n\\t\\tif (currentLabel) {\\n\\t\\t\\tcurrentLabel.setParent(null);\\n\\t\\t\\tcurrentLabel.setPainted(false);\\n\\t\\t}\\n\\n\\t\\tthis.label.next(null);\\n\\t}\\n\\n\\tremovePoint(pointModel: PointModel) {\\n\\t\\tthis.points.splice(this.getPointIndex(pointModel), 1);\\n\\t}\\n\\n\\tremovePointsBefore(pointModel: PointModel) {\\n\\t\\tthis.points.splice(0, this.getPointIndex(pointModel));\\n\\t}\\n\\n\\tremovePointsAfter(pointModel: PointModel) {\\n\\t\\tthis.points.splice(this.getPointIndex(pointModel) + 1);\\n\\t}\\n\\n\\tremoveMiddlePoints() {\\n\\t\\tif (this.points.length > 2) {\\n\\t\\t\\tthis.points.splice(0, this.points.length - 2);\\n\\t\\t}\\n\\t}\\n\\n\\taddPoint<P extends PointModel>(pointModel: P, index = 1): P {\\n\\t\\tpointModel.setParent(this);\\n\\t\\tpointModel.setLocked(this.getLocked());\\n\\t\\tthis.points.splice(index, 0, pointModel);\\n\\t\\treturn pointModel;\\n\\t}\\n\\n\\tgeneratePoint({ x = 0, y = 0 }: Coords): PointModel {\\n\\t\\treturn new PointModel(this, { x, y });\\n\\t}\\n\\n\\tsetLocked(locked: boolean = true) {\\n\\t\\tsuper.setLocked(locked);\\n\\t\\tthis.points.forEach(point => point.setLocked(locked));\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"linkType","type":"string","defaultValue":"\'default\'"},{"name":"id","type":"string","optional":true}],"line":22,"jsdoctags":[{"name":"linkType","type":"string","defaultValue":"\'default\'","tagName":{"text":"param"}},{"name":"id","type":"string","optional":true,"tagName":{"text":"param"}}]},"properties":[{"name":"diagramEngine","type":"DiagramEngine","optional":false,"description":"","line":13},{"name":"extras","type":"any","optional":false,"description":"","line":20,"modifierKind":[112]},{"name":"label","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<LabelModel>","optional":false,"description":"","line":22,"modifierKind":[112,132]},{"name":"name","type":"string","optional":false,"description":"","line":16,"modifierKind":[112]},{"name":"points","type":"PointModel[]","optional":false,"description":"","line":19,"modifierKind":[112]},{"name":"sourcePort","type":"PortModel | null","optional":false,"description":"","line":17,"modifierKind":[112]},{"name":"targetPort","type":"PortModel | null","optional":false,"description":"","line":18,"modifierKind":[112]},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"addPoint","args":[{"name":"pointModel","type":"P"},{"name":"index","type":"number","defaultValue":"1"}],"optional":false,"returnType":"P","typeParameters":["P"],"line":219,"jsdoctags":[{"name":"pointModel","type":"P","tagName":{"text":"param"}},{"name":"index","type":"number","defaultValue":"1","tagName":{"text":"param"}}]},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62},{"name":"doClone","args":[{"name":"lookupTable","type":"object","defaultValue":"{}"},{"name":"clone","type":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"jsdoctags":[{"name":"lookupTable","type":"object","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"","tagName":{"text":"param"}}]},{"name":"generatePoint","args":[{"type":"Coords"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":226,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}]},{"name":"getExtras","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":54},{"name":"getFirstPoint","args":[],"optional":false,"returnType":"PointModel","typeParameters":[],"line":126},{"name":"getLabel","args":[],"optional":false,"returnType":"LabelModel","typeParameters":[],"line":186},{"name":"getLastPoint","args":[],"optional":false,"returnType":"PointModel","typeParameters":[],"line":130},{"name":"getName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":50},{"name":"getPointForPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":116,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"getPointIndex","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"any","typeParameters":[],"line":93,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}]},{"name":"getPointModel","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"PointModel | null","typeParameters":[],"line":97,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}]},{"name":"getPoints","args":[],"optional":false,"returnType":"PointModel[]","typeParameters":[],"line":166},{"name":"getPortForPoint","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"PortModel","typeParameters":[],"line":106,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}]},{"name":"getSourcePort","args":[],"optional":false,"returnType":"PortModel","typeParameters":[],"line":144},{"name":"getTargetPort","args":[],"optional":false,"returnType":"PortModel","typeParameters":[],"line":148},{"name":"isLastPoint","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":88,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}]},{"name":"point","args":[{"type":"Coords"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":162,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}]},{"name":"removeMiddlePoints","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":213},{"name":"removePoint","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":201,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}]},{"name":"removePointsAfter","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":209,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}]},{"name":"removePointsBefore","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":205,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}]},{"name":"resetLabel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":190},{"name":"selectLabel","args":[],"optional":false,"returnType":"Observable<LabelModel | null>","typeParameters":[],"line":182},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedLinkModel","typeParameters":[],"line":32},{"name":"setExtras","args":[{"name":"extras","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"jsdoctags":[{"name":"extras","type":"any","tagName":{"text":"param"}}]},{"name":"setLabel","args":[{"name":"label","type":"LabelModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":177,"jsdoctags":[{"name":"label","type":"LabelModel","tagName":{"text":"param"}}]},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":230,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}]},{"name":"setName","args":[{"name":"name","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":46,"jsdoctags":[{"name":"name","type":"string","tagName":{"text":"param"}}]},{"name":"setPoints","args":[{"name":"points","type":"PointModel[]"}],"optional":false,"returnType":"void","typeParameters":[],"line":170,"jsdoctags":[{"name":"points","type":"PointModel[]","tagName":{"text":"param"}}]},{"name":"setSourcePort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"setTargetPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":152,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"BaseModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"LockEvent","id":"class-LockEvent-a1b25ab2b6c79a87bcb302a83d8d1347","file":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","sourceCode":"import { ID, UID } from \'../utils/tool-kit.util\';\\nimport { BaseEntity } from \'../base.entity\';\\n\\n// region events\\nexport class BaseEvent<T extends BaseEntity> {\\n\\tentity: T;\\n\\tentityId: ID;\\n\\tstopPropagation: () => any;\\n\\tfiring: boolean;\\n\\tid: ID;\\n\\tpropogate: boolean;\\n\\n\\tconstructor(entity: T, options?: any) {\\n\\t\\tthis.id = UID();\\n\\t\\tthis.entity = entity;\\n\\t\\tthis.entityId = entity.id;\\n\\t\\tthis.firing = true;\\n\\t\\tthis.stopPropagation = () => (this.firing = false);\\n\\t\\tthis.propogate = options ? options.propagate : null;\\n\\t}\\n}\\nexport class LockEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tlocked: boolean;\\n\\n\\tconstructor(entity: T, locked: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.locked = locked;\\n\\t}\\n}\\nexport class ParentChangeEvent<P extends BaseEntity = BaseEntity, T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tparent: P;\\n\\n\\tconstructor(entity: T, parent: P) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.parent = parent;\\n\\t}\\n}\\nexport class SelectionEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisSelected: boolean;\\n\\n\\tconstructor(entity: T, selected: boolean) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isSelected = selected;\\n\\t}\\n}\\nexport class PaintedEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisPainted: boolean;\\n\\n\\tconstructor(entity: T, painted: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isPainted = painted;\\n\\t}\\n}\\n// endregion\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"entity","type":"T"},{"name":"locked","type":"boolean","defaultValue":"false"}],"line":23,"jsdoctags":[{"name":"entity","type":"T","tagName":{"text":"param"}},{"name":"locked","type":"boolean","defaultValue":"false","tagName":{"text":"param"}}]},"properties":[{"name":"locked","type":"boolean","optional":false,"description":"","line":23},{"name":"entity","type":"T","optional":false,"description":"","line":6,"inheritance":{"file":"BaseEvent"}},{"name":"entityId","type":"ID","optional":false,"description":"","line":7,"inheritance":{"file":"BaseEvent"}},{"name":"firing","type":"boolean","optional":false,"description":"","line":9,"inheritance":{"file":"BaseEvent"}},{"name":"id","type":"ID","optional":false,"description":"","line":10,"inheritance":{"file":"BaseEvent"}},{"name":"propogate","type":"boolean","optional":false,"description":"","line":11,"inheritance":{"file":"BaseEvent"}},{"name":"stopPropagation","type":"function","optional":false,"description":"","line":8,"inheritance":{"file":"BaseEvent"}}],"methods":[],"indexSignatures":[],"extends":"BaseEvent","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"LooseLinkDestroyed","id":"class-LooseLinkDestroyed-615005ec2bba2f0bdcbc67d230a5e89f","file":"projects/ngx-diagrams/src/lib/actions/loose-link-destroyed.action.ts","type":"class","sourceCode":"import { BaseAction } from \'./base.action\';\\nimport { PortModel } from \'../models/port.model\';\\nimport { NodeModel } from \'../models/node.model\';\\nimport { LinkModel } from \'../models\';\\n\\nexport class LooseLinkDestroyed extends BaseAction {\\n\\tsourcePort: PortModel;\\n\\tlink: LinkModel;\\n\\n\\tconstructor(mouseX: number, mouseY: number, link: LinkModel) {\\n\\t\\tsuper(mouseX, mouseY);\\n\\t\\tthis.sourcePort = link.getSourcePort();\\n\\t\\tthis.link = link;\\n\\t}\\n\\n\\tgetOutPortNode(): NodeModel {\\n\\t\\treturn this.sourcePort.getParent();\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"mouseX","type":"number"},{"name":"mouseY","type":"number"},{"name":"link","type":"LinkModel"}],"line":8,"jsdoctags":[{"name":"mouseX","type":"number","tagName":{"text":"param"}},{"name":"mouseY","type":"number","tagName":{"text":"param"}},{"name":"link","type":"LinkModel","tagName":{"text":"param"}}]},"properties":[{"name":"link","type":"LinkModel","optional":false,"description":"","line":8},{"name":"sourcePort","type":"PortModel","optional":false,"description":"","line":7},{"name":"mouseX","type":"number","optional":false,"description":"","line":2,"inheritance":{"file":"BaseAction"}},{"name":"mouseY","type":"number","optional":false,"description":"","line":3,"inheritance":{"file":"BaseAction"}},{"name":"ms","type":"number","optional":false,"description":"","line":4,"inheritance":{"file":"BaseAction"}}],"methods":[{"name":"getOutPortNode","args":[],"optional":false,"returnType":"NodeModel","typeParameters":[],"line":16}],"indexSignatures":[],"extends":"BaseAction","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MoveCanvasAction","id":"class-MoveCanvasAction-36cd1a4de6841ebd36b4c3915019d143","file":"projects/ngx-diagrams/src/lib/actions/move-canvas.action.ts","type":"class","sourceCode":"import { BaseAction } from \'./base.action\';\\nimport { DiagramModel } from \'../models/diagram.model\';\\n\\nexport class MoveCanvasAction extends BaseAction {\\n\\tinitialOffsetX: number;\\n\\tinitialOffsetY: number;\\n\\n\\tconstructor(mouseX: number, mouseY: number, diagramModel: DiagramModel) {\\n\\t\\tsuper(mouseX, mouseY);\\n\\t\\tthis.initialOffsetX = diagramModel.getOffsetX();\\n\\t\\tthis.initialOffsetY = diagramModel.getOffsetY();\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"mouseX","type":"number"},{"name":"mouseY","type":"number"},{"name":"diagramModel","type":"DiagramModel"}],"line":6,"jsdoctags":[{"name":"mouseX","type":"number","tagName":{"text":"param"}},{"name":"mouseY","type":"number","tagName":{"text":"param"}},{"name":"diagramModel","type":"DiagramModel","tagName":{"text":"param"}}]},"properties":[{"name":"initialOffsetX","type":"number","optional":false,"description":"","line":5},{"name":"initialOffsetY","type":"number","optional":false,"description":"","line":6},{"name":"mouseX","type":"number","optional":false,"description":"","line":2,"inheritance":{"file":"BaseAction"}},{"name":"mouseY","type":"number","optional":false,"description":"","line":3,"inheritance":{"file":"BaseAction"}},{"name":"ms","type":"number","optional":false,"description":"","line":4,"inheritance":{"file":"BaseAction"}}],"methods":[],"indexSignatures":[],"extends":"BaseAction","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"MoveItemsAction","id":"class-MoveItemsAction-8134c0458e5d0cce121598b411cf918d","file":"projects/ngx-diagrams/src/lib/actions/move-items.action.ts","type":"class","sourceCode":"import { BaseAction } from \'./base.action\';\\nimport { PointModel } from \'../models/point.model\';\\nimport { NodeModel } from \'../models/node.model\';\\nimport { DiagramEngine } from \'../services/engine.service\';\\nimport { SelectionModel } from \'../models/move-selection.model\';\\nimport { LinkModel } from \'../models/link.model\';\\n\\nexport class MoveItemsAction extends BaseAction {\\n\\tselectionModels: SelectionModel[];\\n\\tmoved: boolean;\\n\\n\\tconstructor(mouseX: number, mouseY: number, diagramEngine: DiagramEngine) {\\n\\t\\tsuper(mouseX, mouseY);\\n\\t\\tthis.moved = false;\\n\\t\\tlet selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\\n\\n\\t\\t// dont allow items which are locked to move and links which generate their position based on points.\\n\\t\\tselectedItems = selectedItems.filter(item => {\\n\\t\\t\\treturn !diagramEngine.isModelLocked(item) && !(item instanceof LinkModel);\\n\\t\\t});\\n\\n\\t\\tthis.selectionModels = selectedItems.map((item: PointModel | NodeModel) => {\\n\\t\\t\\tconst { x: initialX, y: initialY } = item.getCoords();\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tmodel: item,\\n\\t\\t\\t\\tinitialX,\\n\\t\\t\\t\\tinitialY,\\n\\t\\t\\t};\\n\\t\\t});\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"mouseX","type":"number"},{"name":"mouseY","type":"number"},{"name":"diagramEngine","type":"DiagramEngine"}],"line":10,"jsdoctags":[{"name":"mouseX","type":"number","tagName":{"text":"param"}},{"name":"mouseY","type":"number","tagName":{"text":"param"}},{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}}]},"properties":[{"name":"moved","type":"boolean","optional":false,"description":"","line":10},{"name":"selectionModels","type":"SelectionModel[]","optional":false,"description":"","line":9},{"name":"mouseX","type":"number","optional":false,"description":"","line":2,"inheritance":{"file":"BaseAction"}},{"name":"mouseY","type":"number","optional":false,"description":"","line":3,"inheritance":{"file":"BaseAction"}},{"name":"ms","type":"number","optional":false,"description":"","line":4,"inheritance":{"file":"BaseAction"}}],"methods":[],"indexSignatures":[],"extends":"BaseAction","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"NodeModel","id":"class-NodeModel-0fe521b6a43cab49a5f3423f6f9883ca","file":"projects/ngx-diagrams/src/lib/models/node.model.ts","type":"class","sourceCode":"import { BehaviorSubject, Observable } from \'rxjs\';\\nimport { PortModel } from \'./port.model\';\\nimport { BaseModel } from \'./base.model\';\\nimport { DiagramModel } from \'./diagram.model\';\\nimport { Coords } from \'../interfaces/coords.interface\';\\nimport { DiagramEngine } from \'../services/engine.service\';\\nimport { distinctUntilChanged, map, takeUntil } from \'rxjs/operators\';\\nimport { Dimensions } from \'../interfaces/dimensions.interface\';\\nimport { ID, mapToArray } from \'../utils/tool-kit.util\';\\nimport { SerializedNodeModel } from \'../interfaces/serialization.interface\';\\n\\nexport class NodeModel<P extends PortModel = PortModel> extends BaseModel<DiagramModel> {\\n\\tprivate readonly _diagramEngine: BehaviorSubject<DiagramEngine>;\\n\\tprivate readonly _extras: BehaviorSubject<{ [s: string]: any }>;\\n\\tprivate readonly _ports: BehaviorSubject<{ [s: string]: P }>;\\n\\tprivate readonly _coords: BehaviorSubject<Coords>;\\n\\tprivate readonly _dimensions: BehaviorSubject<Dimensions>;\\n\\tprivate readonly extras$: Observable<{ [s: string]: any }>;\\n\\tprivate readonly ports$: Observable<{ [s: string]: P }>;\\n\\tprivate readonly coords$: Observable<Coords>;\\n\\tprivate readonly dimensions$: Observable<Dimensions>;\\n\\n\\tconstructor(\\n\\t\\tnodeType: string = \'default\',\\n\\t\\tid?: string,\\n\\t\\textras: { [s: string]: any } = {},\\n\\t\\tx: number = 0,\\n\\t\\ty: number = 0,\\n\\t\\twidth: number = 0,\\n\\t\\theight: number = 0,\\n\\t\\tlogPrefix = \'[Node]\'\\n\\t) {\\n\\t\\tsuper(nodeType, id, logPrefix);\\n\\t\\tthis._extras = new BehaviorSubject(extras);\\n\\t\\tthis._ports = new BehaviorSubject({});\\n\\t\\tthis._dimensions = new BehaviorSubject<Dimensions>({ width, height });\\n\\t\\tthis._diagramEngine = new BehaviorSubject<DiagramEngine>(null);\\n\\t\\tthis._coords = new BehaviorSubject<Coords>({ x, y });\\n\\t\\tthis.extras$ = this._extras.asObservable();\\n\\t\\tthis.ports$ = this._ports.asObservable();\\n\\t\\tthis.coords$ = this._coords.asObservable();\\n\\t\\tthis.dimensions$ = this._dimensions.asObservable();\\n\\t}\\n\\n\\tgetDiagramEngine() {\\n\\t\\treturn this._diagramEngine.getValue();\\n\\t}\\n\\n\\tselectDiagramEngine() {\\n\\t\\treturn this._diagramEngine.asObservable();\\n\\t}\\n\\n\\tsetDiagramEngine(diagramEngine: DiagramEngine) {\\n\\t\\tthis._diagramEngine.next(diagramEngine);\\n\\t}\\n\\n\\tgetCoords(): Coords {\\n\\t\\treturn this._coords.getValue();\\n\\t}\\n\\n\\tsetCoords({ x, y }: Coords) {\\n\\t\\tconst { x: oldX, y: oldY } = this.getCoords();\\n\\n\\t\\tObject.values(this._ports.getValue()).forEach(port => {\\n\\t\\t\\tObject.values(port.getLinks()).forEach(link => {\\n\\t\\t\\t\\tconst point = link.getPointForPort(port);\\n\\t\\t\\t\\tconst { x: pointX, y: pointY } = point.getCoords();\\n\\t\\t\\t\\tpoint.setCoords({ x: pointX + x - oldX, y: pointY + y - oldY });\\n\\t\\t\\t});\\n\\t\\t});\\n\\n\\t\\tthis._coords.next({ x, y });\\n\\t}\\n\\n\\tserialize(): SerializedNodeModel {\\n\\t\\tconst serializedPorts = Object.values(this.getPorts()).map((port: P) => port.serialize());\\n\\t\\treturn {\\n\\t\\t\\t...super.serialize(),\\n\\t\\t\\tnodeType: this.getType(),\\n\\t\\t\\textras: this.getExtras(),\\n\\t\\t\\twidth: this.getWidth(),\\n\\t\\t\\theight: this.getHeight(),\\n\\t\\t\\t...this.getCoords(),\\n\\t\\t\\tports: serializedPorts,\\n\\t\\t};\\n\\t}\\n\\n\\t// TODO: implement better transition on auto arrange!\\n\\ttransitionToCoords({ x, y }: Coords) {\\n\\t\\t// const transitionCompleted = new ReplaySubject(1);\\n\\t\\t// let { x: oldX, y: oldY } = this.getCoords();\\n\\t\\t// console.log(x, y, oldX, oldY);\\n\\t\\t// interval(0)\\n\\t\\t// \\t.pipe(takeUntil(transitionCompleted))\\n\\t\\t// \\t.subscribe(\\n\\t\\t// \\t\\t() => {\\n\\t\\t// \\t\\t\\tif (oldX < x) {\\n\\t\\t// \\t\\t\\t\\toldX++;\\n\\t\\t// \\t\\t\\t} else if (oldX > x) {\\n\\t\\t// \\t\\t\\t\\toldX--;\\n\\t\\t// \\t\\t\\t}\\n\\t\\t// \\t\\t\\tif (y > oldY) {\\n\\t\\t// \\t\\t\\t\\toldY++;\\n\\t\\t// \\t\\t\\t} else if (y < oldY) {\\n\\t\\t// \\t\\t\\t\\toldY--;\\n\\t\\t// \\t\\t\\t}\\n\\t\\t// \\t\\t\\tObject.values(this._ports.getValue()).forEach(port => {\\n\\t\\t// \\t\\t\\t\\tObject.values(port.getLinks()).forEach(link => {\\n\\t\\t// \\t\\t\\t\\t\\tconst point = link.getPointForPort(port);\\n\\t\\t// \\t\\t\\t\\t\\tconst { x: pointX, y: pointY } = point.getCoords();\\n\\t\\t// \\t\\t\\t\\t\\tpoint.setCoords({ x: pointX + x - oldX, y: pointY + y - oldY });\\n\\t\\t// \\t\\t\\t\\t});\\n\\t\\t// \\t\\t\\t});\\n\\t\\t// \\t\\t\\tthis._coords.next({ x: oldX, y: oldY });\\n\\t\\t// \\t\\t\\tif (x === oldX && y === oldY) {\\n\\t\\t// \\t\\t\\t\\ttransitionCompleted.next(true);\\n\\t\\t// \\t\\t\\t\\ttransitionCompleted.complete();\\n\\t\\t// \\t\\t\\t}\\n\\t\\t// \\t\\t},\\n\\t\\t// \\t\\terr => {\\n\\t\\t// \\t\\t\\tconsole.error(err);\\n\\t\\t// \\t\\t},\\n\\t\\t// \\t\\t() => {\\n\\t\\t// \\t\\t\\tconsole.log(\'finished transition\');\\n\\t\\t// \\t\\t}\\n\\t\\t// \\t);\\n\\t}\\n\\n\\t// TODO: override selectionChanges and replace this with it (convert to rx)\\n\\tgetSelectedEntities() {\\n\\t\\tlet entities = super.getSelectedEntities();\\n\\n\\t\\t// add the points of each link that are selected here\\n\\t\\tif (this.getSelected()) {\\n\\t\\t\\tObject.values(this._ports.getValue()).forEach(port => {\\n\\t\\t\\t\\tconst links = Object.values(port.getLinks());\\n\\t\\t\\t\\tentities = entities.concat(\\n\\t\\t\\t\\t\\tlinks.map(link => {\\n\\t\\t\\t\\t\\t\\treturn link.getPointForPort(port);\\n\\t\\t\\t\\t\\t})\\n\\t\\t\\t\\t);\\n\\t\\t\\t});\\n\\t\\t}\\n\\n\\t\\tthis.log(\'selectedEntities\', entities);\\n\\t\\treturn entities;\\n\\t}\\n\\n\\t// TODO: map to BaseEvent\\n\\tcoordsChanges(): Observable<Coords> {\\n\\t\\treturn this.coords$.pipe(takeUntil(this.onEntityDestroy()));\\n\\t}\\n\\n\\tselectCoords(): Observable<Coords> {\\n\\t\\treturn this.coords$.pipe(takeUntil(this.onEntityDestroy()), distinctUntilChanged());\\n\\t}\\n\\n\\tselectX(): Observable<number> {\\n\\t\\treturn this.selectCoords().pipe(\\n\\t\\t\\tmap(c => c.x),\\n\\t\\t\\tthis.withLog(\'selectX\'),\\n\\t\\t\\tdistinctUntilChanged()\\n\\t\\t);\\n\\t}\\n\\n\\tselectY(): Observable<number> {\\n\\t\\treturn this.selectCoords().pipe(\\n\\t\\t\\tmap(c => c.y),\\n\\t\\t\\tthis.withLog(\'selectY\'),\\n\\t\\t\\tdistinctUntilChanged()\\n\\t\\t);\\n\\t}\\n\\n\\t/**\\n\\t * Assign a port to the node and set the node as its getParent\\n\\t * @returns the inserted port\\n\\t */\\n\\taddPort(port: P): P {\\n\\t\\tport.setParent(this);\\n\\t\\tthis._ports.next({ ...this._ports.getValue(), [port.id]: port });\\n\\t\\treturn port;\\n\\t}\\n\\n\\tremovePort(port: P): string {\\n\\t\\tconst updatedPorts = this._ports.getValue();\\n\\n\\t\\tdelete updatedPorts[port.id];\\n\\t\\tthis._ports.next({ ...updatedPorts });\\n\\n\\t\\tport.destroy();\\n\\n\\t\\treturn port.id;\\n\\t}\\n\\n\\tgetPort(id: ID): P {\\n\\t\\treturn this._ports.value[id];\\n\\t}\\n\\n\\tselectPorts(selector?: () => boolean | ID | ID[]): Observable<P[]> {\\n\\t\\t// TODO: implement selector\\n\\t\\t// TODO: create coerce func\\n\\t\\treturn this.ports$.pipe(\\n\\t\\t\\ttakeUntil(this.onEntityDestroy()),\\n\\t\\t\\tdistinctUntilChanged(),\\n\\t\\t\\tmap(ports => mapToArray(ports)),\\n\\t\\t\\tthis.withLog(\'selectPorts\')\\n\\t\\t);\\n\\t}\\n\\n\\tgetPorts(ids?: ID[]): { [s: string]: P | P[] } {\\n\\t\\treturn this._ports.getValue();\\n\\t}\\n\\n\\tsetDimensions({ width, height }: Dimensions) {\\n\\t\\tthis._dimensions.next({ width, height });\\n\\t}\\n\\n\\tgetDimensions(): Dimensions {\\n\\t\\treturn this._dimensions.getValue();\\n\\t}\\n\\n\\t// TODO: return BaseEvent extension\\n\\tdimensionChanges(): Observable<Dimensions> {\\n\\t\\treturn this.dimensions$.pipe(takeUntil(this.onEntityDestroy()), distinctUntilChanged(), this.withLog(\'DimensionChanges\'));\\n\\t}\\n\\n\\tgetHeight(): number {\\n\\t\\treturn this._dimensions.getValue().height;\\n\\t}\\n\\n\\tsetHeight(height: number) {\\n\\t\\treturn this._dimensions.next({ width: this.getWidth(), height });\\n\\t}\\n\\n\\tgetWidth(): number {\\n\\t\\treturn this._dimensions.getValue().width;\\n\\t}\\n\\n\\tsetWidth(width: number) {\\n\\t\\treturn this._dimensions.next({ width, height: this.getHeight() });\\n\\t}\\n\\n\\tselectWidth(): Observable<number> {\\n\\t\\treturn this.dimensions$.pipe(\\n\\t\\t\\ttakeUntil(this.onEntityDestroy()),\\n\\t\\t\\tmap(d => d.width),\\n\\t\\t\\tdistinctUntilChanged(),\\n\\t\\t\\tthis.withLog(\'selectWidth\')\\n\\t\\t);\\n\\t}\\n\\n\\tselectHeight(): Observable<number> {\\n\\t\\treturn this.dimensions$.pipe(\\n\\t\\t\\ttakeUntil(this.onEntityDestroy()),\\n\\t\\t\\tmap(d => d.height),\\n\\t\\t\\tdistinctUntilChanged(),\\n\\t\\t\\tthis.withLog(\'selectHeight\')\\n\\t\\t);\\n\\t}\\n\\n\\tsetExtras(extras: any) {\\n\\t\\tthis._extras.next(extras);\\n\\t}\\n\\n\\tgetExtras() {\\n\\t\\treturn this._extras.getValue();\\n\\t}\\n\\n\\tselectExtras<E = any>(selector?: (extra: E) => E[keyof E] | string | string[]) {\\n\\t\\t// TODO: impl selector\\n\\t\\treturn this.extras$.pipe(takeUntil(this.onEntityDestroy()), distinctUntilChanged());\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"nodeType","type":"string","defaultValue":"\'default\'"},{"name":"id","type":"string","optional":true},{"name":"extras","type":"literal type","defaultValue":"{}"},{"name":"x","type":"number","defaultValue":"0"},{"name":"y","type":"number","defaultValue":"0"},{"name":"width","type":"number","defaultValue":"0"},{"name":"height","type":"number","defaultValue":"0"},{"name":"logPrefix","type":"string","defaultValue":"\'[Node]\'"}],"line":21,"jsdoctags":[{"name":"nodeType","type":"string","defaultValue":"\'default\'","tagName":{"text":"param"}},{"name":"id","type":"string","optional":true,"tagName":{"text":"param"}},{"name":"extras","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"x","type":"number","defaultValue":"0","tagName":{"text":"param"}},{"name":"y","type":"number","defaultValue":"0","tagName":{"text":"param"}},{"name":"width","type":"number","defaultValue":"0","tagName":{"text":"param"}},{"name":"height","type":"number","defaultValue":"0","tagName":{"text":"param"}},{"name":"logPrefix","type":"string","defaultValue":"\'[Node]\'","tagName":{"text":"param"}}]},"properties":[{"name":"_coords","type":"BehaviorSubject<Coords>","optional":false,"description":"","line":16,"modifierKind":[112,132]},{"name":"_diagramEngine","type":"BehaviorSubject<DiagramEngine>","optional":false,"description":"","line":13,"modifierKind":[112,132]},{"name":"_dimensions","type":"BehaviorSubject<Dimensions>","optional":false,"description":"","line":17,"modifierKind":[112,132]},{"name":"_extras","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":14,"modifierKind":[112,132]},{"name":"_ports","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":15,"modifierKind":[112,132]},{"name":"coords$","type":"Observable<Coords>","optional":false,"description":"","line":20,"modifierKind":[112,132]},{"name":"dimensions$","type":"Observable<Dimensions>","optional":false,"description":"","line":21,"modifierKind":[112,132]},{"name":"extras$","type":"Observable<literal type>","optional":false,"description":"","line":18,"modifierKind":[112,132]},{"name":"ports$","type":"Observable<literal type>","optional":false,"description":"","line":19,"modifierKind":[112,132]},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"addPort","args":[{"name":"port","type":"P"}],"optional":false,"returnType":"P","typeParameters":[],"line":178,"description":"<p>Assign a port to the node and set the node as its getParent</p>\\n","jsdoctags":[{"name":"port","type":"P","tagName":{"text":"param"}},{"tagName":{"pos":5309,"end":5316,"flags":0,"escapedText":"returns"},"comment":"<p>the inserted port</p>\\n"}]},{"name":"coordsChanges","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":150},{"name":"dimensionChanges","args":[],"optional":false,"returnType":"Observable<Dimensions>","typeParameters":[],"line":223},{"name":"getCoords","args":[],"optional":false,"returnType":"Coords","typeParameters":[],"line":57},{"name":"getDiagramEngine","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":45},{"name":"getDimensions","args":[],"optional":false,"returnType":"Dimensions","typeParameters":[],"line":218},{"name":"getExtras","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":265},{"name":"getHeight","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":227},{"name":"getPort","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"P","typeParameters":[],"line":195,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}]},{"name":"getPorts","args":[{"name":"ids","type":"ID[]","optional":true}],"optional":false,"returnType":"literal type","typeParameters":[],"line":210,"jsdoctags":[{"name":"ids","type":"ID[]","optional":true,"tagName":{"text":"param"}}]},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":130},{"name":"getWidth","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":235},{"name":"removePort","args":[{"name":"port","type":"P"}],"optional":false,"returnType":"string","typeParameters":[],"line":184,"jsdoctags":[{"name":"port","type":"P","tagName":{"text":"param"}}]},{"name":"selectCoords","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":154},{"name":"selectDiagramEngine","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":49},{"name":"selectExtras","args":[{"name":"selector","type":"function","optional":true,"function":[{"name":"extra","type":"E"}]}],"optional":false,"returnType":"any","typeParameters":["E"],"line":269,"jsdoctags":[{"name":"selector","type":"function","optional":true,"function":[{"name":"extra","type":"E"}],"tagName":{"text":"param"}}]},{"name":"selectHeight","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":252},{"name":"selectPorts","args":[{"name":"selector","type":"function","optional":true,"function":[]}],"optional":false,"returnType":"Observable<P[]>","typeParameters":[],"line":199,"jsdoctags":[{"name":"selector","type":"function","optional":true,"function":[],"tagName":{"text":"param"}}]},{"name":"selectWidth","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":243},{"name":"selectX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":158},{"name":"selectY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":166},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedNodeModel","typeParameters":[],"line":75},{"name":"setCoords","args":[{"type":"Coords"}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}]},{"name":"setDiagramEngine","args":[{"name":"diagramEngine","type":"DiagramEngine"}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}}]},{"name":"setDimensions","args":[{"type":"Dimensions"}],"optional":false,"returnType":"void","typeParameters":[],"line":214,"jsdoctags":[{"type":"Dimensions","tagName":{"text":"param"}}]},{"name":"setExtras","args":[{"name":"extras","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":261,"jsdoctags":[{"name":"extras","type":"any","tagName":{"text":"param"}}]},{"name":"setHeight","args":[{"name":"height","type":"number"}],"optional":false,"returnType":"any","typeParameters":[],"line":231,"jsdoctags":[{"name":"height","type":"number","tagName":{"text":"param"}}]},{"name":"setWidth","args":[{"name":"width","type":"number"}],"optional":false,"returnType":"any","typeParameters":[],"line":239,"jsdoctags":[{"name":"width","type":"number","tagName":{"text":"param"}}]},{"name":"transitionToCoords","args":[{"type":"Coords"}],"optional":false,"returnType":"void","typeParameters":[],"line":89,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}]},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"BaseModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"PaintedEvent","id":"class-PaintedEvent-a1b25ab2b6c79a87bcb302a83d8d1347","file":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","sourceCode":"import { ID, UID } from \'../utils/tool-kit.util\';\\nimport { BaseEntity } from \'../base.entity\';\\n\\n// region events\\nexport class BaseEvent<T extends BaseEntity> {\\n\\tentity: T;\\n\\tentityId: ID;\\n\\tstopPropagation: () => any;\\n\\tfiring: boolean;\\n\\tid: ID;\\n\\tpropogate: boolean;\\n\\n\\tconstructor(entity: T, options?: any) {\\n\\t\\tthis.id = UID();\\n\\t\\tthis.entity = entity;\\n\\t\\tthis.entityId = entity.id;\\n\\t\\tthis.firing = true;\\n\\t\\tthis.stopPropagation = () => (this.firing = false);\\n\\t\\tthis.propogate = options ? options.propagate : null;\\n\\t}\\n}\\nexport class LockEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tlocked: boolean;\\n\\n\\tconstructor(entity: T, locked: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.locked = locked;\\n\\t}\\n}\\nexport class ParentChangeEvent<P extends BaseEntity = BaseEntity, T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tparent: P;\\n\\n\\tconstructor(entity: T, parent: P) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.parent = parent;\\n\\t}\\n}\\nexport class SelectionEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisSelected: boolean;\\n\\n\\tconstructor(entity: T, selected: boolean) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isSelected = selected;\\n\\t}\\n}\\nexport class PaintedEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisPainted: boolean;\\n\\n\\tconstructor(entity: T, painted: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isPainted = painted;\\n\\t}\\n}\\n// endregion\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"entity","type":"T"},{"name":"painted","type":"boolean","defaultValue":"false"}],"line":47,"jsdoctags":[{"name":"entity","type":"T","tagName":{"text":"param"}},{"name":"painted","type":"boolean","defaultValue":"false","tagName":{"text":"param"}}]},"properties":[{"name":"isPainted","type":"boolean","optional":false,"description":"","line":47},{"name":"entity","type":"T","optional":false,"description":"","line":6,"inheritance":{"file":"BaseEvent"}},{"name":"entityId","type":"ID","optional":false,"description":"","line":7,"inheritance":{"file":"BaseEvent"}},{"name":"firing","type":"boolean","optional":false,"description":"","line":9,"inheritance":{"file":"BaseEvent"}},{"name":"id","type":"ID","optional":false,"description":"","line":10,"inheritance":{"file":"BaseEvent"}},{"name":"propogate","type":"boolean","optional":false,"description":"","line":11,"inheritance":{"file":"BaseEvent"}},{"name":"stopPropagation","type":"function","optional":false,"description":"","line":8,"inheritance":{"file":"BaseEvent"}}],"methods":[],"indexSignatures":[],"extends":"BaseEvent","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"ParentChangeEvent","id":"class-ParentChangeEvent-a1b25ab2b6c79a87bcb302a83d8d1347","file":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","sourceCode":"import { ID, UID } from \'../utils/tool-kit.util\';\\nimport { BaseEntity } from \'../base.entity\';\\n\\n// region events\\nexport class BaseEvent<T extends BaseEntity> {\\n\\tentity: T;\\n\\tentityId: ID;\\n\\tstopPropagation: () => any;\\n\\tfiring: boolean;\\n\\tid: ID;\\n\\tpropogate: boolean;\\n\\n\\tconstructor(entity: T, options?: any) {\\n\\t\\tthis.id = UID();\\n\\t\\tthis.entity = entity;\\n\\t\\tthis.entityId = entity.id;\\n\\t\\tthis.firing = true;\\n\\t\\tthis.stopPropagation = () => (this.firing = false);\\n\\t\\tthis.propogate = options ? options.propagate : null;\\n\\t}\\n}\\nexport class LockEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tlocked: boolean;\\n\\n\\tconstructor(entity: T, locked: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.locked = locked;\\n\\t}\\n}\\nexport class ParentChangeEvent<P extends BaseEntity = BaseEntity, T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tparent: P;\\n\\n\\tconstructor(entity: T, parent: P) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.parent = parent;\\n\\t}\\n}\\nexport class SelectionEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisSelected: boolean;\\n\\n\\tconstructor(entity: T, selected: boolean) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isSelected = selected;\\n\\t}\\n}\\nexport class PaintedEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisPainted: boolean;\\n\\n\\tconstructor(entity: T, painted: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isPainted = painted;\\n\\t}\\n}\\n// endregion\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"entity","type":"T"},{"name":"parent","type":"P"}],"line":31,"jsdoctags":[{"name":"entity","type":"T","tagName":{"text":"param"}},{"name":"parent","type":"P","tagName":{"text":"param"}}]},"properties":[{"name":"parent","type":"P","optional":false,"description":"","line":31},{"name":"entity","type":"T","optional":false,"description":"","line":6,"inheritance":{"file":"BaseEvent"}},{"name":"entityId","type":"ID","optional":false,"description":"","line":7,"inheritance":{"file":"BaseEvent"}},{"name":"firing","type":"boolean","optional":false,"description":"","line":9,"inheritance":{"file":"BaseEvent"}},{"name":"id","type":"ID","optional":false,"description":"","line":10,"inheritance":{"file":"BaseEvent"}},{"name":"propogate","type":"boolean","optional":false,"description":"","line":11,"inheritance":{"file":"BaseEvent"}},{"name":"stopPropagation","type":"function","optional":false,"description":"","line":8,"inheritance":{"file":"BaseEvent"}}],"methods":[],"indexSignatures":[],"extends":"BaseEvent","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"PathFinding","id":"class-PathFinding-60d09db416b70c03f4a88e04583abfc1","file":"projects/ngx-diagrams/src/lib/utils/path-finding.util.ts","type":"class","sourceCode":"export const ROUTING_SCALING_FACTOR = 5;\\n\\nexport class PathFinding {\\n\\t// private pathFinderInstance;\\n\\t// constructor(private diagramEngine: DiagramEngine) {\\n\\t//     this.pathFinderInstance = new PF.JumpPointFinder({\\n\\t//         heuristic: PF.Heuristic.manhattan,\\n\\t//         diagonalMovement: PF.DiagonalMovement.Never\\n\\t//     });\\n\\t// }\\n\\t/**\\n\\t * Taking as argument a fully unblocked walking matrix, this method\\n\\t * finds a direct path from point A to B.\\n\\t */\\n\\t// calculateDirectPath(\\n\\t//     from: {\\n\\t//         x: number;\\n\\t//         y: number;\\n\\t//     },\\n\\t//     to: {\\n\\t//         x: number;\\n\\t//         y: number;\\n\\t//     }\\n\\t// ): number[][] {\\n\\t//     const matrix = this.diagramEngine.getCanvasMatrix();\\n\\t//     const grid = new PF.Grid(matrix);\\n\\t//     return this.pathFinderInstance.findPath(\\n\\t//         this.diagramEngine.translateRoutingX(Math.floor(from.x / ROUTING_SCALING_FACTOR)),\\n\\t//         this.diagramEngine.translateRoutingY(Math.floor(from.y / ROUTING_SCALING_FACTOR)),\\n\\t//         this.diagramEngine.translateRoutingX(Math.floor(to.x / ROUTING_SCALING_FACTOR)),\\n\\t//         this.diagramEngine.translateRoutingY(Math.floor(to.y / ROUTING_SCALING_FACTOR)),\\n\\t//         grid\\n\\t//     );\\n\\t// }\\n\\t/**\\n\\t * Using @link{#calculateDirectPath}\'s result as input, we here\\n\\t * determine the first walkable point found in the matrix that includes\\n\\t * blocked paths.\\n\\t */\\n\\t// calculateLinkStartEndCoords(\\n\\t//     matrix: number[][],\\n\\t//     path: number[][]\\n\\t// ): {\\n\\t//     start: {\\n\\t//         x: number;\\n\\t//         y: number;\\n\\t//     };\\n\\t//     end: {\\n\\t//         x: number;\\n\\t//         y: number;\\n\\t//     };\\n\\t//     pathToStart: number[][];\\n\\t//     pathToEnd: number[][];\\n\\t// } {\\n\\t//     const startIndex = path.findIndex(point => matrix[point[1]][point[0]] === 0);\\n\\t//     const endIndex =\\n\\t//         path.length -\\n\\t//         1 -\\n\\t//         path\\n\\t//             .slice()\\n\\t//             .reverse()\\n\\t//             .findIndex(point => matrix[point[1]][point[0]] === 0);\\n\\t//     // are we trying to create a path exclusively through blocked areas?\\n\\t//     // if so, let\'s fallback to the linear routing\\n\\t//     if (startIndex === -1 || endIndex === -1) {\\n\\t//         return undefined;\\n\\t//     }\\n\\t//     const pathToStart = path.slice(0, startIndex);\\n\\t//     const pathToEnd = path.slice(endIndex);\\n\\t//     return {\\n\\t//         start: {\\n\\t//             x: path[startIndex][0],\\n\\t//             y: path[startIndex][1]\\n\\t//         },\\n\\t//         end: {\\n\\t//             x: path[endIndex][0],\\n\\t//             y: path[endIndex][1]\\n\\t//         },\\n\\t//         pathToStart,\\n\\t//         pathToEnd\\n\\t//     };\\n\\t// }\\n\\t/**\\n\\t * Puts everything together: merges the paths from/to the centre of the ports,\\n\\t * with the path calculated around other elements.\\n\\t */\\n\\t// calculateDynamicPath(\\n\\t//     routingMatrix: number[][],\\n\\t//     start: {\\n\\t//         x: number;\\n\\t//         y: number;\\n\\t//     },\\n\\t//     end: {\\n\\t//         x: number;\\n\\t//         y: number;\\n\\t//     },\\n\\t//     pathToStart: number[][],\\n\\t//     pathToEnd: number[][]\\n\\t// ) {\\n\\t//     // generate the path based on the matrix with obstacles\\n\\t//     const grid = new PF.Grid(routingMatrix);\\n\\t//     const dynamicPath = this.pathFinderInstance.findPath(start.x, start.y, end.x, end.y, grid);\\n\\t//     // aggregate everything to have the calculated path ready for rendering\\n\\t//     const pathCoords = pathToStart\\n\\t//         .concat(dynamicPath, pathToEnd)\\n\\t//         .map(coords => [\\n\\t//             this.diagramEngine.translateRoutingX(coords[0], true),\\n\\t//             this.diagramEngine.translateRoutingY(coords[1], true)\\n\\t//         ]);\\n\\t//     return PF.Util.compressPath(pathCoords);\\n\\t// }\\n}\\n","properties":[],"methods":[],"indexSignatures":[],"inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"PointModel","id":"class-PointModel-fce88e2649f3eaf473363b19ce388a6f","file":"projects/ngx-diagrams/src/lib/models/point.model.ts","type":"class","sourceCode":"import { BaseModel } from \'./base.model\';\\nimport { LinkModel } from \'./link.model\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\nimport { Coords } from \'../interfaces/coords.interface\';\\nimport { distinctUntilChanged, map, takeUntil } from \'rxjs/operators\';\\nimport { SerializedPointModel } from \'../interfaces/serialization.interface\';\\n\\nexport class PointModel extends BaseModel<LinkModel> {\\n\\tprivate readonly _coords: BehaviorSubject<Coords>;\\n\\tprivate readonly coords$: Observable<Coords>;\\n\\n\\tconstructor(link: LinkModel, { x, y }: Coords) {\\n\\t\\tsuper(link.getType());\\n\\t\\tthis._coords = new BehaviorSubject<Coords>({ x, y });\\n\\t\\tthis.coords$ = this._coords.asObservable();\\n\\t\\tthis.setParent(link);\\n\\t}\\n\\n\\tserialize(): SerializedPointModel {\\n\\t\\treturn {\\n\\t\\t\\t...super.serialize(),\\n\\t\\t\\tcoords: this.getCoords(),\\n\\t\\t};\\n\\t}\\n\\n\\tisConnectedToPort() {\\n\\t\\treturn this.getParent().getPortForPoint(this) !== null;\\n\\t}\\n\\n\\tgetLink(): LinkModel {\\n\\t\\treturn this.getParent();\\n\\t}\\n\\n\\tdestroy() {\\n\\t\\tif (this.getParent) {\\n\\t\\t\\tthis.getParent().removePoint(this);\\n\\t\\t}\\n\\n\\t\\tsuper.destroy();\\n\\t}\\n\\n\\tsetCoords(newCoords: Partial<Coords>) {\\n\\t\\tthis._coords.next({ ...this._coords.getValue(), ...newCoords });\\n\\t}\\n\\n\\tselectCoords(): Observable<Coords> {\\n\\t\\treturn this.coords$.pipe(takeUntil(this.onEntityDestroy()), distinctUntilChanged());\\n\\t}\\n\\n\\tgetCoords(): Coords {\\n\\t\\treturn this._coords.getValue();\\n\\t}\\n\\n\\tselectX(): Observable<number> {\\n\\t\\treturn this.selectCoords().pipe(\\n\\t\\t\\tmap(c => c.x),\\n\\t\\t\\tdistinctUntilChanged()\\n\\t\\t);\\n\\t}\\n\\n\\tselectY(): Observable<number> {\\n\\t\\treturn this.selectCoords().pipe(\\n\\t\\t\\tmap(c => c.y),\\n\\t\\t\\tdistinctUntilChanged()\\n\\t\\t);\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"link","type":"LinkModel"},{"type":"Coords"}],"line":10,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}},{"type":"Coords","tagName":{"text":"param"}}]},"properties":[{"name":"_coords","type":"BehaviorSubject<Coords>","optional":false,"description":"","line":9,"modifierKind":[112,132]},{"name":"coords$","type":"Observable<Coords>","optional":false,"description":"","line":10,"modifierKind":[112,132]},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":34},{"name":"getCoords","args":[],"optional":false,"returnType":"Coords","typeParameters":[],"line":50},{"name":"getLink","args":[],"optional":false,"returnType":"LinkModel","typeParameters":[],"line":30},{"name":"isConnectedToPort","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":26},{"name":"selectCoords","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":46},{"name":"selectX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":54},{"name":"selectY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":61},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedPointModel","typeParameters":[],"line":19},{"name":"setCoords","args":[{"name":"newCoords","type":"Partial<Coords>"}],"optional":false,"returnType":"void","typeParameters":[],"line":42,"jsdoctags":[{"name":"newCoords","type":"Partial<Coords>","tagName":{"text":"param"}}]},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"BaseModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"PortModel","id":"class-PortModel-b433f8a93297fa4fd8ec985653840a3e","file":"projects/ngx-diagrams/src/lib/models/port.model.ts","type":"class","sourceCode":"import { BaseModel } from \'./base.model\';\\nimport { NodeModel } from \'./node.model\';\\nimport { LinkModel } from \'./link.model\';\\nimport { BehaviorSubject, Observable } from \'rxjs\';\\n\\nexport class PortModel extends BaseModel<NodeModel> {\\n\\tprivate name: string;\\n\\tprivate links$: BehaviorSubject<{ [id: string]: LinkModel }>;\\n\\tprivate maximumLinks: number;\\n\\tprivate linkType: string;\\n\\n\\tprivate x$: BehaviorSubject<number>;\\n\\tprivate y$: BehaviorSubject<number>;\\n\\tprivate magnetic$: BehaviorSubject<boolean>;\\n\\tprivate width$: BehaviorSubject<number>;\\n\\tprivate height$: BehaviorSubject<number>;\\n\\tprivate canCreateLinks$: BehaviorSubject<boolean>;\\n\\n\\tconstructor(name: string, type?: string, id?: string, maximumLinks?: number, linkType?: string, magnetic: boolean = true) {\\n\\t\\tsuper(type, id);\\n\\t\\tthis.name = name;\\n\\t\\tthis.magnetic$ = new BehaviorSubject(magnetic);\\n\\t\\tthis.links$ = new BehaviorSubject({});\\n\\t\\tthis.maximumLinks = maximumLinks;\\n\\t\\tthis.x$ = new BehaviorSubject(0);\\n\\t\\tthis.y$ = new BehaviorSubject(0);\\n\\t\\tthis.height$ = new BehaviorSubject(0);\\n\\t\\tthis.width$ = new BehaviorSubject(0);\\n\\t\\tthis.canCreateLinks$ = new BehaviorSubject(true);\\n\\t\\tthis.linkType = linkType;\\n\\t}\\n\\n\\tserialize() {\\n\\t\\treturn {\\n\\t\\t\\t...super.serialize(),\\n\\t\\t\\tname: this.getName(),\\n\\t\\t\\tlinkType: this.getLinkType(),\\n\\t\\t\\tmaximumLinks: this.getMaximumLinks(),\\n\\t\\t\\ttype: this.getType(),\\n\\t\\t\\tmagnetic: this.getMagnetic(),\\n\\t\\t\\theight: this.getHeight(),\\n\\t\\t\\twidth: this.getWidth(),\\n\\t\\t\\tcanCreateLinks: this.getCanCreateLinks(),\\n\\t\\t\\t...this.getCoords(),\\n\\t\\t};\\n\\t}\\n\\n\\tgetNode() {\\n\\t\\treturn this.getParent();\\n\\t}\\n\\n\\tgetName() {\\n\\t\\treturn this.name;\\n\\t}\\n\\n\\tgetCanCreateLinks(): boolean {\\n\\t\\tconst numberOfLinks: number = Object.keys(this.links$.getValue()).length;\\n\\n\\t\\tif (this.maximumLinks && numberOfLinks >= this.maximumLinks) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\treturn this.canCreateLinks$.getValue();\\n\\t}\\n\\n\\tgetCoords() {\\n\\t\\treturn { x: this.getX(), y: this.getY() };\\n\\t}\\n\\n\\tselectCanCreateLinks() {\\n\\t\\treturn this.canCreateLinks$.asObservable();\\n\\t}\\n\\n\\tsetCanCreateLinks(value: boolean) {\\n\\t\\tthis.canCreateLinks$.next(value);\\n\\t}\\n\\n\\tgetMagnetic() {\\n\\t\\treturn this.magnetic$.getValue();\\n\\t}\\n\\n\\tselectMagnetic() {\\n\\t\\treturn this.magnetic$.asObservable();\\n\\t}\\n\\n\\tsetMagnetic(magnetic: boolean) {\\n\\t\\tthis.magnetic$.next(magnetic);\\n\\t}\\n\\n\\tselectX(): Observable<number> {\\n\\t\\treturn this.x$.asObservable();\\n\\t}\\n\\n\\tselectY(): Observable<number> {\\n\\t\\treturn this.y$.asObservable();\\n\\t}\\n\\n\\tgetY() {\\n\\t\\treturn this.y$.getValue();\\n\\t}\\n\\n\\tgetX() {\\n\\t\\treturn this.x$.getValue();\\n\\t}\\n\\n\\tgetHeight() {\\n\\t\\treturn this.height$.getValue();\\n\\t}\\n\\n\\tgetWidth() {\\n\\t\\treturn this.width$.getValue();\\n\\t}\\n\\n\\tgetMaximumLinks(): number {\\n\\t\\treturn this.maximumLinks;\\n\\t}\\n\\n\\tsetMaximumLinks(maximumLinks: number) {\\n\\t\\tthis.maximumLinks = maximumLinks;\\n\\t}\\n\\n\\tgetLinkType() {\\n\\t\\treturn this.linkType;\\n\\t}\\n\\n\\tsetLinkType(type: string) {\\n\\t\\tthis.linkType = type;\\n\\t}\\n\\n\\tremoveLink(link: LinkModel) {\\n\\t\\tconst links = this.links$.getValue();\\n\\t\\tdelete links[link.id];\\n\\t\\tthis.links$.next({ ...links });\\n\\t}\\n\\n\\taddLink(link: LinkModel) {\\n\\t\\tthis.links$.next({ ...this.links$.value, [link.id]: link });\\n\\t}\\n\\n\\tgetLinks(): { [id: string]: LinkModel } {\\n\\t\\treturn this.links$.getValue();\\n\\t}\\n\\n\\tselectLinks(): Observable<{ [id: string]: LinkModel }> {\\n\\t\\treturn this.links$.asObservable();\\n\\t}\\n\\n\\tupdateCoords({ x, y, width, height }: { x: number; y: number; width: number; height: number }) {\\n\\t\\tthis.x$.next(x);\\n\\t\\tthis.y$.next(y);\\n\\t\\tthis.width$.next(width);\\n\\t\\tthis.height$.next(height);\\n\\t}\\n\\n\\tcanLinkToPort(port: PortModel): boolean {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tisLocked() {\\n\\t\\treturn super.getLocked();\\n\\t}\\n\\n\\tcreateLinkModel() {\\n\\t\\tif (this.getCanCreateLinks()) {\\n\\t\\t\\treturn new LinkModel();\\n\\t\\t}\\n\\t}\\n\\n\\tdestroy() {\\n\\t\\tsuper.destroy();\\n\\n\\t\\tObject.values(this.getLinks()).forEach(link => {\\n\\t\\t\\tlink.destroy();\\n\\t\\t});\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"name","type":"string"},{"name":"type","type":"string","optional":true},{"name":"id","type":"string","optional":true},{"name":"maximumLinks","type":"number","optional":true},{"name":"linkType","type":"string","optional":true},{"name":"magnetic","type":"boolean","defaultValue":"true"}],"line":17,"jsdoctags":[{"name":"name","type":"string","tagName":{"text":"param"}},{"name":"type","type":"string","optional":true,"tagName":{"text":"param"}},{"name":"id","type":"string","optional":true,"tagName":{"text":"param"}},{"name":"maximumLinks","type":"number","optional":true,"tagName":{"text":"param"}},{"name":"linkType","type":"string","optional":true,"tagName":{"text":"param"}},{"name":"magnetic","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}]},"properties":[{"name":"canCreateLinks$","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":17,"modifierKind":[112]},{"name":"height$","type":"BehaviorSubject<number>","optional":false,"description":"","line":16,"modifierKind":[112]},{"name":"links$","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":8,"modifierKind":[112]},{"name":"linkType","type":"string","optional":false,"description":"","line":10,"modifierKind":[112]},{"name":"magnetic$","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112]},{"name":"maximumLinks","type":"number","optional":false,"description":"","line":9,"modifierKind":[112]},{"name":"name","type":"string","optional":false,"description":"","line":7,"modifierKind":[112]},{"name":"width$","type":"BehaviorSubject<number>","optional":false,"description":"","line":15,"modifierKind":[112]},{"name":"x$","type":"BehaviorSubject<number>","optional":false,"description":"","line":12,"modifierKind":[112]},{"name":"y$","type":"BehaviorSubject<number>","optional":false,"description":"","line":13,"modifierKind":[112]},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methods":[{"name":"addLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}}]},{"name":"canLinkToPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":155,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}]},{"name":"createLinkModel","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":163},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169},{"name":"getCanCreateLinks","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":56},{"name":"getCoords","args":[],"optional":false,"returnType":"{ x: any; y: any; }","typeParameters":[],"line":66},{"name":"getHeight","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":106},{"name":"getLinks","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":140},{"name":"getLinkType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":122},{"name":"getMagnetic","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":78},{"name":"getMaximumLinks","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":114},{"name":"getName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":52},{"name":"getNode","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":48},{"name":"getWidth","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":110},{"name":"getX","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":102},{"name":"getY","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":98},{"name":"isLocked","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":159},{"name":"removeLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":130,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}}]},{"name":"selectCanCreateLinks","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":70},{"name":"selectLinks","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":144},{"name":"selectMagnetic","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":82},{"name":"selectX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":90},{"name":"selectY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":94},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":33},{"name":"setCanCreateLinks","args":[{"name":"value","type":"boolean"}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"jsdoctags":[{"name":"value","type":"boolean","tagName":{"text":"param"}}]},{"name":"setLinkType","args":[{"name":"type","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}]},{"name":"setMagnetic","args":[{"name":"magnetic","type":"boolean"}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"jsdoctags":[{"name":"magnetic","type":"boolean","tagName":{"text":"param"}}]},{"name":"setMaximumLinks","args":[{"name":"maximumLinks","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":118,"jsdoctags":[{"name":"maximumLinks","type":"number","tagName":{"text":"param"}}]},{"name":"updateCoords","args":[{"type":"literal type"}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"jsdoctags":[{"type":"literal type","tagName":{"text":"param"}}]},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseModel"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"indexSignatures":[],"extends":"BaseModel","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"SelectingAction","id":"class-SelectingAction-612cc156264147f5d121c4901586319e","file":"projects/ngx-diagrams/src/lib/actions/selecting.action.ts","type":"class","sourceCode":"import { BaseAction } from \'./base.action\';\\nimport { DiagramModel } from \'../models/diagram.model\';\\nimport { Coords } from \'../interfaces/coords.interface\';\\n\\nexport class SelectingAction extends BaseAction {\\n\\tmouseX2: number;\\n\\tmouseY2: number;\\n\\n\\tdimensions: {\\n\\t\\ttop: number;\\n\\t\\tleft: number;\\n\\t\\twidth: number;\\n\\t\\theight: number;\\n\\t\\tright: number;\\n\\t\\tbottom: number;\\n\\t};\\n\\n\\tconstructor(mouseX: number, mouseY: number) {\\n\\t\\tsuper(mouseX, mouseY);\\n\\t\\tthis.mouseX2 = mouseX;\\n\\t\\tthis.mouseY2 = mouseY;\\n\\t}\\n\\n\\tgetBoxDimensions() {\\n\\t\\tthis.dimensions = {\\n\\t\\t\\tleft: this.mouseX2 > this.mouseX ? this.mouseX : this.mouseX2,\\n\\t\\t\\ttop: this.mouseY2 > this.mouseY ? this.mouseY : this.mouseY2,\\n\\t\\t\\twidth: Math.abs(this.mouseX2 - this.mouseX),\\n\\t\\t\\theight: Math.abs(this.mouseY2 - this.mouseY),\\n\\t\\t\\tright: this.mouseX2 < this.mouseX ? this.mouseX : this.mouseX2,\\n\\t\\t\\tbottom: this.mouseY2 < this.mouseY ? this.mouseY : this.mouseY2\\n\\t\\t};\\n\\t\\treturn this.dimensions;\\n\\t}\\n\\n\\tcontainsElement({ x, y }: Coords, diagramModel: DiagramModel): boolean {\\n\\t\\tconst z = diagramModel.getZoomLevel() / 100.0;\\n\\t\\tconst dimensions = this.getBoxDimensions();\\n\\n\\t\\treturn (\\n\\t\\t\\tx * z + diagramModel.getOffsetX() > dimensions.left &&\\n\\t\\t\\tx * z + diagramModel.getOffsetX() < dimensions.right &&\\n\\t\\t\\ty * z + diagramModel.getOffsetY() > dimensions.top &&\\n\\t\\t\\ty * z + diagramModel.getOffsetY() < dimensions.bottom\\n\\t\\t);\\n\\t}\\n}\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"mouseX","type":"number"},{"name":"mouseY","type":"number"}],"line":16,"jsdoctags":[{"name":"mouseX","type":"number","tagName":{"text":"param"}},{"name":"mouseY","type":"number","tagName":{"text":"param"}}]},"properties":[{"name":"dimensions","type":"literal type","optional":false,"description":"","line":9},{"name":"mouseX2","type":"number","optional":false,"description":"","line":6},{"name":"mouseY2","type":"number","optional":false,"description":"","line":7},{"name":"mouseX","type":"number","optional":false,"description":"","line":2,"inheritance":{"file":"BaseAction"}},{"name":"mouseY","type":"number","optional":false,"description":"","line":3,"inheritance":{"file":"BaseAction"}},{"name":"ms","type":"number","optional":false,"description":"","line":4,"inheritance":{"file":"BaseAction"}}],"methods":[{"name":"containsElement","args":[{"type":"Coords"},{"name":"diagramModel","type":"DiagramModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":36,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}},{"name":"diagramModel","type":"DiagramModel","tagName":{"text":"param"}}]},{"name":"getBoxDimensions","args":[],"optional":false,"returnType":"{ top: number; left: number; width: number; height: number; right: number; bottom: number; }","typeParameters":[],"line":24}],"indexSignatures":[],"extends":"BaseAction","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]},{"name":"SelectionEvent","id":"class-SelectionEvent-a1b25ab2b6c79a87bcb302a83d8d1347","file":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","sourceCode":"import { ID, UID } from \'../utils/tool-kit.util\';\\nimport { BaseEntity } from \'../base.entity\';\\n\\n// region events\\nexport class BaseEvent<T extends BaseEntity> {\\n\\tentity: T;\\n\\tentityId: ID;\\n\\tstopPropagation: () => any;\\n\\tfiring: boolean;\\n\\tid: ID;\\n\\tpropogate: boolean;\\n\\n\\tconstructor(entity: T, options?: any) {\\n\\t\\tthis.id = UID();\\n\\t\\tthis.entity = entity;\\n\\t\\tthis.entityId = entity.id;\\n\\t\\tthis.firing = true;\\n\\t\\tthis.stopPropagation = () => (this.firing = false);\\n\\t\\tthis.propogate = options ? options.propagate : null;\\n\\t}\\n}\\nexport class LockEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tlocked: boolean;\\n\\n\\tconstructor(entity: T, locked: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.locked = locked;\\n\\t}\\n}\\nexport class ParentChangeEvent<P extends BaseEntity = BaseEntity, T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tparent: P;\\n\\n\\tconstructor(entity: T, parent: P) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.parent = parent;\\n\\t}\\n}\\nexport class SelectionEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisSelected: boolean;\\n\\n\\tconstructor(entity: T, selected: boolean) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isSelected = selected;\\n\\t}\\n}\\nexport class PaintedEvent<T extends BaseEntity = BaseEntity> extends BaseEvent<T> {\\n\\tisPainted: boolean;\\n\\n\\tconstructor(entity: T, painted: boolean = false) {\\n\\t\\tsuper(entity);\\n\\t\\tthis.isPainted = painted;\\n\\t}\\n}\\n// endregion\\n","constructorObj":{"name":"constructor","description":"","args":[{"name":"entity","type":"T"},{"name":"selected","type":"boolean"}],"line":39,"jsdoctags":[{"name":"entity","type":"T","tagName":{"text":"param"}},{"name":"selected","type":"boolean","tagName":{"text":"param"}}]},"properties":[{"name":"isSelected","type":"boolean","optional":false,"description":"","line":39},{"name":"entity","type":"T","optional":false,"description":"","line":6,"inheritance":{"file":"BaseEvent"}},{"name":"entityId","type":"ID","optional":false,"description":"","line":7,"inheritance":{"file":"BaseEvent"}},{"name":"firing","type":"boolean","optional":false,"description":"","line":9,"inheritance":{"file":"BaseEvent"}},{"name":"id","type":"ID","optional":false,"description":"","line":10,"inheritance":{"file":"BaseEvent"}},{"name":"propogate","type":"boolean","optional":false,"description":"","line":11,"inheritance":{"file":"BaseEvent"}},{"name":"stopPropagation","type":"function","optional":false,"description":"","line":8,"inheritance":{"file":"BaseEvent"}}],"methods":[],"indexSignatures":[],"extends":"BaseEvent","inputsClass":[],"outputsClass":[],"hostBindings":[],"hostListeners":[]}],"directives":[],"components":[{"name":"DefaultLabelComponent","id":"component-DefaultLabelComponent-69c0c4c8e5ee715e1c52e4ec296e9346","file":"projects/ngx-diagrams/src/lib/defaults/components/default-label/default-label.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngdx-default-label","styleUrls":["./default-label.component.scss"],"styles":[],"templateUrl":["./default-label.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_label","defaultValue":"new BehaviorSubject(\'\')","type":"BehaviorSubject<string>","optional":false,"description":"","line":5,"modifierKind":[112],"inheritance":{"file":"DefaultLabelModel"}},{"name":"label$","defaultValue":"this._label.asObservable()","type":"Observable<string>","optional":false,"description":"","line":6,"inheritance":{"file":"DefaultLabelModel"}},{"name":"_coords","type":"BehaviorSubject<Coords>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_rotation","type":"BehaviorSubject<number>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"coords$","type":"Observable<Coords>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"rotation$","type":"Observable<number>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"LabelModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methodsClass":[{"name":"getLabel","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":17,"inheritance":{"file":"DefaultLabelModel"}},{"name":"selectLabel","args":[],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":21,"inheritance":{"file":"DefaultLabelModel"}},{"name":"setLabel","args":[{"name":"label","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":13,"jsdoctags":[{"name":"label","type":"string","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultLabelModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":41,"inheritance":{"file":"LabelModel"}},{"name":"getCoords","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":37,"inheritance":{"file":"LabelModel"}},{"name":"getRotation","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":33,"inheritance":{"file":"LabelModel"}},{"name":"selectCoords","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":57,"inheritance":{"file":"LabelModel"}},{"name":"selectRotation","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":49,"inheritance":{"file":"LabelModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedLabelModel","typeParameters":[],"line":24,"inheritance":{"file":"LabelModel"}},{"name":"setCoords","args":[{"name":"newCoords","type":"Partial<Coords>"}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"jsdoctags":[{"name":"newCoords","type":"Partial<Coords>","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"setRotation","args":[{"name":"angle","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":45,"jsdoctags":[{"name":"angle","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"LabelModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { DefaultLabelModel } from \'../../models/default-label.model\';\\n\\n@Component({\\n\\tselector: \'ngdx-default-label\',\\n\\ttemplateUrl: \'./default-label.component.html\',\\n\\tstyleUrls: [\'./default-label.component.scss\']\\n})\\nexport class DefaultLabelComponent extends DefaultLabelModel {\\n\\tconstructor() {\\n\\t\\tsuper(\'ngdx-default-label\');\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".default-label {\\n\\tcolor: white;\\n\\tuser-select: none;\\n}\\n","styleUrl":"./default-label.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"extends":"DefaultLabelModel","templateData":"<div\\n\\tclass=\\"default-label\\"\\n\\t[ngStyle]=\\"{\\n\\t\\ttransform:\\n\\t\\t\\t\'translate(\' +\\n\\t\\t\\t(selectCoords() | async).x +\\n\\t\\t\\t\'px, \' +\\n\\t\\t\\t(selectCoords() | async).y +\\n\\t\\t\\t\'px)\' +\\n\\t\\t\\t\'rotate(\' +\\n\\t\\t\\t(selectRotation() | async) +\\n\\t\\t\\t\'deg)\'\\n\\t}\\"\\n>\\n\\t{{ label$ | async }}\\n</div>\\n"},{"name":"DefaultLinkComponent","id":"component-DefaultLinkComponent-b987fa51906228d932167cef5c8502ba","file":"projects/ngx-diagrams/src/lib/defaults/components/default-link/default-link.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngdx-default-link","styleUrls":["./default-link.component.scss"],"styles":[],"templateUrl":["./default-link.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"_path$","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<string>","optional":false,"description":"","line":18},{"name":"label$","type":"Observable<LabelModel>","optional":false,"description":"","line":21},{"name":"labelLayer","type":"ViewContainerRef","optional":false,"description":"","line":16,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'labelLayer\', {read: ViewContainerRef, static: true}"}]},{"name":"path$","defaultValue":"this._path$.asObservable()","type":"Observable<string>","optional":false,"description":"","line":19},{"name":"points$","defaultValue":"new BehaviorSubject([])","type":"BehaviorSubject<PointModel[]>","optional":false,"description":"","line":20},{"name":"color$","type":"BehaviorSubject<string>","optional":false,"description":"","line":6,"modifierKind":[112],"inheritance":{"file":"DefaultLinkModel"}},{"name":"curvyness$","type":"BehaviorSubject<number>","optional":false,"description":"","line":7,"inheritance":{"file":"DefaultLinkModel"}},{"name":"width$","type":"BehaviorSubject<number>","optional":false,"description":"","line":5,"inheritance":{"file":"DefaultLinkModel"}},{"name":"diagramEngine","type":"DiagramEngine","optional":false,"description":"","line":13,"inheritance":{"file":"LinkModel"}},{"name":"extras","type":"any","optional":false,"description":"","line":20,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"label","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<LabelModel>","optional":false,"description":"","line":22,"modifierKind":[112,132],"inheritance":{"file":"LinkModel"}},{"name":"name","type":"string","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"points","type":"PointModel[]","optional":false,"description":"","line":19,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"sourcePort","type":"PortModel | null","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"targetPort","type":"PortModel | null","optional":false,"description":"","line":18,"modifierKind":[112],"inheritance":{"file":"LinkModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methodsClass":[{"name":"calcCenterOfPath","args":[{"name":"firstPoint","type":"Coords"},{"name":"secondPoint","type":"Coords"}],"optional":false,"returnType":"Coords","typeParameters":[],"line":91,"jsdoctags":[{"name":"firstPoint","type":"Coords","tagName":{"text":"param"}},{"name":"secondPoint","type":"Coords","tagName":{"text":"param"}}]},{"name":"calcLabelIncline","args":[{"name":"firstPoint","type":"Coords"},{"name":"secondPoint","type":"Coords"}],"optional":false,"returnType":"number","typeParameters":[],"line":74,"jsdoctags":[{"name":"firstPoint","type":"Coords","tagName":{"text":"param"}},{"name":"secondPoint","type":"Coords","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":27},{"name":"selectColor","args":[],"optional":false,"returnType":"Observable<string>","typeParameters":[],"line":28,"inheritance":{"file":"DefaultLinkModel"}},{"name":"selectWidth","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":24,"inheritance":{"file":"DefaultLinkModel"}},{"name":"setColor","args":[{"name":"color","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":20,"jsdoctags":[{"name":"color","type":"string","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultLinkModel"}},{"name":"setCurvyness","args":[{"name":"curvyness","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"curvyness","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultLinkModel"}},{"name":"setWidth","args":[{"name":"width","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":16,"jsdoctags":[{"name":"width","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultLinkModel"}},{"name":"addPoint","args":[{"name":"pointModel","type":"P"},{"name":"index","type":"number","defaultValue":"1"}],"optional":false,"returnType":"P","typeParameters":["P"],"line":219,"jsdoctags":[{"name":"pointModel","type":"P","tagName":{"text":"param"}},{"name":"index","type":"number","defaultValue":"1","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":62,"inheritance":{"file":"LinkModel"}},{"name":"doClone","args":[{"name":"lookupTable","type":"object","defaultValue":"{}"},{"name":"clone","type":""}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"jsdoctags":[{"name":"lookupTable","type":"object","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"generatePoint","args":[{"type":"Coords"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":226,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getExtras","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":54,"inheritance":{"file":"LinkModel"}},{"name":"getFirstPoint","args":[],"optional":false,"returnType":"PointModel","typeParameters":[],"line":126,"inheritance":{"file":"LinkModel"}},{"name":"getLabel","args":[],"optional":false,"returnType":"LabelModel","typeParameters":[],"line":186,"inheritance":{"file":"LinkModel"}},{"name":"getLastPoint","args":[],"optional":false,"returnType":"PointModel","typeParameters":[],"line":130,"inheritance":{"file":"LinkModel"}},{"name":"getName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":50,"inheritance":{"file":"LinkModel"}},{"name":"getPointForPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":116,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getPointIndex","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"any","typeParameters":[],"line":93,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getPointModel","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"PointModel | null","typeParameters":[],"line":97,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getPoints","args":[],"optional":false,"returnType":"PointModel[]","typeParameters":[],"line":166,"inheritance":{"file":"LinkModel"}},{"name":"getPortForPoint","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"PortModel","typeParameters":[],"line":106,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getSourcePort","args":[],"optional":false,"returnType":"PortModel","typeParameters":[],"line":144,"inheritance":{"file":"LinkModel"}},{"name":"getTargetPort","args":[],"optional":false,"returnType":"PortModel","typeParameters":[],"line":148,"inheritance":{"file":"LinkModel"}},{"name":"isLastPoint","args":[{"name":"point","type":"PointModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":88,"jsdoctags":[{"name":"point","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"point","args":[{"type":"Coords"}],"optional":false,"returnType":"PointModel","typeParameters":[],"line":162,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"removeMiddlePoints","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":213,"inheritance":{"file":"LinkModel"}},{"name":"removePoint","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":201,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"removePointsAfter","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":209,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"removePointsBefore","args":[{"name":"pointModel","type":"PointModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":205,"jsdoctags":[{"name":"pointModel","type":"PointModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"resetLabel","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":190,"inheritance":{"file":"LinkModel"}},{"name":"selectLabel","args":[],"optional":false,"returnType":"Observable<LabelModel | null>","typeParameters":[],"line":182,"inheritance":{"file":"LinkModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedLinkModel","typeParameters":[],"line":32,"inheritance":{"file":"LinkModel"}},{"name":"setExtras","args":[{"name":"extras","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":58,"jsdoctags":[{"name":"extras","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setLabel","args":[{"name":"label","type":"LabelModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":177,"jsdoctags":[{"name":"label","type":"LabelModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":230,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setName","args":[{"name":"name","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":46,"jsdoctags":[{"name":"name","type":"string","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setPoints","args":[{"name":"points","type":"PointModel[]"}],"optional":false,"returnType":"void","typeParameters":[],"line":170,"jsdoctags":[{"name":"points","type":"PointModel[]","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setSourcePort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":134,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"setTargetPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":152,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"LinkModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, AfterViewInit, ChangeDetectorRef, ViewChild, ViewContainerRef } from \'@angular/core\';\\nimport { DefaultLinkModel } from \'../../models/default-link.model\';\\nimport { generateCurvePath } from \'../../../utils/tool-kit.util\';\\nimport { combineLatest, BehaviorSubject, Observable } from \'rxjs\';\\nimport { PointModel } from \'../../../models/point.model\';\\nimport { LabelModel } from \'../../../models/label.model\';\\nimport { filter, takeUntil } from \'rxjs/operators\';\\nimport { Coords } from \'../../../interfaces\';\\n\\n@Component({\\n\\tselector: \'ngdx-default-link\',\\n\\ttemplateUrl: \'./default-link.component.html\',\\n\\tstyleUrls: [\'./default-link.component.scss\'],\\n})\\nexport class DefaultLinkComponent extends DefaultLinkModel implements AfterViewInit {\\n\\t@ViewChild(\'labelLayer\', { read: ViewContainerRef, static: true }) labelLayer: ViewContainerRef;\\n\\n\\t_path$: BehaviorSubject<string> = new BehaviorSubject(null);\\n\\tpath$: Observable<string> = this._path$.asObservable();\\n\\tpoints$: BehaviorSubject<PointModel[]> = new BehaviorSubject([]);\\n\\tlabel$: Observable<LabelModel>;\\n\\n\\tconstructor(private cdRef: ChangeDetectorRef) {\\n\\t\\tsuper({ type: \'ngdx-default-link\' });\\n\\t}\\n\\n\\tngAfterViewInit() {\\n\\t\\tconst firstPCoords$ = this.getFirstPoint().selectCoords();\\n\\t\\tconst lastPCoords$ = this.getLastPoint().selectCoords();\\n\\n\\t\\t// Observe link coords and update drawing accordingly\\n\\t\\tcombineLatest([firstPCoords$, lastPCoords$])\\n\\t\\t\\t.pipe(takeUntil(this.onEntityDestroy()))\\n\\t\\t\\t.subscribe(([firstPCoords, lastPCoords]) => {\\n\\t\\t\\t\\tconst points = [firstPCoords, lastPCoords];\\n\\n\\t\\t\\t\\tconst isHorizontal = Math.abs(firstPCoords.x - lastPCoords.x) > Math.abs(firstPCoords.y - lastPCoords.y);\\n\\t\\t\\t\\tconst xOrY = isHorizontal ? \'x\' : \'y\';\\n\\n\\t\\t\\t\\t// draw the smoothing\\n\\t\\t\\t\\t// if the points are too close, just draw a straight line\\n\\t\\t\\t\\tlet isStraight = false;\\n\\t\\t\\t\\tif (Math.abs(points[0][xOrY] - points[1][xOrY]) < 50) {\\n\\t\\t\\t\\t\\tisStraight = true;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst path = generateCurvePath(firstPCoords, lastPCoords, isStraight ? 0 : this.curvyness);\\n\\t\\t\\t\\tthis._path$.next(path);\\n\\n\\t\\t\\t\\tconst label = this.getLabel();\\n\\t\\t\\t\\t// update label position\\n\\t\\t\\t\\tif (label) {\\n\\t\\t\\t\\t\\tlabel.setCoords(this.calcCenterOfPath(firstPCoords, lastPCoords));\\n\\n\\t\\t\\t\\t\\t// TODO: check whether we want the label to rotate along with the line\\n\\t\\t\\t\\t\\t// label.setRotation(this.calcLabelIncline(firstPCoords, lastPCoords));\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// TODO: handle the multiple lines in between the points\\n\\t\\t\\t\\t// https://github.com/projectstorm/react-diagrams/blob/master/src/defaults/widgets/DefaultLinkWidget.tsx#L344-L371\\n\\n\\t\\t\\t\\tthis.cdRef.detectChanges();\\n\\t\\t\\t});\\n\\n\\t\\t// observe link label and draw/remove accordingly\\n\\t\\tthis.selectLabel()\\n\\t\\t\\t.pipe(filter(Boolean))\\n\\t\\t\\t.subscribe((label: LabelModel) => {\\n\\t\\t\\t\\tthis.diagramEngine.generateWidgetForLabel(label, this.labelLayer);\\n\\t\\t\\t\\tthis.cdRef.detectChanges();\\n\\t\\t\\t});\\n\\t}\\n\\n\\tcalcLabelIncline(firstPoint: Coords, secondPoint: Coords): number {\\n\\t\\tconst dy = secondPoint.y - firstPoint.y;\\n\\t\\tconst dx = secondPoint.x - firstPoint.x;\\n\\n\\t\\tif (dx === 0) {\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\tlet inclineAngel = (Math.atan(dy / dx) * 180) / Math.PI;\\n\\n\\t\\tif (inclineAngel < 0) {\\n\\t\\t\\tinclineAngel += 180;\\n\\t\\t}\\n\\n\\t\\treturn inclineAngel;\\n\\t}\\n\\n\\tcalcCenterOfPath(firstPoint: Coords, secondPoint: Coords): Coords {\\n\\t\\treturn { x: (firstPoint.x + secondPoint.x) / 2 + 20, y: (firstPoint.y + secondPoint.y) / 2 + 20 };\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".link-container {\\n\\tfill: none;\\n\\toverflow: visible;\\n\\tpointer-events: all;\\n}\\n\\n.default-link {\\n\\tfill: none;\\n\\toverflow: visible;\\n\\n\\t@keyframes dash {\\n\\t\\tfrom {\\n\\t\\t\\tstroke-dashoffset: 24;\\n\\t\\t}\\n\\t\\tto {\\n\\t\\t\\tstroke-dashoffset: 0;\\n\\t\\t}\\n\\t}\\n\\n\\t&.hovered {\\n\\t\\tstroke: rgb(0, 192, 255);\\n\\t\\tstroke-dasharray: 10, 2;\\n\\t\\tanimation: dash 1s linear infinite;\\n\\t}\\n}\\n\\n.default-point {\\n\\tcolor: lightgray;\\n\\toverflow: visible;\\n\\tpointer-events: all;\\n\\n\\t&.hovered {\\n\\t\\tcolor: rgb(0, 192, 255);\\n\\t}\\n}\\n","styleUrl":"./default-link.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"cdRef","type":"ChangeDetectorRef"}],"line":21,"jsdoctags":[{"name":"cdRef","type":"ChangeDetectorRef","tagName":{"text":"param"}}]},"extends":"DefaultLinkModel","implements":["AfterViewInit"],"templateData":"\x3c!-- Label Host --\x3e\\n<ng-template #labelLayer></ng-template>\\n\\n<svg class=\\"link-container\\">\\n\\t\x3c!-- Link --\x3e\\n\\t<g [id]=\\"id\\">\\n\\t\\t<path\\n\\t\\t\\t[attr.stroke-width]=\\"width\\"\\n\\t\\t\\t[attr.stroke]=\\"selectColor() | async\\"\\n\\t\\t\\t[attr.d]=\\"path$ | async\\"\\n\\t\\t\\tclass=\\"default-link\\"\\n\\t\\t\\t(mouseleave)=\\"setHovered(false)\\"\\n\\t\\t\\t(mouseenter)=\\"setHovered()\\"\\n\\t\\t\\t[ngClass]=\\"{ hovered: selectHovered() | async }\\"\\n\\t\\t></path>\\n\\t\\t<path\\n\\t\\t\\tclass=\\"default-link\\"\\n\\t\\t\\t(mouseleave)=\\"setHovered(false)\\"\\n\\t\\t\\t(mouseenter)=\\"setHovered()\\"\\n\\t\\t\\t[attr.stroke-width]=\\"20\\"\\n\\t\\t\\t[attr.stroke]=\\"selectColor() | async\\"\\n\\t\\t\\t[attr.stroke-linecap]=\\"\'round\'\\"\\n\\t\\t\\t[attr.data-linkid]=\\"id\\"\\n\\t\\t\\t[attr.stroke-opacity]=\\"(selectHovered() | async) ? \'0.1\' : \'0\'\\"\\n\\t\\t\\t[attr.d]=\\"path$ | async\\"\\n\\t\\t></path>\\n\\t</g>\\n\\n\\t\x3c!-- Points --\x3e\\n\\t<g *ngFor=\\"let point of getPoints()\\" [id]=\\"point.id\\">\\n\\t\\t<circle\\n\\t\\t\\tfill=\\"currentColor\\"\\n\\t\\t\\t[attr.cx]=\\"point.selectX() | async\\"\\n\\t\\t\\t[attr.cy]=\\"point.selectY() | async\\"\\n\\t\\t\\tr=\\"5\\"\\n\\t\\t\\tclass=\\"default-point\\"\\n\\t\\t\\t[ngClass]=\\"{ hovered: point.selectHovered() | async }\\"\\n\\t\\t/>\\n\\t\\t<circle\\n\\t\\t\\t[attr.data-pointid]=\\"point.id\\"\\n\\t\\t\\t[attr.data-linkid]=\\"id\\"\\n\\t\\t\\t(mouseleave)=\\"point.setHovered(false); setHovered(false)\\"\\n\\t\\t\\t(mouseenter)=\\"point.setHovered(); setHovered()\\"\\n\\t\\t\\t[attr.cx]=\\"point.selectX() | async\\"\\n\\t\\t\\t[attr.cy]=\\"point.selectY() | async\\"\\n\\t\\t\\tr=\\"15\\"\\n\\t\\t\\t[attr.opacity]=\\"0\\"\\n\\t\\t\\t[ngClass]=\\"{ selected: point.selectSelected() | async }\\"\\n\\t\\t/>\\n\\t</g>\\n</svg>\\n"},{"name":"DefaultNodeComponent","id":"component-DefaultNodeComponent-9366d3fbb97a08b3a09d4add29ffc4fb","file":"projects/ngx-diagrams/src/lib/defaults/components/default-node/default-node.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngdx-default-node","styleUrls":["./default-node.component.scss"],"styles":[],"templateUrl":["./default-node.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"portsLayer","type":"ViewContainerRef","optional":false,"description":"","line":12,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'portsLayer\', {read: ViewContainerRef, static: true}"}]},{"name":"color","type":"string","optional":false,"description":"","line":7,"inheritance":{"file":"DefaultNodeModel"}},{"name":"height$","type":"Observable<number>","optional":false,"description":"","line":8,"inheritance":{"file":"DefaultNodeModel"}},{"name":"name","type":"string","optional":false,"description":"","line":6,"inheritance":{"file":"DefaultNodeModel"}},{"name":"width$","type":"Observable<number>","optional":false,"description":"","line":9,"inheritance":{"file":"DefaultNodeModel"}},{"name":"_coords","type":"BehaviorSubject<Coords>","optional":false,"description":"","line":16,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_diagramEngine","type":"BehaviorSubject<DiagramEngine>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_dimensions","type":"BehaviorSubject<Dimensions>","optional":false,"description":"","line":17,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_extras","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_ports","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"coords$","type":"Observable<Coords>","optional":false,"description":"","line":20,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"dimensions$","type":"Observable<Dimensions>","optional":false,"description":"","line":21,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"extras$","type":"Observable<literal type>","optional":false,"description":"","line":18,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"ports$","type":"Observable<literal type>","optional":false,"description":"","line":19,"modifierKind":[112,132],"inheritance":{"file":"NodeModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methodsClass":[{"name":"generatePort","args":[{"name":"port","type":"DefaultPortModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":35,"jsdoctags":[{"name":"port","type":"DefaultPortModel","tagName":{"text":"param"}}]},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":18},{"name":"addInPort","args":[{"type":"literal type"}],"optional":false,"returnType":"any","typeParameters":[],"line":29,"jsdoctags":[{"type":"literal type","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultNodeModel"}},{"name":"addOutPort","args":[{"type":"literal type"}],"optional":false,"returnType":"any","typeParameters":[],"line":35,"jsdoctags":[{"type":"literal type","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultNodeModel"}},{"name":"addPort","args":[{"name":"port","type":"P"}],"optional":false,"returnType":"P","typeParameters":[],"line":178,"description":"<p>Assign a port to the node and set the node as its getParent</p>\\n","jsdoctags":[{"name":"port","type":"P","tagName":{"text":"param"}},{"tagName":{"pos":5309,"end":5316,"flags":0,"escapedText":"returns"},"comment":"<p>the inserted port</p>\\n"}],"inheritance":{"file":"NodeModel"}},{"name":"coordsChanges","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":150,"inheritance":{"file":"NodeModel"}},{"name":"dimensionChanges","args":[],"optional":false,"returnType":"Observable<Dimensions>","typeParameters":[],"line":223,"inheritance":{"file":"NodeModel"}},{"name":"getCoords","args":[],"optional":false,"returnType":"Coords","typeParameters":[],"line":57,"inheritance":{"file":"NodeModel"}},{"name":"getDiagramEngine","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":45,"inheritance":{"file":"NodeModel"}},{"name":"getDimensions","args":[],"optional":false,"returnType":"Dimensions","typeParameters":[],"line":218,"inheritance":{"file":"NodeModel"}},{"name":"getExtras","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":265,"inheritance":{"file":"NodeModel"}},{"name":"getHeight","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":227,"inheritance":{"file":"NodeModel"}},{"name":"getPort","args":[{"name":"id","type":"ID"}],"optional":false,"returnType":"P","typeParameters":[],"line":195,"jsdoctags":[{"name":"id","type":"ID","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getPorts","args":[{"name":"ids","type":"ID[]","optional":true}],"optional":false,"returnType":"literal type","typeParameters":[],"line":210,"jsdoctags":[{"name":"ids","type":"ID[]","optional":true,"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":130,"inheritance":{"file":"NodeModel"}},{"name":"getWidth","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":235,"inheritance":{"file":"NodeModel"}},{"name":"removePort","args":[{"name":"port","type":"P"}],"optional":false,"returnType":"string","typeParameters":[],"line":184,"jsdoctags":[{"name":"port","type":"P","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"selectCoords","args":[],"optional":false,"returnType":"Observable<Coords>","typeParameters":[],"line":154,"inheritance":{"file":"NodeModel"}},{"name":"selectDiagramEngine","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":49,"inheritance":{"file":"NodeModel"}},{"name":"selectExtras","args":[{"name":"selector","type":"function","optional":true,"function":[{"name":"extra","type":"E"}]}],"optional":false,"returnType":"any","typeParameters":["E"],"line":269,"jsdoctags":[{"name":"selector","type":"function","optional":true,"function":[{"name":"extra","type":"E"}],"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"selectHeight","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":252,"inheritance":{"file":"NodeModel"}},{"name":"selectPorts","args":[{"name":"selector","type":"function","optional":true,"function":[]}],"optional":false,"returnType":"Observable<P[]>","typeParameters":[],"line":199,"jsdoctags":[{"name":"selector","type":"function","optional":true,"function":[],"tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"selectWidth","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":243,"inheritance":{"file":"NodeModel"}},{"name":"selectX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":158,"inheritance":{"file":"NodeModel"}},{"name":"selectY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":166,"inheritance":{"file":"NodeModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"SerializedNodeModel","typeParameters":[],"line":75,"inheritance":{"file":"NodeModel"}},{"name":"setCoords","args":[{"type":"Coords"}],"optional":false,"returnType":"void","typeParameters":[],"line":61,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setDiagramEngine","args":[{"name":"diagramEngine","type":"DiagramEngine"}],"optional":false,"returnType":"void","typeParameters":[],"line":53,"jsdoctags":[{"name":"diagramEngine","type":"DiagramEngine","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setDimensions","args":[{"type":"Dimensions"}],"optional":false,"returnType":"void","typeParameters":[],"line":214,"jsdoctags":[{"type":"Dimensions","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setExtras","args":[{"name":"extras","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":261,"jsdoctags":[{"name":"extras","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setHeight","args":[{"name":"height","type":"number"}],"optional":false,"returnType":"any","typeParameters":[],"line":231,"jsdoctags":[{"name":"height","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"setWidth","args":[{"name":"width","type":"number"}],"optional":false,"returnType":"any","typeParameters":[],"line":239,"jsdoctags":[{"name":"width","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"transitionToCoords","args":[{"type":"Coords"}],"optional":false,"returnType":"void","typeParameters":[],"line":89,"jsdoctags":[{"type":"Coords","tagName":{"text":"param"}}],"inheritance":{"file":"NodeModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component, OnInit, ViewChild, ViewContainerRef } from \'@angular/core\';\\nimport { DefaultNodeModel } from \'../../models/default-node.model\';\\nimport { DefaultPortModel } from \'../../models\';\\nimport { filter, switchMap } from \'rxjs/operators\';\\n\\n@Component({\\n\\tselector: \'ngdx-default-node\',\\n\\ttemplateUrl: \'./default-node.component.html\',\\n\\tstyleUrls: [\'./default-node.component.scss\'],\\n})\\nexport class DefaultNodeComponent extends DefaultNodeModel implements OnInit {\\n\\t@ViewChild(\'portsLayer\', { read: ViewContainerRef, static: true }) portsLayer: ViewContainerRef;\\n\\n\\tconstructor() {\\n\\t\\tsuper({ type: \'ngdx-default-node\' });\\n\\t}\\n\\n\\tngOnInit() {\\n\\t\\t// when node is painted and port isn\'t, draw ports\\n\\n\\t\\tthis.paintChanges()\\n\\t\\t\\t.pipe(\\n\\t\\t\\t\\tfilter(paintedE => paintedE.isPainted),\\n\\t\\t\\t\\tswitchMap(() => this.selectPorts())\\n\\t\\t\\t)\\n\\t\\t\\t.subscribe(ports => {\\n\\t\\t\\t\\tports.forEach((port: DefaultPortModel) => {\\n\\t\\t\\t\\t\\tif (!port.getPainted()) {\\n\\t\\t\\t\\t\\t\\tthis.generatePort(port);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t}\\n\\n\\tgeneratePort(port: DefaultPortModel) {\\n\\t\\tconst diagramEngine = this.getDiagramEngine();\\n\\t\\tdiagramEngine.generateWidgetForPort(port, this.portsLayer);\\n\\n\\t\\tport.paintChanges().subscribe(paintedEvent => {\\n\\t\\t\\tif (paintedEvent.isPainted) {\\n\\t\\t\\t\\tport.updateCoords(diagramEngine.getPortCoords(port));\\n\\t\\t\\t}\\n\\t\\t});\\n\\t}\\n\\n\\t// https://github.com/projectstorm/react-diagrams/blob/master/src/defaults/models/DefaultNodeModel.ts\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n\\t&.selected {\\n\\t\\t.default-node {\\n\\t\\t\\tbackground-color: white !important;\\n\\t\\t\\tborder-color: blue;\\n\\t\\t}\\n\\t}\\n\\n\\t.default-node {\\n\\t\\tpointer-events: all;\\n\\t\\twidth: 100%;\\n\\t\\tborder-radius: 10px;\\n\\t\\ttransition: all 0.3s ease-in-out;\\n\\n\\t\\tcursor: auto;\\n\\t\\t.title {\\n\\t\\t\\tpadding: 10px;\\n\\t\\t\\ttext-align: center;\\n\\t\\t\\tborder-bottom: 1px solid blue;\\n\\t\\t}\\n\\t}\\n\\n\\t.ports {\\n\\t\\tflex-grow: 1;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: column;\\n\\t}\\n}\\n","styleUrl":"./default-node.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":12},"extends":"DefaultNodeModel","implements":["OnInit"],"templateData":"<div\\n\\tclass=\\"default-node\\"\\n\\t[ngStyle]=\\"{\\n\\t\\t\'height.px\': height$ | async,\\n\\t\\t\'width.px\': width$ | async,\\n\\t\\t\'background-color\': color\\n\\t}\\"\\n>\\n\\t<div class=\\"ports\\">\\n\\t\\t<ng-template #portsLayer></ng-template>\\n\\t</div>\\n</div>\\n"},{"name":"DefaultPortComponent","id":"component-DefaultPortComponent-9dd769535cb8b5e706297263fd0d919a","file":"projects/ngx-diagrams/src/lib/defaults/components/default-port/default-port.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngdx-default-port","styleUrls":["./default-port.component.scss"],"styles":[],"templateUrl":["./default-port.component.html"],"viewProviders":[],"inputsClass":[],"outputsClass":[],"propertiesClass":[{"name":"in","type":"boolean","optional":false,"description":"","line":16,"inheritance":{"file":"DefaultPortModel"}},{"name":"label","type":"string","optional":false,"description":"","line":17,"inheritance":{"file":"DefaultPortModel"}},{"name":"links","type":"literal type","optional":false,"description":"","line":18,"inheritance":{"file":"DefaultPortModel"}},{"name":"canCreateLinks$","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"height$","type":"BehaviorSubject<number>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"links$","type":"BehaviorSubject<literal type>","optional":false,"description":"","line":8,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"linkType","type":"string","optional":false,"description":"","line":10,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"magnetic$","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"maximumLinks","type":"number","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"name","type":"string","optional":false,"description":"","line":7,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"width$","type":"BehaviorSubject<number>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"x$","type":"BehaviorSubject<number>","optional":false,"description":"","line":12,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"y$","type":"BehaviorSubject<number>","optional":false,"description":"","line":13,"modifierKind":[112],"inheritance":{"file":"PortModel"}},{"name":"_hovered","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":14,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_hovered$","defaultValue":"this._hovered.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":15,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":12,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_painted$","defaultValue":"this._painted.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":13,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<X>","optional":false,"description":"","line":8,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_parent$","defaultValue":"this._parent.asObservable()","type":"Observable<X>","optional":false,"description":"","line":9,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":10,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_selected$","defaultValue":"this._selected.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":11,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_type","type":"string","optional":false,"description":"","line":7,"modifierKind":[112,132],"inheritance":{"file":"BaseModel"}},{"name":"_destroyed","defaultValue":"new Subject()","type":"Subject<null>","optional":false,"description":"","line":14,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_destroyed$","defaultValue":"this._destroyed.asObservable()","type":"Observable<null>","optional":false,"description":"","line":15,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_id","type":"ID","optional":false,"description":"","line":9,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked","defaultValue":"new BehaviorSubject(false)","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":16,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_locked$","defaultValue":"this._locked.asObservable()","type":"Observable<boolean>","optional":false,"description":"","line":17,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}},{"name":"_logPrefix","type":"string","optional":false,"description":"<p>a prefix to make logs more easier</p>\\n","line":13,"modifierKind":[112],"inheritance":{"file":"BaseEntity"}}],"methodsClass":[{"name":"canLinkToPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":58,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultPortModel"}},{"name":"createLinkModel","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":52,"inheritance":{"file":"DefaultPortModel"}},{"name":"link","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"LinkModel","typeParameters":[],"line":41,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"DefaultPortModel"}},{"name":"addLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":136,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"canLinkToPort","args":[{"name":"port","type":"PortModel"}],"optional":false,"returnType":"boolean","typeParameters":[],"line":155,"jsdoctags":[{"name":"port","type":"PortModel","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"createLinkModel","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":163,"inheritance":{"file":"PortModel"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":169,"inheritance":{"file":"PortModel"}},{"name":"getCanCreateLinks","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":56,"inheritance":{"file":"PortModel"}},{"name":"getCoords","args":[],"optional":false,"returnType":"{ x: any; y: any; }","typeParameters":[],"line":66,"inheritance":{"file":"PortModel"}},{"name":"getHeight","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":106,"inheritance":{"file":"PortModel"}},{"name":"getLinks","args":[],"optional":false,"returnType":"literal type","typeParameters":[],"line":140,"inheritance":{"file":"PortModel"}},{"name":"getLinkType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":122,"inheritance":{"file":"PortModel"}},{"name":"getMagnetic","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":78,"inheritance":{"file":"PortModel"}},{"name":"getMaximumLinks","args":[],"optional":false,"returnType":"number","typeParameters":[],"line":114,"inheritance":{"file":"PortModel"}},{"name":"getName","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":52,"inheritance":{"file":"PortModel"}},{"name":"getNode","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":48,"inheritance":{"file":"PortModel"}},{"name":"getWidth","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":110,"inheritance":{"file":"PortModel"}},{"name":"getX","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":102,"inheritance":{"file":"PortModel"}},{"name":"getY","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":98,"inheritance":{"file":"PortModel"}},{"name":"isLocked","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":159,"inheritance":{"file":"PortModel"}},{"name":"removeLink","args":[{"name":"link","type":"LinkModel"}],"optional":false,"returnType":"void","typeParameters":[],"line":130,"jsdoctags":[{"name":"link","type":"LinkModel","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"selectCanCreateLinks","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":70,"inheritance":{"file":"PortModel"}},{"name":"selectLinks","args":[],"optional":false,"returnType":"Observable<literal type>","typeParameters":[],"line":144,"inheritance":{"file":"PortModel"}},{"name":"selectMagnetic","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":82,"inheritance":{"file":"PortModel"}},{"name":"selectX","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":90,"inheritance":{"file":"PortModel"}},{"name":"selectY","args":[],"optional":false,"returnType":"Observable<number>","typeParameters":[],"line":94,"inheritance":{"file":"PortModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":33,"inheritance":{"file":"PortModel"}},{"name":"setCanCreateLinks","args":[{"name":"value","type":"boolean"}],"optional":false,"returnType":"void","typeParameters":[],"line":74,"jsdoctags":[{"name":"value","type":"boolean","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setLinkType","args":[{"name":"type","type":"string"}],"optional":false,"returnType":"void","typeParameters":[],"line":126,"jsdoctags":[{"name":"type","type":"string","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setMagnetic","args":[{"name":"magnetic","type":"boolean"}],"optional":false,"returnType":"void","typeParameters":[],"line":86,"jsdoctags":[{"name":"magnetic","type":"boolean","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"setMaximumLinks","args":[{"name":"maximumLinks","type":"number"}],"optional":false,"returnType":"void","typeParameters":[],"line":118,"jsdoctags":[{"name":"maximumLinks","type":"number","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"updateCoords","args":[{"type":"literal type"}],"optional":false,"returnType":"void","typeParameters":[],"line":148,"jsdoctags":[{"type":"literal type","tagName":{"text":"param"}}],"inheritance":{"file":"PortModel"}},{"name":"getHovered","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":52,"inheritance":{"file":"BaseModel"}},{"name":"getPainted","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":44,"inheritance":{"file":"BaseModel"}},{"name":"getParent","args":[],"optional":false,"returnType":"X","typeParameters":[],"line":29,"inheritance":{"file":"BaseModel"}},{"name":"getSelected","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":75,"inheritance":{"file":"BaseModel"}},{"name":"getSelectedEntities","args":[],"optional":false,"returnType":"BaseModel[]","typeParameters":[],"line":95,"inheritance":{"file":"BaseModel"}},{"name":"getType","args":[],"optional":false,"returnType":"string","typeParameters":[],"line":71,"inheritance":{"file":"BaseModel"}},{"name":"paintChanges","args":[],"optional":false,"returnType":"Observable<PaintedEvent>","typeParameters":[],"line":64,"inheritance":{"file":"BaseModel"}},{"name":"parentChanges","args":[],"optional":false,"returnType":"Observable<ParentChangeEvent<X>>","typeParameters":[],"line":37,"inheritance":{"file":"BaseModel"}},{"name":"selectHovered","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":60,"inheritance":{"file":"BaseModel"}},{"name":"selectionChanges","args":[],"optional":false,"returnType":"Observable<SelectionEvent>","typeParameters":[],"line":87,"inheritance":{"file":"BaseModel"}},{"name":"selectSelected","args":[],"optional":false,"returnType":"Observable<boolean>","typeParameters":[],"line":79,"inheritance":{"file":"BaseModel"}},{"name":"serialize","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":22,"inheritance":{"file":"BaseModel"}},{"name":"setHovered","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":56,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setPainted","args":[{"name":"painted","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":48,"jsdoctags":[{"name":"painted","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setParent","args":[{"name":"parent","type":"X"}],"optional":false,"returnType":"void","typeParameters":[],"line":33,"jsdoctags":[{"name":"parent","type":"X","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"setSelected","args":[{"name":"selected","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":83,"jsdoctags":[{"name":"selected","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseModel"}},{"name":"clone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"}],"optional":false,"returnType":"any","typeParameters":[],"line":53,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"destroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":82,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"doClone","args":[{"name":"lookupTable","type":"literal type","defaultValue":"{}"},{"name":"clone","type":"any"}],"optional":false,"returnType":"void","typeParameters":[],"line":49,"jsdoctags":[{"name":"lookupTable","type":"literal type","defaultValue":"{}","tagName":{"text":"param"}},{"name":"clone","type":"any","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"getLocked","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":40,"inheritance":{"file":"BaseEntity"}},{"name":"lockChanges","args":[],"optional":false,"returnType":"Observable<LockEvent>","typeParameters":[],"line":74,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"log","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"void","typeParameters":[],"line":32,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"onEntityDestroy","args":[],"optional":false,"returnType":"Observable<BaseEvent<BaseEntity>>","typeParameters":[],"line":88,"modifierKind":[114],"inheritance":{"file":"BaseEntity"}},{"name":"serialize","args":[],"optional":false,"returnType":"{ id: any; locked: boolean; }","typeParameters":[],"line":67,"inheritance":{"file":"BaseEntity"}},{"name":"setLocked","args":[{"name":"locked","type":"boolean","defaultValue":"true"}],"optional":false,"returnType":"void","typeParameters":[],"line":44,"jsdoctags":[{"name":"locked","type":"boolean","defaultValue":"true","tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}},{"name":"withLog","args":[{"name":"message","type":"string"},{"name":"args","type":"any","dotDotDotToken":true}],"optional":false,"returnType":"any","typeParameters":[],"line":36,"jsdoctags":[{"name":"message","type":"string","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}],"inheritance":{"file":"BaseEntity"}}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import { Component } from \'@angular/core\';\\nimport { DefaultPortModel } from \'../../models/default-port.model\';\\n\\n@Component({\\n\\tselector: \'ngdx-default-port\',\\n\\ttemplateUrl: \'./default-port.component.html\',\\n\\tstyleUrls: [\'./default-port.component.scss\']\\n})\\nexport class DefaultPortComponent extends DefaultPortModel {\\n\\tconstructor() {\\n\\t\\tsuper();\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\n\\tposition: relative;\\n\\twidth: 10px;\\n\\theight: 10px;\\n\\tborder-radius: 60px;\\n\\tborder: 1px solid gray;\\n\\tbackground-color: lightgray;\\n\\tmargin: 10px 0;\\n\\n\\t&:hover {\\n\\t\\tbackground-color: green;\\n\\t}\\n\\n\\t&.out {\\n\\t\\tright: -195px;\\n\\t}\\n\\n\\t&.in {\\n\\t\\tleft: -5px;\\n\\t}\\n}\\n","styleUrl":"./default-port.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[],"line":9},"extends":"DefaultPortModel","templateData":"<div [ngClass]=\\"in ? \'in\' : \'out\'\\" draggable=\\"false\\"></div>\\n"},{"name":"NgxDiagramComponent","id":"component-NgxDiagramComponent-54f92a73955074c369e850b054842ba3","file":"projects/ngx-diagrams/src/lib/containers/diagram/diagram.component.ts","changeDetection":"ChangeDetectionStrategy.OnPush","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ngdx-diagram","styleUrls":["diagram.component.scss"],"styles":[],"templateUrl":["diagram.component.html"],"viewProviders":[],"inputsClass":[{"name":"allowCanvasTranslation","defaultValue":"true","line":39},{"name":"allowCanvasZoom","defaultValue":"true","line":38},{"name":"allowLooseLinks","defaultValue":"true","line":41},{"name":"inverseZoom","defaultValue":"true","line":40},{"name":"maxZoomIn","defaultValue":"null","line":43,"type":"number"},{"name":"maxZoomOut","defaultValue":"null","line":42,"type":"number"},{"name":"model","line":37,"type":"DiagramModel"},{"name":"portMagneticRadius","defaultValue":"30","line":44}],"outputsClass":[{"name":"actionStartedFiring","defaultValue":"new EventEmitter()","line":46,"type":"EventEmitter<BaseAction>"},{"name":"actionStillFiring","defaultValue":"new EventEmitter()","line":47,"type":"EventEmitter<BaseAction>"},{"name":"actionStoppedFiring","defaultValue":"new EventEmitter()","line":48,"type":"EventEmitter<BaseAction>"}],"propertiesClass":[{"name":"action$","defaultValue":"new BehaviorSubject(null)","type":"BehaviorSubject<BaseAction>","optional":false,"description":"","line":56,"modifierKind":[112]},{"name":"canvas","type":"ElementRef","optional":false,"description":"","line":52,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'canvas\', {read: ElementRef, static: true}"}]},{"name":"destroyed$","defaultValue":"new ReplaySubject(1)","type":"ReplaySubject<boolean>","optional":false,"description":"","line":58,"modifierKind":[112]},{"name":"links$","type":"Observable<literal type>","optional":false,"description":"","line":55,"modifierKind":[112]},{"name":"linksLayer","type":"ViewContainerRef","optional":false,"description":"","line":51,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'linksLayer\', {read: ViewContainerRef, static: true}"}]},{"name":"mouseMoveListener","defaultValue":"() => {...}","type":"","optional":false,"description":"","line":61,"modifierKind":[112]},{"name":"mouseUpListener","defaultValue":"() => {...}","type":"","optional":false,"description":"","line":60,"modifierKind":[112]},{"name":"nodes$","type":"Observable<literal type>","optional":false,"description":"","line":54,"modifierKind":[112]},{"name":"nodesLayer","type":"ViewContainerRef","optional":false,"description":"","line":50,"decorators":[{"name":"ViewChild","stringifiedArguments":"\'nodesLayer\', {read: ViewContainerRef, static: true}"}]},{"name":"nodesRendered$","type":"BehaviorSubject<boolean>","optional":false,"description":"","line":57,"modifierKind":[112]},{"name":"onMouseMove","defaultValue":"() => {...}","type":"","optional":false,"description":"","line":326,"jsdoctags":[{"pos":10348,"end":10361,"flags":0,"kind":288,"atToken":{"pos":10348,"end":10349,"flags":0,"kind":57},"tagName":{"pos":10349,"end":10360,"flags":0,"escapedText":"description"},"comment":"<p>Mouse Move Event Handler</p>\\n"},{"pos":10390,"end":10416,"flags":0,"kind":292,"atToken":{"pos":10390,"end":10391,"flags":0,"kind":57},"tagName":{"pos":10391,"end":10396,"flags":0,"escapedText":"param"},"name":{"pos":10397,"end":10402,"flags":0,"escapedText":"event"},"isNameFirst":true,"isBracketed":false,"comment":"<p>MouseEvent</p>\\n"}]},{"name":"onMouseUp","defaultValue":"() => {...}","type":"","optional":false,"description":"","line":213}],"methodsClass":[{"name":"fireAction","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":131,"description":"<p>fire the action registered and notify subscribers</p>\\n"},{"name":"getMouseElement","args":[{"name":"event","type":"MouseEvent"}],"optional":false,"returnType":"literal type","typeParameters":[],"line":168,"jsdoctags":[{"name":"event","type":"MouseEvent","tagName":{"text":"param"}}]},{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":96},{"name":"ngOnDestroy","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":91},{"name":"ngOnInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":66},{"name":"onMouseDown","args":[{"name":"event","type":"MouseEvent"}],"optional":false,"returnType":"void","typeParameters":[],"line":431,"jsdoctags":[{"name":"event","type":"MouseEvent","tagName":{"text":"param"}}]},{"name":"onMouseWheel","args":[{"name":"event","type":"WheelEvent"}],"optional":false,"returnType":"void","typeParameters":[],"line":496,"jsdoctags":[{"name":"event","type":"WheelEvent","tagName":{"text":"param"}}]},{"name":"selectAction","args":[],"optional":false,"returnType":"any","typeParameters":[],"line":155},{"name":"shouldDrawSelectionBox","args":[],"optional":false,"returnType":"boolean","typeParameters":[],"line":159},{"name":"startFiringAction","args":[{"name":"action","type":"BaseAction"}],"optional":false,"returnType":"void","typeParameters":[],"line":150,"description":"<p>Register the new action, pre firing and notify subscribers</p>\\n","jsdoctags":[{"name":"action","type":"BaseAction","tagName":{"text":"param"}}]},{"name":"stopFiringAction","args":[{"name":"shouldSkipEvent","type":"boolean","optional":true}],"optional":false,"returnType":"void","typeParameters":[],"line":140,"description":"<p>Unregister the action, post firing and notify subscribers</p>\\n","jsdoctags":[{"name":"shouldSkipEvent","type":"boolean","optional":true,"tagName":{"text":"param"}}]}],"hostBindings":[],"hostListeners":[],"description":"","rawdescription":"","type":"component","sourceCode":"import {\\n\\tComponent,\\n\\tOnInit,\\n\\tInput,\\n\\tRenderer2,\\n\\tOutput,\\n\\tEventEmitter,\\n\\tViewChild,\\n\\tViewContainerRef,\\n\\tElementRef,\\n\\tAfterViewInit,\\n\\tChangeDetectionStrategy,\\n\\tChangeDetectorRef,\\n\\tOnDestroy,\\n} from \'@angular/core\';\\nimport { DiagramModel } from \'../../models/diagram.model\';\\nimport { NodeModel } from \'../../models/node.model\';\\nimport { LinkModel } from \'../../models/link.model\';\\nimport { BehaviorSubject, Observable, combineLatest, ReplaySubject } from \'rxjs\';\\nimport { filter, takeUntil } from \'rxjs/operators\';\\nimport { BaseAction, MoveCanvasAction, SelectingAction, LinkCreatedAction, InvalidLinkDestroyed } from \'../../actions\';\\nimport { BaseModel } from \'../../models/base.model\';\\nimport { MoveItemsAction } from \'../../actions/move-items.action\';\\nimport { PointModel } from \'../../models/point.model\';\\nimport { Coords } from \'../../interfaces/coords.interface\';\\nimport { PortModel } from \'../../models/port.model\';\\nimport { LooseLinkDestroyed } from \'../../actions/loose-link-destroyed.action\';\\n\\n@Component({\\n\\tselector: \'ngdx-diagram\',\\n\\ttemplateUrl: \'diagram.component.html\',\\n\\tstyleUrls: [\'diagram.component.scss\'],\\n\\tchangeDetection: ChangeDetectionStrategy.OnPush,\\n})\\nexport class NgxDiagramComponent implements OnInit, AfterViewInit, OnDestroy {\\n\\t// tslint:disable-next-line:no-input-rename\\n\\t@Input(\'model\') diagramModel: DiagramModel;\\n\\t@Input() allowCanvasZoom = true;\\n\\t@Input() allowCanvasTranslation = true;\\n\\t@Input() inverseZoom = true;\\n\\t@Input() allowLooseLinks = true;\\n\\t@Input() maxZoomOut: number = null;\\n\\t@Input() maxZoomIn: number = null;\\n\\t@Input() portMagneticRadius = 30;\\n\\n\\t@Output() actionStartedFiring: EventEmitter<BaseAction> = new EventEmitter();\\n\\t@Output() actionStillFiring: EventEmitter<BaseAction> = new EventEmitter();\\n\\t@Output() actionStoppedFiring: EventEmitter<BaseAction> = new EventEmitter();\\n\\n\\t@ViewChild(\'nodesLayer\', { read: ViewContainerRef, static: true }) nodesLayer: ViewContainerRef;\\n\\t@ViewChild(\'linksLayer\', { read: ViewContainerRef, static: true }) linksLayer: ViewContainerRef;\\n\\t@ViewChild(\'canvas\', { read: ElementRef, static: true }) canvas: ElementRef;\\n\\n\\tprivate nodes$: Observable<{ [s: string]: NodeModel }>;\\n\\tprivate links$: Observable<{ [s: string]: LinkModel }>;\\n\\tprivate action$: BehaviorSubject<BaseAction> = new BehaviorSubject(null);\\n\\tprivate nodesRendered$: BehaviorSubject<boolean>;\\n\\tprivate destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\\n\\n\\tprivate mouseUpListener = () => {};\\n\\tprivate mouseMoveListener = () => {};\\n\\n\\tconstructor(private renderer: Renderer2, private cdRef: ChangeDetectorRef) {}\\n\\n\\t// TODO: handle destruction of container, resseting all observables to avoid memory leaks!\\n\\tngOnInit() {\\n\\t\\tif (this.diagramModel) {\\n\\t\\t\\tthis.diagramModel.getDiagramEngine().setCanvas(this.canvas.nativeElement);\\n\\n\\t\\t\\tthis.nodes$ = this.diagramModel.selectNodes();\\n\\t\\t\\tthis.links$ = this.diagramModel.selectLinks();\\n\\t\\t\\tthis.nodesRendered$ = new BehaviorSubject(false);\\n\\n\\t\\t\\tthis.diagramModel.setMaxZoomIn(this.maxZoomIn);\\n\\t\\t\\tthis.diagramModel.setMaxZoomOut(this.maxZoomOut);\\n\\n\\t\\t\\tthis.nodes$.pipe(takeUntil(this.destroyed$)).subscribe(nodes => {\\n\\t\\t\\t\\tthis.nodesRendered$.next(false);\\n\\t\\t\\t\\tObject.values(nodes).forEach(node => {\\n\\t\\t\\t\\t\\tif (!node.getPainted()) {\\n\\t\\t\\t\\t\\t\\tthis.diagramModel.getDiagramEngine().generateWidgetForNode(node, this.nodesLayer);\\n\\t\\t\\t\\t\\t\\tthis.cdRef.detectChanges();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tthis.nodesRendered$.next(true);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tngOnDestroy() {\\n\\t\\tthis.destroyed$.next(true);\\n\\t\\tthis.destroyed$.complete();\\n\\t}\\n\\n\\tngAfterViewInit() {\\n\\t\\tcombineLatest([this.nodesRendered$, this.links$])\\n\\t\\t\\t.pipe(\\n\\t\\t\\t\\ttakeUntil(this.destroyed$),\\n\\t\\t\\t\\tfilter(([nodesRendered, _]) => !!nodesRendered)\\n\\t\\t\\t)\\n\\t\\t\\t.subscribe(([_, links]) => {\\n\\t\\t\\t\\tObject.values(links).forEach(link => {\\n\\t\\t\\t\\t\\tif (!link.getPainted() && link.getSourcePort().getPainted()) {\\n\\t\\t\\t\\t\\t\\tif (link.getSourcePort() !== null) {\\n\\t\\t\\t\\t\\t\\t\\tconst portCenter = this.diagramModel.getDiagramEngine().getPortCenter(link.getSourcePort());\\n\\t\\t\\t\\t\\t\\t\\tlink.getPoints()[0].setCoords(portCenter);\\n\\n\\t\\t\\t\\t\\t\\t\\tconst portCoords = this.diagramModel.getDiagramEngine().getPortCoords(link.getSourcePort());\\n\\t\\t\\t\\t\\t\\t\\tlink.getSourcePort().updateCoords(portCoords);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tif (link.getTargetPort() !== null) {\\n\\t\\t\\t\\t\\t\\t\\tconst portCenter = this.diagramModel.getDiagramEngine().getPortCenter(link.getTargetPort());\\n\\t\\t\\t\\t\\t\\t\\tlink.getPoints()[link.getPoints().length - 1].setCoords(portCenter);\\n\\n\\t\\t\\t\\t\\t\\t\\tconst portCoords = this.diagramModel.getDiagramEngine().getPortCoords(link.getTargetPort());\\n\\t\\t\\t\\t\\t\\t\\tlink.getTargetPort().updateCoords(portCoords);\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tthis.diagramModel.getDiagramEngine().generateWidgetForLink(link, this.linksLayer);\\n\\t\\t\\t\\t\\t\\tthis.cdRef.detectChanges();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t});\\n\\t}\\n\\n\\t/**\\n\\t * fire the action registered and notify subscribers\\n\\t */\\n\\tfireAction() {\\n\\t\\tif (this.action$.value) {\\n\\t\\t\\tthis.actionStillFiring.emit(this.action$.value);\\n\\t\\t}\\n\\t}\\n\\n\\t/**\\n\\t * Unregister the action, post firing and notify subscribers\\n\\t */\\n\\tstopFiringAction(shouldSkipEvent?: boolean) {\\n\\t\\tif (!shouldSkipEvent) {\\n\\t\\t\\tthis.actionStoppedFiring.emit(this.action$.value);\\n\\t\\t}\\n\\t\\tthis.action$.next(null);\\n\\t}\\n\\n\\t/**\\n\\t * Register the new action, pre firing and notify subscribers\\n\\t */\\n\\tstartFiringAction(action: BaseAction) {\\n\\t\\tthis.action$.next(action);\\n\\t\\tthis.actionStartedFiring.emit(action);\\n\\t}\\n\\n\\tselectAction() {\\n\\t\\treturn this.action$ as BehaviorSubject<SelectingAction>;\\n\\t}\\n\\n\\tshouldDrawSelectionBox() {\\n\\t\\tconst action = this.action$.getValue();\\n\\t\\tif (action instanceof SelectingAction) {\\n\\t\\t\\taction.getBoxDimensions();\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\t\\treturn false;\\n\\t}\\n\\n\\tgetMouseElement(event: MouseEvent): { model: BaseModel; element: Element } {\\n\\t\\tconst target = event.target as Element;\\n\\n\\t\\t// is it a port?\\n\\t\\tlet element = target.closest(\'[data-portid]\');\\n\\t\\tif (element) {\\n\\t\\t\\t// get the relevant node and return the port.\\n\\t\\t\\tconst nodeEl = target.closest(\'[data-nodeid]\');\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tmodel: this.diagramModel.getNode(nodeEl.getAttribute(\'data-nodeid\')).getPort(element.getAttribute(\'data-portid\')),\\n\\t\\t\\t\\telement,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// look for a point\\n\\t\\telement = target.closest(\'[data-pointid]\');\\n\\t\\tif (element) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tmodel: this.diagramModel.getLink(element.getAttribute(\'data-linkid\')).getPointModel(element.getAttribute(\'data-pointid\')),\\n\\t\\t\\t\\telement,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// look for a link\\n\\t\\telement = target.closest(\'[data-linkid]\');\\n\\t\\tif (element) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tmodel: this.diagramModel.getLink(element.getAttribute(\'data-linkid\')),\\n\\t\\t\\t\\telement,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// a node maybe\\n\\t\\telement = target.closest(\'[data-nodeid]\');\\n\\t\\tif (element) {\\n\\t\\t\\treturn {\\n\\t\\t\\t\\tmodel: this.diagramModel.getNode(element.getAttribute(\'data-nodeid\')),\\n\\t\\t\\t\\telement,\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// just the canvas\\n\\t\\treturn null;\\n\\t}\\n\\n\\tonMouseUp = (event: MouseEvent) => {\\n\\t\\tconst diagramEngine = this.diagramModel.getDiagramEngine();\\n\\t\\tconst action = this.action$.getValue();\\n\\t\\t// are we going to connect a link to something?\\n\\t\\tif (action instanceof MoveItemsAction) {\\n\\t\\t\\tconst element = this.getMouseElement(event);\\n\\t\\t\\taction.selectionModels.forEach(model => {\\n\\t\\t\\t\\t// only care about points connecting to things\\n\\t\\t\\t\\tif (!(model.model instanceof PointModel)) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tlet el: BaseModel;\\n\\t\\t\\t\\tif (model.magnet) {\\n\\t\\t\\t\\t\\tel = model.magnet;\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tel = element.model;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (el instanceof PortModel && !diagramEngine.isModelLocked(el)) {\\n\\t\\t\\t\\t\\tconst link = model.model.getLink();\\n\\t\\t\\t\\t\\tif (link.getTargetPort() !== null) {\\n\\t\\t\\t\\t\\t\\t// if this was a valid link already and we are adding a node in the middle, create 2 links from the original\\n\\t\\t\\t\\t\\t\\tif (link.getTargetPort() !== el && link.getSourcePort() !== el) {\\n\\t\\t\\t\\t\\t\\t\\tconst targetPort = link.getTargetPort();\\n\\t\\t\\t\\t\\t\\t\\tconst newLink = link.clone({});\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setSourcePort(el);\\n\\t\\t\\t\\t\\t\\t\\tnewLink.setTargetPort(targetPort);\\n\\t\\t\\t\\t\\t\\t\\tlink.setTargetPort(el);\\n\\t\\t\\t\\t\\t\\t\\ttargetPort.removeLink(link);\\n\\t\\t\\t\\t\\t\\t\\tnewLink.removePointsBefore(newLink.getPoints()[link.getPointIndex(model.model)]);\\n\\t\\t\\t\\t\\t\\t\\tlink.removePointsAfter(model.model);\\n\\t\\t\\t\\t\\t\\t\\tdiagramEngine.getDiagramModel().addLink(newLink);\\n\\t\\t\\t\\t\\t\\t\\t// if we are connecting to the same target or source, destroy tweener points\\n\\t\\t\\t\\t\\t\\t} else if (link.getTargetPort() === el) {\\n\\t\\t\\t\\t\\t\\t\\tlink.removePointsAfter(model.model);\\n\\t\\t\\t\\t\\t\\t} else if (link.getSourcePort() === el) {\\n\\t\\t\\t\\t\\t\\t\\tlink.removePointsBefore(model.model);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tlink.setTargetPort(el);\\n\\t\\t\\t\\t\\t\\tconst targetPort = link.getTargetPort();\\n\\t\\t\\t\\t\\t\\tconst srcPort = link.getSourcePort();\\n\\n\\t\\t\\t\\t\\t\\tif (targetPort.id !== srcPort.id && srcPort.canLinkToPort(targetPort)) {\\n\\t\\t\\t\\t\\t\\t\\t// link is valid, fire the event\\n\\t\\t\\t\\t\\t\\t\\tthis.startFiringAction(new LinkCreatedAction(event.clientX, event.clientY, link));\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// reset current magent\\n\\t\\t\\t\\tmodel.magnet = undefined;\\n\\t\\t\\t});\\n\\n\\t\\t\\t// check for / destroy any loose links in any models which have been moved\\n\\t\\t\\tif (!this.allowLooseLinks) {\\n\\t\\t\\t\\taction.selectionModels.forEach(model => {\\n\\t\\t\\t\\t\\t// only care about points connecting to things\\n\\t\\t\\t\\t\\tif (!(model.model instanceof PointModel)) {\\n\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tconst selectedPoint: PointModel = model.model;\\n\\t\\t\\t\\t\\tconst link: LinkModel = selectedPoint.getLink();\\n\\t\\t\\t\\t\\tif (link.getSourcePort() === null || link.getTargetPort() === null) {\\n\\t\\t\\t\\t\\t\\tlink.destroy();\\n\\t\\t\\t\\t\\t\\tthis.startFiringAction(new LooseLinkDestroyed(event.clientX, event.clientY, link));\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\t\\t\\t}\\n\\n\\t\\t\\t// destroy any invalid links\\n\\t\\t\\taction.selectionModels.forEach(model => {\\n\\t\\t\\t\\t// only care about points connecting to things\\n\\t\\t\\t\\tif (!(model.model instanceof PointModel)) {\\n\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tconst link: LinkModel = model.model.getLink();\\n\\t\\t\\t\\tconst sourcePort: PortModel = link.getSourcePort();\\n\\t\\t\\t\\tconst targetPort: PortModel = link.getTargetPort();\\n\\n\\t\\t\\t\\tif (sourcePort !== null && targetPort !== null) {\\n\\t\\t\\t\\t\\tif (!sourcePort.canLinkToPort(targetPort)) {\\n\\t\\t\\t\\t\\t\\t// link not allowed\\n\\t\\t\\t\\t\\t\\tlink.destroy();\\n\\t\\t\\t\\t\\t\\tthis.startFiringAction(new InvalidLinkDestroyed(event.clientX, event.clientY, link));\\n\\t\\t\\t\\t\\t} else if (\\n\\t\\t\\t\\t\\t\\tObject.values(targetPort.getLinks()).some(\\n\\t\\t\\t\\t\\t\\t\\t(l: LinkModel) => l !== link && (l.getSourcePort() === sourcePort || l.getTargetPort() === sourcePort)\\n\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\t// link is a duplicate\\n\\t\\t\\t\\t\\t\\tlink.destroy();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tthis.stopFiringAction();\\n\\t\\t} else {\\n\\t\\t\\tthis.stopFiringAction();\\n\\t\\t}\\n\\n\\t\\tthis.mouseUpListener();\\n\\t\\tthis.mouseMoveListener();\\n\\t\\tthis.action$.next(null);\\n\\t};\\n\\n\\t/**\\n\\t * @description Mouse Move Event Handler\\n\\t * @param event MouseEvent\\n\\t */\\n\\tonMouseMove = (event: MouseEvent) => {\\n\\t\\tconst action = this.action$.getValue();\\n\\n\\t\\tif (action === null || action === undefined) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif (action instanceof SelectingAction) {\\n\\t\\t\\tconst relative = this.diagramModel.getDiagramEngine().getRelativePoint(event.clientX, event.clientY);\\n\\n\\t\\t\\tObject.values(this.diagramModel.getNodes()).forEach(node => {\\n\\t\\t\\t\\tif ((action as SelectingAction).containsElement(node.getCoords(), this.diagramModel)) {\\n\\t\\t\\t\\t\\tnode.setSelected();\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tnode.setSelected(false);\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tObject.values(this.diagramModel.getLinks()).forEach(link => {\\n\\t\\t\\t\\tlet allSelected = true;\\n\\t\\t\\t\\tlink.getPoints().forEach(point => {\\n\\t\\t\\t\\t\\tif ((action as SelectingAction).containsElement(point.getCoords(), this.diagramModel)) {\\n\\t\\t\\t\\t\\t\\tpoint.setSelected();\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tpoint.setSelected(false);\\n\\t\\t\\t\\t\\t\\tallSelected = false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t});\\n\\n\\t\\t\\t\\tif (allSelected) {\\n\\t\\t\\t\\t\\tlink.setSelected();\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\taction.mouseX2 = relative.x;\\n\\t\\t\\taction.mouseY2 = relative.y;\\n\\n\\t\\t\\tthis.fireAction();\\n\\t\\t\\tthis.action$.next(action);\\n\\t\\t\\treturn;\\n\\t\\t} else if (action instanceof MoveItemsAction) {\\n\\t\\t\\tconst coords: Coords = {\\n\\t\\t\\t\\tx: event.clientX - action.mouseX,\\n\\t\\t\\t\\ty: event.clientY - action.mouseY,\\n\\t\\t\\t};\\n\\t\\t\\tconst amountZoom = this.diagramModel.getZoomLevel() / 100;\\n\\t\\t\\taction.selectionModels.forEach(selectionModel => {\\n\\t\\t\\t\\t// reset all previous magnets if any\\n\\t\\t\\t\\tselectionModel.magnet = undefined;\\n\\n\\t\\t\\t\\t// in this case we need to also work out the relative grid position\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\tselectionModel.model instanceof NodeModel ||\\n\\t\\t\\t\\t\\t(selectionModel.model instanceof PointModel && !selectionModel.model.isConnectedToPort())\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\tconst newCoords = { x: selectionModel.initialX + coords.x / amountZoom, y: selectionModel.initialY + coords.y / amountZoom };\\n\\t\\t\\t\\t\\tconst gridRelativeCoords = this.diagramModel.getGridPosition(newCoords);\\n\\n\\t\\t\\t\\t\\t// magnetic inputs handling\\n\\t\\t\\t\\t\\tif (selectionModel.model instanceof PointModel && this.portMagneticRadius) {\\n\\t\\t\\t\\t\\t\\t// get all ports on canvas, check distances, if smaller then defined radius, magnetize!\\n\\t\\t\\t\\t\\t\\tconst portsMap = this.diagramModel.getAllPorts({ filter: p => p.getMagnetic() });\\n\\n\\t\\t\\t\\t\\t\\tfor (const port of portsMap.values()) {\\n\\t\\t\\t\\t\\t\\t\\tconst portCoords = port.getCoords();\\n\\t\\t\\t\\t\\t\\t\\tconst distance = Math.hypot(portCoords.x - newCoords.x, portCoords.y - newCoords.y);\\n\\t\\t\\t\\t\\t\\t\\tif (distance <= this.portMagneticRadius) {\\n\\t\\t\\t\\t\\t\\t\\t\\tconst portCenter = this.diagramModel.getDiagramEngine().getPortCenter(port);\\n\\t\\t\\t\\t\\t\\t\\t\\tselectionModel.model.setCoords(portCenter);\\n\\t\\t\\t\\t\\t\\t\\t\\tselectionModel.magnet = port;\\n\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tselectionModel.model.setCoords(gridRelativeCoords);\\n\\n\\t\\t\\t\\t\\tif (selectionModel.model instanceof NodeModel) {\\n\\t\\t\\t\\t\\t\\t// update port coordinates as well\\n\\t\\t\\t\\t\\t\\tObject.values(selectionModel.model.getPorts()).forEach(port => {\\n\\t\\t\\t\\t\\t\\t\\tconst portCoords = this.diagramModel.getDiagramEngine().getPortCoords(port);\\n\\t\\t\\t\\t\\t\\t\\tport.updateCoords(portCoords);\\n\\t\\t\\t\\t\\t\\t});\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} else if (selectionModel.model instanceof PointModel) {\\n\\t\\t\\t\\t\\t// will only run here when trying to create a point on an existing link\\n\\t\\t\\t\\t\\t// we want points that are connected to ports, to not necessarily snap to grid\\n\\t\\t\\t\\t\\t// this stuff needs to be pixel perfect, dont touch it\\n\\t\\t\\t\\t\\tconst newCoords = this.diagramModel.getGridPosition({ x: coords.x / amountZoom, y: coords.y / amountZoom });\\n\\t\\t\\t\\t\\tselectionModel.model.setCoords({ x: selectionModel.initialX + newCoords.x, y: selectionModel.initialY + newCoords.y });\\n\\t\\t\\t\\t}\\n\\t\\t\\t});\\n\\n\\t\\t\\tthis.fireAction();\\n\\t\\t} else if (action instanceof MoveCanvasAction) {\\n\\t\\t\\tif (this.allowCanvasTranslation) {\\n\\t\\t\\t\\tthis.diagramModel.setOffset(\\n\\t\\t\\t\\t\\taction.initialOffsetX + (event.clientX - action.mouseX),\\n\\t\\t\\t\\t\\taction.initialOffsetY + (event.clientY - action.mouseY)\\n\\t\\t\\t\\t);\\n\\t\\t\\t\\tthis.fireAction();\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\n\\tonMouseDown(event: MouseEvent) {\\n\\t\\tif (event.button === 3) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tconst selectedModel = this.getMouseElement(event);\\n\\n\\t\\t// canvas selected\\n\\t\\tif (selectedModel === null) {\\n\\t\\t\\t// multiple selection\\n\\t\\t\\tif (event.shiftKey) {\\n\\t\\t\\t\\t// initiate multiple selection selector\\n\\t\\t\\t\\tconst relative = this.diagramModel.getDiagramEngine().getRelativePoint(event.clientX, event.clientY);\\n\\t\\t\\t\\tthis.startFiringAction(new SelectingAction(relative.x, relative.y));\\n\\t\\t\\t} else {\\n\\t\\t\\t\\t// drag canvas action\\n\\t\\t\\t\\tthis.diagramModel.clearSelection();\\n\\t\\t\\t\\tthis.startFiringAction(new MoveCanvasAction(event.clientX, event.clientY, this.diagramModel));\\n\\t\\t\\t}\\n\\t\\t} else if (selectedModel.model instanceof PortModel) {\\n\\t\\t\\t// its a port element, we want to drag a link\\n\\t\\t\\tif (!selectedModel.model.isLocked() && selectedModel.model.getCanCreateLinks()) {\\n\\t\\t\\t\\tconst relative = this.diagramModel.getDiagramEngine().getRelativeMousePoint(event);\\n\\t\\t\\t\\tconst sourcePort = selectedModel.model;\\n\\t\\t\\t\\tconst link = sourcePort.createLinkModel();\\n\\n\\t\\t\\t\\t// if we don\'t have a link then we have reached the max amount, or we cannot create new ones\\n\\t\\t\\t\\tif (link) {\\n\\t\\t\\t\\t\\tlink.setSourcePort(sourcePort);\\n\\t\\t\\t\\t\\tlink.removeMiddlePoints();\\n\\t\\t\\t\\t\\tif (link.getSourcePort() !== sourcePort) {\\n\\t\\t\\t\\t\\t\\tlink.setSourcePort(sourcePort);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tlink.setTargetPort(null);\\n\\n\\t\\t\\t\\t\\tlink.getFirstPoint().setCoords(relative);\\n\\t\\t\\t\\t\\tlink.getLastPoint().setCoords(relative);\\n\\n\\t\\t\\t\\t\\tthis.diagramModel.clearSelection();\\n\\t\\t\\t\\t\\tlink.getLastPoint().setSelected();\\n\\t\\t\\t\\t\\tthis.diagramModel.addLink(link);\\n\\n\\t\\t\\t\\t\\tthis.startFiringAction(new MoveItemsAction(event.clientX, event.clientY, this.diagramModel.getDiagramEngine()));\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tthis.diagramModel.clearSelection();\\n\\t\\t\\t}\\n\\t\\t} else if (selectedModel.model instanceof PointModel && selectedModel.model.isConnectedToPort()) {\\n\\t\\t\\tthis.diagramModel.clearSelection();\\n\\t\\t} else {\\n\\t\\t\\t// its some other element, probably want to move it\\n\\t\\t\\tif (!event.shiftKey && !selectedModel.model.getSelected()) {\\n\\t\\t\\t\\tthis.diagramModel.clearSelection();\\n\\t\\t\\t}\\n\\n\\t\\t\\tselectedModel.model.setSelected();\\n\\n\\t\\t\\tthis.startFiringAction(new MoveItemsAction(event.clientX, event.clientY, this.diagramModel.getDiagramEngine()));\\n\\t\\t}\\n\\n\\t\\t// create mouseMove and mouseUp listeners\\n\\t\\tthis.mouseMoveListener = this.renderer.listen(document, \'mousemove\', this.onMouseMove);\\n\\t\\tthis.mouseUpListener = this.renderer.listen(document, \'mouseup\', this.onMouseUp);\\n\\t}\\n\\n\\tonMouseWheel(event: WheelEvent) {\\n\\t\\tif (this.allowCanvasZoom) {\\n\\t\\t\\tevent.preventDefault();\\n\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\tconst currentZoomLevel = this.diagramModel.getZoomLevel();\\n\\n\\t\\t\\tconst oldZoomFactor = currentZoomLevel / 100;\\n\\t\\t\\tlet scrollDelta = this.inverseZoom ? -event.deltaY : event.deltaY;\\n\\n\\t\\t\\t// check if it is pinch gesture\\n\\t\\t\\tif (event.ctrlKey && scrollDelta % 1 !== 0) {\\n\\t\\t\\t\\t/* Chrome and Firefox sends wheel event with deltaY that\\n\\t\\t\\t\\t   have fractional part, also `ctrlKey` prop of the event is true\\n\\t\\t\\t\\t   though ctrl isn\'t pressed\\n\\t\\t\\t\\t*/\\n\\t\\t\\t\\tscrollDelta /= 3;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tscrollDelta /= 60;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (currentZoomLevel + scrollDelta > 10) {\\n\\t\\t\\t\\tconst newZoomLvl = currentZoomLevel + scrollDelta;\\n\\t\\t\\t\\tthis.diagramModel.setZoomLevel(newZoomLvl);\\n\\t\\t\\t}\\n\\n\\t\\t\\tconst updatedZoomLvl = this.diagramModel.getZoomLevel();\\n\\t\\t\\tconst zoomFactor = updatedZoomLvl / 100;\\n\\n\\t\\t\\tconst boundingRect = (event.currentTarget as Element).getBoundingClientRect();\\n\\t\\t\\tconst clientWidth = boundingRect.width;\\n\\t\\t\\tconst clientHeight = boundingRect.height;\\n\\n\\t\\t\\t// compute difference between rect before and after scroll\\n\\t\\t\\tconst widthDiff = clientWidth * zoomFactor - clientWidth * oldZoomFactor;\\n\\t\\t\\tconst heightDiff = clientHeight * zoomFactor - clientHeight * oldZoomFactor;\\n\\n\\t\\t\\t// compute mouse coords relative to canvas\\n\\t\\t\\tconst clientX = event.clientX - boundingRect.left;\\n\\t\\t\\tconst clientY = event.clientY - boundingRect.top;\\n\\n\\t\\t\\t// compute width and height increment factor\\n\\t\\t\\tconst xFactor = (clientX - this.diagramModel.getOffsetX()) / oldZoomFactor / clientWidth;\\n\\t\\t\\tconst yFactor = (clientY - this.diagramModel.getOffsetY()) / oldZoomFactor / clientHeight;\\n\\n\\t\\t\\tconst updatedXOffset = this.diagramModel.getOffsetX() - widthDiff * xFactor;\\n\\t\\t\\tconst updatedYOffset = this.diagramModel.getOffsetY() - heightDiff * yFactor;\\n\\n\\t\\t\\tthis.diagramModel.setOffset(updatedXOffset, updatedYOffset);\\n\\t\\t}\\n\\t}\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".ngdx-diagram {\\n\\tposition: relative;\\n\\tflex-grow: 1;\\n\\tdisplay: flex;\\n\\tcursor: move;\\n\\toverflow: hidden;\\n\\n\\t.selector {\\n\\t\\tposition: absolute;\\n\\t\\tbackground-color: rgba(0, 192, 255, 0.2);\\n\\t\\tborder: solid 2px rgb(0, 192, 255);\\n\\t}\\n\\n\\t.ngdx-nodes-layer {\\n\\t\\tposition: absolute;\\n\\t\\theight: 100%;\\n\\t\\twidth: 100%;\\n\\t\\ttransform-origin: 0 0;\\n\\t\\toverflow: visible !important;\\n\\t\\tpointer-events: none;\\n\\t\\tz-index: 150;\\n\\t\\ttop: 0;\\n\\t\\tbottom: 0;\\n\\t\\tleft: 0;\\n\\t\\tright: 0;\\n\\t}\\n\\n\\t.ngdx-links-layer {\\n\\t\\tposition: absolute;\\n\\t\\theight: 100%;\\n\\t\\twidth: 100%;\\n\\t\\ttransform-origin: 0 0;\\n\\t\\toverflow: visible !important;\\n\\t\\tpointer-events: none;\\n\\t\\tz-index: 100;\\n\\t\\ttop: 0;\\n\\t\\tbottom: 0;\\n\\t\\tleft: 0;\\n\\t\\tright: 0;\\n\\t}\\n}\\n","styleUrl":"diagram.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","args":[{"name":"renderer","type":"Renderer2"},{"name":"cdRef","type":"ChangeDetectorRef"}],"line":61,"jsdoctags":[{"name":"renderer","type":"Renderer2","tagName":{"text":"param"}},{"name":"cdRef","type":"ChangeDetectorRef","tagName":{"text":"param"}}]},"implements":["OnInit","AfterViewInit","OnDestroy"],"templateData":"<div class=\\"ngdx-diagram\\" #canvas (mousedown)=\\"onMouseDown($event)\\" (wheel)=\\"onMouseWheel($event)\\">\\n\\t\x3c!-- Nodes Layer --\x3e\\n\\t<div\\n\\t\\tclass=\\"ngdx-nodes-layer\\"\\n\\t\\t[ngStyle]=\\"{\\n\\t\\t\\ttransform:\\n\\t\\t\\t\\t\'translate(\' +\\n\\t\\t\\t\\t(diagramModel.selectOffsetX() | async) +\\n\\t\\t\\t\\t\'px, \' +\\n\\t\\t\\t\\t(diagramModel.selectOffsetY() | async) +\\n\\t\\t\\t\\t\'px) scale(\' +\\n\\t\\t\\t\\t(diagramModel.selectZoomLevel() | async) / 100.0 +\\n\\t\\t\\t\\t\')\'\\n\\t\\t}\\"\\n\\t>\\n\\t\\t<ng-template #nodesLayer></ng-template>\\n\\t</div>\\n\\n\\t\x3c!-- Links Layer --\x3e\\n\\t<div\\n\\t\\tclass=\\"ngdx-links-layer\\"\\n\\t\\t[ngStyle]=\\"{\\n\\t\\t\\ttransform:\\n\\t\\t\\t\\t\'translate(\' +\\n\\t\\t\\t\\t(diagramModel.selectOffsetX() | async) +\\n\\t\\t\\t\\t\'px, \' +\\n\\t\\t\\t\\t(diagramModel.selectOffsetY() | async) +\\n\\t\\t\\t\\t\'px) scale(\' +\\n\\t\\t\\t\\t(diagramModel.selectZoomLevel() | async) / 100.0 +\\n\\t\\t\\t\\t\')\'\\n\\t\\t}\\"\\n\\t>\\n\\t\\t<ng-template #linksLayer></ng-template>\\n\\t</div>\\n\\n\\t\x3c!-- Selection Box --\x3e\\n\\t<div\\n\\t\\t*ngIf=\\"shouldDrawSelectionBox() && selectAction() | async as action\\"\\n\\t\\tclass=\\"selector\\"\\n\\t\\t[ngStyle]=\\"{\\n\\t\\t\\ttop: action.dimensions.top + \'px\',\\n\\t\\t\\tleft: action.dimensions.left + \'px\',\\n\\t\\t\\twidth: action.dimensions.width + \'px\',\\n\\t\\t\\theight: action.dimensions.height + \'px\'\\n\\t\\t}\\"\\n\\t></div>\\n</div>\\n"}],"modules":[{"name":"DefaultLabelModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DefaultLabelComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"DefaultLabelComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DefaultLinkModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DefaultLinkComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"DefaultLinkComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DefaultNodeModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DefaultNodeComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"DefaultNodeComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"DefaultPortModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"DefaultPortComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"DefaultPortComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]},{"name":"NgxDiagramsModule","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"NgxDiagramComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"NgxDiagramComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"__DEV__","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"","defaultValue":"true"},{"name":"__LOG__","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"LOG_LEVEL","defaultValue":"LOG_LEVEL.ERROR"},{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/test.ts","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/test.ts","type":"any"},{"name":"ROUTING_SCALING_FACTOR","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/lib/utils/path-finding.util.ts","type":"number","defaultValue":"5"}],"functions":[{"name":"arrayToMap","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"arr"}],"returnType":"literal type","jsdoctags":[{"name":"arr","tagName":{"text":"param"}}]},{"name":"coerceArray","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"value"}],"returnType":"T[]","jsdoctags":[{"name":"value","tagName":{"text":"param"}}]},{"name":"enableDiagramProdMode","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"void"},{"name":"generateCurvePath","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"firstPoint"},{"name":"lastPoint"},{"name":"curvy"}],"returnType":"string","jsdoctags":[{"name":"firstPoint","tagName":{"text":"param"}},{"name":"lastPoint","tagName":{"text":"param"}},{"name":"curvy","tagName":{"text":"param"}}]},{"name":"generateLinePath","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"firstPoint","type":"any"},{"name":"lastPoint","type":"any"}],"returnType":"string","jsdoctags":[{"name":"firstPoint","type":"any","tagName":{"text":"param"}},{"name":"lastPoint","type":"any","tagName":{"text":"param"}}]},{"name":"isArray","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"val","type":"any"}],"returnType":"T[]","jsdoctags":[{"name":"val","type":"any","tagName":{"text":"param"}}]},{"name":"isDev","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"boolean"},{"name":"isFunction","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"val","type":"any"}],"returnType":"function","jsdoctags":[{"name":"val","type":"any","tagName":{"text":"param"}}]},{"name":"isNil","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"v","type":"any"}],"jsdoctags":[{"name":"v","type":"any","tagName":{"text":"param"}}]},{"name":"isString","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"val","type":"any"}],"returnType":"string","jsdoctags":[{"name":"val","type":"any","tagName":{"text":"param"}}]},{"name":"log","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"message"},{"name":"level"},{"name":"args","dotDotDotToken":true}],"returnType":"void","jsdoctags":[{"name":"message","tagName":{"text":"param"}},{"name":"level","tagName":{"text":"param"}},{"name":"args","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"mapToArray","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"map"}],"returnType":"T[]","jsdoctags":[{"name":"map","tagName":{"text":"param"}}]},{"name":"setLogLevel","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"level"}],"returnType":"void","jsdoctags":[{"name":"level","tagName":{"text":"param"}}]},{"name":"UID","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"<p>Generates a unique ID</p>\\n","args":[],"returnType":"ID"},{"name":"withLog","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"<p>rxjs log operator</p>\\n","args":[{"name":"message"},{"name":"level"},{"name":"args","type":"any","dotDotDotToken":true}],"jsdoctags":[{"name":"message","tagName":{"text":"param"}},{"name":"level","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}]}],"typealiases":[{"name":"BaseEntityType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"node\\" | \\"link\\" | \\"port\\" | \\"point\\"","file":"projects/ngx-diagrams/src/lib/base.entity.ts","description":"","kind":168},{"name":"ID","ctype":"miscellaneous","subtype":"typealias","rawtype":"string","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","description":"","kind":137}],"enumerations":[{"name":"LOG_LEVEL","childs":[{"name":"LOG"},{"name":"ERROR"}],"ctype":"miscellaneous","subtype":"enum","description":"","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts"}],"groupedVariables":{"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts":[{"name":"__DEV__","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"","defaultValue":"true"},{"name":"__LOG__","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"LOG_LEVEL","defaultValue":"LOG_LEVEL.ERROR"}],"projects/ngx-diagrams/src/test.ts":[{"name":"context","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/test.ts","type":"","defaultValue":"require.context(\'./\', true, /\\\\.spec\\\\.ts$/)"},{"name":"require","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/test.ts","type":"any"}],"projects/ngx-diagrams/src/lib/utils/path-finding.util.ts":[{"name":"ROUTING_SCALING_FACTOR","ctype":"miscellaneous","subtype":"variable","file":"projects/ngx-diagrams/src/lib/utils/path-finding.util.ts","type":"number","defaultValue":"5"}]},"groupedFunctions":{"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts":[{"name":"arrayToMap","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"arr"}],"returnType":"literal type","jsdoctags":[{"name":"arr","tagName":{"text":"param"}}]},{"name":"coerceArray","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"value"}],"returnType":"T[]","jsdoctags":[{"name":"value","tagName":{"text":"param"}}]},{"name":"enableDiagramProdMode","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"void"},{"name":"generateCurvePath","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"firstPoint"},{"name":"lastPoint"},{"name":"curvy"}],"returnType":"string","jsdoctags":[{"name":"firstPoint","tagName":{"text":"param"}},{"name":"lastPoint","tagName":{"text":"param"}},{"name":"curvy","tagName":{"text":"param"}}]},{"name":"generateLinePath","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"firstPoint","type":"any"},{"name":"lastPoint","type":"any"}],"returnType":"string","jsdoctags":[{"name":"firstPoint","type":"any","tagName":{"text":"param"}},{"name":"lastPoint","type":"any","tagName":{"text":"param"}}]},{"name":"isArray","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"val","type":"any"}],"returnType":"T[]","jsdoctags":[{"name":"val","type":"any","tagName":{"text":"param"}}]},{"name":"isDev","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[],"returnType":"boolean"},{"name":"isFunction","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"val","type":"any"}],"returnType":"function","jsdoctags":[{"name":"val","type":"any","tagName":{"text":"param"}}]},{"name":"isNil","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"v","type":"any"}],"jsdoctags":[{"name":"v","type":"any","tagName":{"text":"param"}}]},{"name":"isString","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"val","type":"any"}],"returnType":"string","jsdoctags":[{"name":"val","type":"any","tagName":{"text":"param"}}]},{"name":"log","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"message"},{"name":"level"},{"name":"args","dotDotDotToken":true}],"returnType":"void","jsdoctags":[{"name":"message","tagName":{"text":"param"}},{"name":"level","tagName":{"text":"param"}},{"name":"args","dotDotDotToken":true,"tagName":{"text":"param"}}]},{"name":"mapToArray","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"map"}],"returnType":"T[]","jsdoctags":[{"name":"map","tagName":{"text":"param"}}]},{"name":"setLogLevel","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"","args":[{"name":"level"}],"returnType":"void","jsdoctags":[{"name":"level","tagName":{"text":"param"}}]},{"name":"UID","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"<p>Generates a unique ID</p>\\n","args":[],"returnType":"ID"},{"name":"withLog","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","ctype":"miscellaneous","subtype":"function","description":"<p>rxjs log operator</p>\\n","args":[{"name":"message"},{"name":"level"},{"name":"args","type":"any","dotDotDotToken":true}],"jsdoctags":[{"name":"message","tagName":{"text":"param"}},{"name":"level","tagName":{"text":"param"}},{"name":"args","type":"any","dotDotDotToken":true,"tagName":{"text":"param"}}]}]},"groupedEnumerations":{"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts":[{"name":"LOG_LEVEL","childs":[{"name":"LOG"},{"name":"ERROR"}],"ctype":"miscellaneous","subtype":"enum","description":"","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts"}]},"groupedTypeAliases":{"projects/ngx-diagrams/src/lib/base.entity.ts":[{"name":"BaseEntityType","ctype":"miscellaneous","subtype":"typealias","rawtype":"\\"node\\" | \\"link\\" | \\"port\\" | \\"point\\"","file":"projects/ngx-diagrams/src/lib/base.entity.ts","description":"","kind":168}],"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts":[{"name":"ID","ctype":"miscellaneous","subtype":"typealias","rawtype":"string","file":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","description":"","kind":137}]}},"routes":[],"coverage":{"count":3,"status":"low","files":[{"filePath":"projects/ngx-diagrams/src/lib/actions/base.action.ts","type":"class","linktype":"classe","name":"BaseAction","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/actions/invalid-link-destroyed.action.ts","type":"class","linktype":"classe","name":"InvalidLinkDestroyed","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/actions/links-created.action.ts","type":"class","linktype":"classe","name":"LinkCreatedAction","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/actions/loose-link-destroyed.action.ts","type":"class","linktype":"classe","name":"LooseLinkDestroyed","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/actions/move-canvas.action.ts","type":"class","linktype":"classe","name":"MoveCanvasAction","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/actions/move-items.action.ts","type":"class","linktype":"classe","name":"MoveItemsAction","coveragePercent":0,"coverageCount":"0/7","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/actions/selecting.action.ts","type":"class","linktype":"classe","name":"SelectingAction","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/base.entity.ts","type":"class","linktype":"classe","name":"BaseEntity","coveragePercent":5,"coverageCount":"1/18","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/containers/diagram/diagram.component.ts","type":"component","linktype":"component","name":"NgxDiagramComponent","coveragePercent":8,"coverageCount":"3/36","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/components/default-label/default-label.component.ts","type":"component","linktype":"component","name":"DefaultLabelComponent","coveragePercent":1,"coverageCount":"1/60","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/components/default-link/default-link.component.ts","type":"component","linktype":"component","name":"DefaultLinkComponent","coveragePercent":1,"coverageCount":"1/98","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/components/default-node/default-node.component.ts","type":"component","linktype":"component","name":"DefaultNodeComponent","coveragePercent":2,"coverageCount":"2/90","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/components/default-port/default-port.component.ts","type":"component","linktype":"component","name":"DefaultPortComponent","coveragePercent":1,"coverageCount":"1/88","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/factories/default-label.factory.ts","type":"class","linktype":"classe","name":"DefaultLabelFactory","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/factories/default-link.factory.ts","type":"class","linktype":"classe","name":"DefaultLinkFactory","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/factories/default-node.factory.ts","type":"class","linktype":"classe","name":"DefaultNodeFactory","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/factories/default-port.factory.ts","type":"class","linktype":"classe","name":"DefaultPortFactory","coveragePercent":0,"coverageCount":"0/10","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/models/default-label.model.ts","type":"class","linktype":"classe","name":"DefaultLabelModel","coveragePercent":3,"coverageCount":"4/133","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/models/default-link.model.ts","type":"class","linktype":"classe","name":"DefaultLinkModel","coveragePercent":2,"coverageCount":"4/163","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/models/default-node.model.ts","type":"class","linktype":"classe","name":"DefaultNodeModel","coveragePercent":3,"coverageCount":"5/160","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/models/default-port.model.ts","type":"class","linktype":"classe","name":"DefaultPortModel","coveragePercent":2,"coverageCount":"4/161","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/defaults/models/default-port.model.ts","type":"interface","linktype":"interface","name":"DefaultPortModelConfig","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/factories/base.factory.ts","type":"class","linktype":"classe","name":"AbstractFactory","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/factories/label.factory.ts","type":"class","linktype":"classe","name":"AbstractLabelFactory","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/factories/link.factory.ts","type":"class","linktype":"classe","name":"AbstractLinkFactory","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/factories/node.factory.ts","type":"class","linktype":"classe","name":"AbstractNodeFactory","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/factories/port.factory.ts","type":"class","linktype":"classe","name":"AbstractPortFactory","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/coords.interface.ts","type":"interface","linktype":"interface","name":"Coords","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/dimensions.interface.ts","type":"interface","linktype":"interface","name":"Dimensions","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","linktype":"classe","name":"BaseEvent","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","linktype":"classe","name":"LockEvent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","linktype":"classe","name":"PaintedEvent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","linktype":"classe","name":"ParentChangeEvent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/event.interface.ts","type":"class","linktype":"classe","name":"SelectionEvent","coveragePercent":0,"coverageCount":"0/9","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/select-options.interface.ts","type":"interface","linktype":"interface","name":"SelectOptions","coveragePercent":0,"coverageCount":"0/2","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","linktype":"interface","name":"SerializedBaseModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","linktype":"interface","name":"SerializedDiagramModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","linktype":"interface","name":"SerializedLabelModel","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","linktype":"interface","name":"SerializedLinkModel","coveragePercent":0,"coverageCount":"0/8","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","linktype":"interface","name":"SerializedNodeModel","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","linktype":"interface","name":"SerializedPointModel","coveragePercent":0,"coverageCount":"0/3","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/interfaces/serialization.interface.ts","type":"interface","linktype":"interface","name":"SerializedPortModel","coveragePercent":0,"coverageCount":"0/11","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/base.model.ts","type":"class","linktype":"classe","name":"BaseModel","coveragePercent":2,"coverageCount":"1/43","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/diagram.model.ts","type":"class","linktype":"classe","name":"DiagramModel","coveragePercent":12,"coverageCount":"7/58","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/label.model.ts","type":"class","linktype":"classe","name":"LabelModel","coveragePercent":2,"coverageCount":"2/71","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/link.model.ts","type":"class","linktype":"classe","name":"LinkModel","coveragePercent":2,"coverageCount":"2/98","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/move-selection.model.ts","type":"interface","linktype":"interface","name":"SelectionModel","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/node.model.ts","type":"class","linktype":"classe","name":"NodeModel","coveragePercent":3,"coverageCount":"3/97","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/point.model.ts","type":"class","linktype":"classe","name":"PointModel","coveragePercent":2,"coverageCount":"2/70","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/models/port.model.ts","type":"class","linktype":"classe","name":"PortModel","coveragePercent":2,"coverageCount":"2/98","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/plugins/dagre-engine.plugin.ts","type":"injectable","linktype":"injectable","name":"DagreEngine","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/plugins/dagre-engine.plugin.ts","type":"interface","linktype":"interface","name":"DagreEngineOptions","coveragePercent":25,"coverageCount":"1/4","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/services/engine.service.ts","type":"injectable","linktype":"injectable","name":"DiagramEngine","coveragePercent":9,"coverageCount":"4/43","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/path-finding.util.ts","type":"class","linktype":"classe","name":"PathFinding","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/path-finding.util.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ROUTING_SCALING_FACTOR","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"arrayToMap","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"coerceArray","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"enableDiagramProdMode","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"generateCurvePath","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"generateLinePath","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"isArray","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"isDev","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"isFunction","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"isNil","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"isString","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"log","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"mapToArray","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"setLogLevel","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"UID","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"function","linksubtype":"function","name":"withLog","coveragePercent":100,"coverageCount":"1/1","status":"very-good"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"__DEV__","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/lib/utils/tool-kit.util.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"__LOG__","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"context","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/ngx-diagrams/src/test.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"require","coveragePercent":0,"coverageCount":"0/1","status":"low"}]}}')},705:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/code-brackets.2e1112d7.svg"},706:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/colors.a4bd0486.svg"},707:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/comments.a3859089.svg"},708:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/flow.edad2ac1.svg"},709:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/plugin.d494b228.svg"},710:function(module,exports,__webpack_require__){module.exports=__webpack_require__.p+"static/media/stackalt.dba9fbb3.svg"},711:function(module,exports,__webpack_require__){__webpack_require__(712),__webpack_require__(859),__webpack_require__(860),__webpack_require__(1030),__webpack_require__(1625),__webpack_require__(1627),__webpack_require__(1632),__webpack_require__(1644),__webpack_require__(1646),__webpack_require__(1648),module.exports=__webpack_require__(1653)},77:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PointModel}));var _base_model__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(107),rxjs__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(23),rxjs_operators__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(63),rxjs_operators__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(71),rxjs_operators__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(29);class PointModel extends _base_model__WEBPACK_IMPORTED_MODULE_0__.a{constructor(link,{x:x,y:y}){super(link.getType()),this._coords=new rxjs__WEBPACK_IMPORTED_MODULE_1__.a({x:x,y:y}),this.coords$=this._coords.asObservable(),this.setParent(link)}serialize(){return Object.assign(Object.assign({},super.serialize()),{coords:this.getCoords()})}isConnectedToPort(){return null!==this.getParent().getPortForPoint(this)}getLink(){return this.getParent()}destroy(){this.getParent&&this.getParent().removePoint(this),super.destroy()}setCoords(newCoords){this._coords.next(Object.assign(Object.assign({},this._coords.getValue()),newCoords))}selectCoords(){return this.coords$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__.a)(this.onEntityDestroy()),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}getCoords(){return this._coords.getValue()}selectX(){return this.selectCoords().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(c=>c.x),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}selectY(){return this.selectCoords().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__.a)(c=>c.y),Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__.a)())}}},776:function(module,exports){},79:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return LOG_LEVEL})),__webpack_require__.d(__webpack_exports__,"d",(function(){return log})),__webpack_require__.d(__webpack_exports__,"f",(function(){return withLog})),__webpack_require__.d(__webpack_exports__,"b",(function(){return UID})),__webpack_require__.d(__webpack_exports__,"e",(function(){return mapToArray})),__webpack_require__.d(__webpack_exports__,"c",(function(){return generateCurvePath}));var LOG_LEVEL,rxjs_operators__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(476);!function(LOG_LEVEL){LOG_LEVEL[LOG_LEVEL.LOG=0]="LOG",LOG_LEVEL[LOG_LEVEL.ERROR=1]="ERROR"}(LOG_LEVEL||(LOG_LEVEL={}));let __DEV__=!0,__LOG__=LOG_LEVEL.ERROR;function isDev(){return __DEV__}function log(message,level=LOG_LEVEL.LOG,...args){isDev()&&__LOG__===level&&(__LOG__===LOG_LEVEL.ERROR&&console.error(message,...args),console.log(message,...args))}function withLog(message,level=LOG_LEVEL.LOG,...args){return source=>isDev()?source.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.a)(val=>log(message,level,val,...args))):source}function UID(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,c=>{const r=16*Math.random()|0;return("x"===c?r:3&r|8).toString(16)})}function isNil(v){return null==v}function mapToArray(map){const result=[];for(const key in map)isNil(map[key])||result.push(map[key]);return result}function generateCurvePath(firstPoint,lastPoint,curvy=0){const isHorizontal=Math.abs(firstPoint.x-lastPoint.x)>Math.abs(firstPoint.y-lastPoint.y),curvyX=isHorizontal?curvy:0,curvyY=isHorizontal?0:curvy;return`M${firstPoint.x},${firstPoint.y} C ${firstPoint.x+curvyX},${firstPoint.y+curvyY}\n    ${lastPoint.x-curvyX},${lastPoint.y-curvyY} ${lastPoint.x},${lastPoint.y}`}},860:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);__webpack_require__(105)},87:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return BaseAction}));class BaseAction{constructor(mouseX,mouseY){this.mouseX=mouseX,this.mouseY=mouseY,this.ms=(new Date).getTime()}}}},[[711,1,2]]]);
//# sourceMappingURL=main.34f9d037df0c24c26eff.bundle.js.map